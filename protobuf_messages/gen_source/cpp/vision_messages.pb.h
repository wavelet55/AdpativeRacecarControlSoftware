// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vision_messages.proto

#ifndef PROTOBUF_vision_5fmessages_2eproto__INCLUDED
#define PROTOBUF_vision_5fmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace vision_messages {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_vision_5fmessages_2eproto();
void protobuf_AssignDesc_vision_5fmessages_2eproto();
void protobuf_ShutdownFile_vision_5fmessages_2eproto();

class BroadcastPBMsg;
class CameraCalControlPBMsg;
class CameraCalStatusPBMsg;
class CameraParametersSetupPBMsg;
class CameraSteeringPBMsg;
class DceEPASteeringStatusPBMsg;
class FeatureMatchProcCtrlPBMsg;
class FeatureMatchProcStatusPBMsg;
class GPSFixPBMsg;
class GeoCoordinateSystemSetupPBMsg;
class GroundTargetLocationPBMsg;
class HeadOrientationControlPBMsg;
class HeadOrientationPBMsg;
class HeadTrackingControlPBMsg;
class IMUAccelGyroDataPBMsg;
class IMUCommandResponsePBMsg;
class ImageCaptureControlPBMsg;
class ImageCaptureStatusPBMsg;
class ImageCompressionControlPBMsg;
class ImageLocationPBMsg;
class ImageLoggingControlPBMsg;
class ImageProcTargetInfoResultsPBMsg;
class KarTechLinearActuatorParamsPBMsg;
class KarTechLinearActuatorSetupPBMsg;
class LatLonXYConversionPBMsg;
class LinearActuatorPositionCtrlPBMsg;
class ListOfManagerNamesPBMsg;
class ManagerControlPBMsg;
class ManagerStatsPBMsg;
class PlaybackControlPBMsg;
class SimpleFilterVisionObjPBMsg;
class SipAndPuffPBMsg;
class SteeringTorqueCtrlPBMsg;
class StreamControlPBMsg;
class TargetInfoPBMsg;
class TargetParametersPBMsg;
class TimeSyncPBMsg;
class TrackHeadOrientationPBMsg;
class VehicleControlParametersPBMsg;
class VehicleInertialStatePBMsg;
class VidereSystemControlPBMsg;
class VisionCommandPBMsg;
class VisionMessageWrapperPBMsg;
class VisionProcessingControlPBMsg;
class VisionResponsePBMsg;

enum VisionResponsePBMsg_ResponseType_e {
  VisionResponsePBMsg_ResponseType_e_kOK = 0,
  VisionResponsePBMsg_ResponseType_e_kError = 1
};
bool VisionResponsePBMsg_ResponseType_e_IsValid(int value);
const VisionResponsePBMsg_ResponseType_e VisionResponsePBMsg_ResponseType_e_ResponseType_e_MIN = VisionResponsePBMsg_ResponseType_e_kOK;
const VisionResponsePBMsg_ResponseType_e VisionResponsePBMsg_ResponseType_e_ResponseType_e_MAX = VisionResponsePBMsg_ResponseType_e_kError;
const int VisionResponsePBMsg_ResponseType_e_ResponseType_e_ARRAYSIZE = VisionResponsePBMsg_ResponseType_e_ResponseType_e_MAX + 1;

const ::google::protobuf::EnumDescriptor* VisionResponsePBMsg_ResponseType_e_descriptor();
inline const ::std::string& VisionResponsePBMsg_ResponseType_e_Name(VisionResponsePBMsg_ResponseType_e value) {
  return ::google::protobuf::internal::NameOfEnum(
    VisionResponsePBMsg_ResponseType_e_descriptor(), value);
}
inline bool VisionResponsePBMsg_ResponseType_e_Parse(
    const ::std::string& name, VisionResponsePBMsg_ResponseType_e* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VisionResponsePBMsg_ResponseType_e>(
    VisionResponsePBMsg_ResponseType_e_descriptor(), name, value);
}
enum ImageCompressionControlPBMsg_VisionImageCompressionType_e {
  ImageCompressionControlPBMsg_VisionImageCompressionType_e_jpeg = 0,
  ImageCompressionControlPBMsg_VisionImageCompressionType_e_mpeg = 1,
  ImageCompressionControlPBMsg_VisionImageCompressionType_e_gif = 2
};
bool ImageCompressionControlPBMsg_VisionImageCompressionType_e_IsValid(int value);
const ImageCompressionControlPBMsg_VisionImageCompressionType_e ImageCompressionControlPBMsg_VisionImageCompressionType_e_VisionImageCompressionType_e_MIN = ImageCompressionControlPBMsg_VisionImageCompressionType_e_jpeg;
const ImageCompressionControlPBMsg_VisionImageCompressionType_e ImageCompressionControlPBMsg_VisionImageCompressionType_e_VisionImageCompressionType_e_MAX = ImageCompressionControlPBMsg_VisionImageCompressionType_e_gif;
const int ImageCompressionControlPBMsg_VisionImageCompressionType_e_VisionImageCompressionType_e_ARRAYSIZE = ImageCompressionControlPBMsg_VisionImageCompressionType_e_VisionImageCompressionType_e_MAX + 1;

const ::google::protobuf::EnumDescriptor* ImageCompressionControlPBMsg_VisionImageCompressionType_e_descriptor();
inline const ::std::string& ImageCompressionControlPBMsg_VisionImageCompressionType_e_Name(ImageCompressionControlPBMsg_VisionImageCompressionType_e value) {
  return ::google::protobuf::internal::NameOfEnum(
    ImageCompressionControlPBMsg_VisionImageCompressionType_e_descriptor(), value);
}
inline bool ImageCompressionControlPBMsg_VisionImageCompressionType_e_Parse(
    const ::std::string& name, ImageCompressionControlPBMsg_VisionImageCompressionType_e* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImageCompressionControlPBMsg_VisionImageCompressionType_e>(
    ImageCompressionControlPBMsg_VisionImageCompressionType_e_descriptor(), name, value);
}
enum ImageLoggingControlPBMsg_VisionLoggingType_e {
  ImageLoggingControlPBMsg_VisionLoggingType_e_LogMetaDataOnly = 0,
  ImageLoggingControlPBMsg_VisionLoggingType_e_LogRawImages = 1,
  ImageLoggingControlPBMsg_VisionLoggingType_e_LogCompressedImages = 2
};
bool ImageLoggingControlPBMsg_VisionLoggingType_e_IsValid(int value);
const ImageLoggingControlPBMsg_VisionLoggingType_e ImageLoggingControlPBMsg_VisionLoggingType_e_VisionLoggingType_e_MIN = ImageLoggingControlPBMsg_VisionLoggingType_e_LogMetaDataOnly;
const ImageLoggingControlPBMsg_VisionLoggingType_e ImageLoggingControlPBMsg_VisionLoggingType_e_VisionLoggingType_e_MAX = ImageLoggingControlPBMsg_VisionLoggingType_e_LogCompressedImages;
const int ImageLoggingControlPBMsg_VisionLoggingType_e_VisionLoggingType_e_ARRAYSIZE = ImageLoggingControlPBMsg_VisionLoggingType_e_VisionLoggingType_e_MAX + 1;

const ::google::protobuf::EnumDescriptor* ImageLoggingControlPBMsg_VisionLoggingType_e_descriptor();
inline const ::std::string& ImageLoggingControlPBMsg_VisionLoggingType_e_Name(ImageLoggingControlPBMsg_VisionLoggingType_e value) {
  return ::google::protobuf::internal::NameOfEnum(
    ImageLoggingControlPBMsg_VisionLoggingType_e_descriptor(), value);
}
inline bool ImageLoggingControlPBMsg_VisionLoggingType_e_Parse(
    const ::std::string& name, ImageLoggingControlPBMsg_VisionLoggingType_e* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImageLoggingControlPBMsg_VisionLoggingType_e>(
    ImageLoggingControlPBMsg_VisionLoggingType_e_descriptor(), name, value);
}
enum GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e {
  GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_Linear = 0,
  GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_WGS84_Relative = 1,
  GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_WGS84_Map = 2
};
bool GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_IsValid(int value);
const GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_GeoCoordinateSystemConversionType_e_MIN = GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_Linear;
const GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_GeoCoordinateSystemConversionType_e_MAX = GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_WGS84_Map;
const int GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_GeoCoordinateSystemConversionType_e_ARRAYSIZE = GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_GeoCoordinateSystemConversionType_e_MAX + 1;

const ::google::protobuf::EnumDescriptor* GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_descriptor();
inline const ::std::string& GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_Name(GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e value) {
  return ::google::protobuf::internal::NameOfEnum(
    GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_descriptor(), value);
}
inline bool GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_Parse(
    const ::std::string& name, GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e>(
    GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_descriptor(), name, value);
}
enum VisionProcessingControlPBMsg_VisionProcessingModeEnum {
  VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_None = 0,
  VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_Target = 1,
  VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_GPSDenied = 2,
  VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_CameraCalibration = 3,
  VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_FeatureMatchProc = 4,
  VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_HeadTrackingProc = 5,
  VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_HeadOrientationCalProc = 6
};
bool VisionProcessingControlPBMsg_VisionProcessingModeEnum_IsValid(int value);
const VisionProcessingControlPBMsg_VisionProcessingModeEnum VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcessingModeEnum_MIN = VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_None;
const VisionProcessingControlPBMsg_VisionProcessingModeEnum VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcessingModeEnum_MAX = VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_HeadOrientationCalProc;
const int VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcessingModeEnum_ARRAYSIZE = VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcessingModeEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* VisionProcessingControlPBMsg_VisionProcessingModeEnum_descriptor();
inline const ::std::string& VisionProcessingControlPBMsg_VisionProcessingModeEnum_Name(VisionProcessingControlPBMsg_VisionProcessingModeEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    VisionProcessingControlPBMsg_VisionProcessingModeEnum_descriptor(), value);
}
inline bool VisionProcessingControlPBMsg_VisionProcessingModeEnum_Parse(
    const ::std::string& name, VisionProcessingControlPBMsg_VisionProcessingModeEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VisionProcessingControlPBMsg_VisionProcessingModeEnum>(
    VisionProcessingControlPBMsg_VisionProcessingModeEnum_descriptor(), name, value);
}
enum VisionProcessingControlPBMsg_TargetProcessingModeEnum {
  VisionProcessingControlPBMsg_TargetProcessingModeEnum_TgtProcMode_None = 0,
  VisionProcessingControlPBMsg_TargetProcessingModeEnum_TgtProcMode_Std = 1,
  VisionProcessingControlPBMsg_TargetProcessingModeEnum_TgtProcMode_Blob = 2,
  VisionProcessingControlPBMsg_TargetProcessingModeEnum_TgtProcMode_CheckerBoard = 3
};
bool VisionProcessingControlPBMsg_TargetProcessingModeEnum_IsValid(int value);
const VisionProcessingControlPBMsg_TargetProcessingModeEnum VisionProcessingControlPBMsg_TargetProcessingModeEnum_TargetProcessingModeEnum_MIN = VisionProcessingControlPBMsg_TargetProcessingModeEnum_TgtProcMode_None;
const VisionProcessingControlPBMsg_TargetProcessingModeEnum VisionProcessingControlPBMsg_TargetProcessingModeEnum_TargetProcessingModeEnum_MAX = VisionProcessingControlPBMsg_TargetProcessingModeEnum_TgtProcMode_CheckerBoard;
const int VisionProcessingControlPBMsg_TargetProcessingModeEnum_TargetProcessingModeEnum_ARRAYSIZE = VisionProcessingControlPBMsg_TargetProcessingModeEnum_TargetProcessingModeEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* VisionProcessingControlPBMsg_TargetProcessingModeEnum_descriptor();
inline const ::std::string& VisionProcessingControlPBMsg_TargetProcessingModeEnum_Name(VisionProcessingControlPBMsg_TargetProcessingModeEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    VisionProcessingControlPBMsg_TargetProcessingModeEnum_descriptor(), value);
}
inline bool VisionProcessingControlPBMsg_TargetProcessingModeEnum_Parse(
    const ::std::string& name, VisionProcessingControlPBMsg_TargetProcessingModeEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VisionProcessingControlPBMsg_TargetProcessingModeEnum>(
    VisionProcessingControlPBMsg_TargetProcessingModeEnum_descriptor(), name, value);
}
enum VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum {
  VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_GpsDeniedMode_None = 0,
  VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_GpsDeniedMode_Std = 1
};
bool VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_IsValid(int value);
const VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_GPSDeniedProcessingModeEnum_MIN = VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_GpsDeniedMode_None;
const VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_GPSDeniedProcessingModeEnum_MAX = VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_GpsDeniedMode_Std;
const int VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_GPSDeniedProcessingModeEnum_ARRAYSIZE = VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_GPSDeniedProcessingModeEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_descriptor();
inline const ::std::string& VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_Name(VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_descriptor(), value);
}
inline bool VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_Parse(
    const ::std::string& name, VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum>(
    VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_descriptor(), name, value);
}
enum CameraCalControlPBMsg_CameraCalibrationType_e {
  CameraCalControlPBMsg_CameraCalibrationType_e_CameraCal_2DPlaneCheckerBoard = 0
};
bool CameraCalControlPBMsg_CameraCalibrationType_e_IsValid(int value);
const CameraCalControlPBMsg_CameraCalibrationType_e CameraCalControlPBMsg_CameraCalibrationType_e_CameraCalibrationType_e_MIN = CameraCalControlPBMsg_CameraCalibrationType_e_CameraCal_2DPlaneCheckerBoard;
const CameraCalControlPBMsg_CameraCalibrationType_e CameraCalControlPBMsg_CameraCalibrationType_e_CameraCalibrationType_e_MAX = CameraCalControlPBMsg_CameraCalibrationType_e_CameraCal_2DPlaneCheckerBoard;
const int CameraCalControlPBMsg_CameraCalibrationType_e_CameraCalibrationType_e_ARRAYSIZE = CameraCalControlPBMsg_CameraCalibrationType_e_CameraCalibrationType_e_MAX + 1;

const ::google::protobuf::EnumDescriptor* CameraCalControlPBMsg_CameraCalibrationType_e_descriptor();
inline const ::std::string& CameraCalControlPBMsg_CameraCalibrationType_e_Name(CameraCalControlPBMsg_CameraCalibrationType_e value) {
  return ::google::protobuf::internal::NameOfEnum(
    CameraCalControlPBMsg_CameraCalibrationType_e_descriptor(), value);
}
inline bool CameraCalControlPBMsg_CameraCalibrationType_e_Parse(
    const ::std::string& name, CameraCalControlPBMsg_CameraCalibrationType_e* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CameraCalControlPBMsg_CameraCalibrationType_e>(
    CameraCalControlPBMsg_CameraCalibrationType_e_descriptor(), name, value);
}
enum CameraCalControlPBMsg_CameraCalCmd_e {
  CameraCalControlPBMsg_CameraCalCmd_e_NullCmd = 0,
  CameraCalControlPBMsg_CameraCalCmd_e_Reset = 1,
  CameraCalControlPBMsg_CameraCalCmd_e_ClearImageSet = 2,
  CameraCalControlPBMsg_CameraCalCmd_e_StreamImages = 3,
  CameraCalControlPBMsg_CameraCalCmd_e_CaptureImage = 4,
  CameraCalControlPBMsg_CameraCalCmd_e_SetImageOk = 5,
  CameraCalControlPBMsg_CameraCalCmd_e_RejectImage = 6,
  CameraCalControlPBMsg_CameraCalCmd_e_RunCalProcess = 7
};
bool CameraCalControlPBMsg_CameraCalCmd_e_IsValid(int value);
const CameraCalControlPBMsg_CameraCalCmd_e CameraCalControlPBMsg_CameraCalCmd_e_CameraCalCmd_e_MIN = CameraCalControlPBMsg_CameraCalCmd_e_NullCmd;
const CameraCalControlPBMsg_CameraCalCmd_e CameraCalControlPBMsg_CameraCalCmd_e_CameraCalCmd_e_MAX = CameraCalControlPBMsg_CameraCalCmd_e_RunCalProcess;
const int CameraCalControlPBMsg_CameraCalCmd_e_CameraCalCmd_e_ARRAYSIZE = CameraCalControlPBMsg_CameraCalCmd_e_CameraCalCmd_e_MAX + 1;

const ::google::protobuf::EnumDescriptor* CameraCalControlPBMsg_CameraCalCmd_e_descriptor();
inline const ::std::string& CameraCalControlPBMsg_CameraCalCmd_e_Name(CameraCalControlPBMsg_CameraCalCmd_e value) {
  return ::google::protobuf::internal::NameOfEnum(
    CameraCalControlPBMsg_CameraCalCmd_e_descriptor(), value);
}
inline bool CameraCalControlPBMsg_CameraCalCmd_e_Parse(
    const ::std::string& name, CameraCalControlPBMsg_CameraCalCmd_e* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CameraCalControlPBMsg_CameraCalCmd_e>(
    CameraCalControlPBMsg_CameraCalCmd_e_descriptor(), name, value);
}
enum CameraCalStatusPBMsg_CameraCalState_e {
  CameraCalStatusPBMsg_CameraCalState_e_Reset = 0,
  CameraCalStatusPBMsg_CameraCalState_e_WaitForStart = 1,
  CameraCalStatusPBMsg_CameraCalState_e_StreamImages = 2,
  CameraCalStatusPBMsg_CameraCalState_e_ImageValidate = 3,
  CameraCalStatusPBMsg_CameraCalState_e_ImageCapturedWait = 4,
  CameraCalStatusPBMsg_CameraCalState_e_CalProcess = 5,
  CameraCalStatusPBMsg_CameraCalState_e_CalComplete = 6,
  CameraCalStatusPBMsg_CameraCalState_e_CalError = 7
};
bool CameraCalStatusPBMsg_CameraCalState_e_IsValid(int value);
const CameraCalStatusPBMsg_CameraCalState_e CameraCalStatusPBMsg_CameraCalState_e_CameraCalState_e_MIN = CameraCalStatusPBMsg_CameraCalState_e_Reset;
const CameraCalStatusPBMsg_CameraCalState_e CameraCalStatusPBMsg_CameraCalState_e_CameraCalState_e_MAX = CameraCalStatusPBMsg_CameraCalState_e_CalError;
const int CameraCalStatusPBMsg_CameraCalState_e_CameraCalState_e_ARRAYSIZE = CameraCalStatusPBMsg_CameraCalState_e_CameraCalState_e_MAX + 1;

const ::google::protobuf::EnumDescriptor* CameraCalStatusPBMsg_CameraCalState_e_descriptor();
inline const ::std::string& CameraCalStatusPBMsg_CameraCalState_e_Name(CameraCalStatusPBMsg_CameraCalState_e value) {
  return ::google::protobuf::internal::NameOfEnum(
    CameraCalStatusPBMsg_CameraCalState_e_descriptor(), value);
}
inline bool CameraCalStatusPBMsg_CameraCalState_e_Parse(
    const ::std::string& name, CameraCalStatusPBMsg_CameraCalState_e* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CameraCalStatusPBMsg_CameraCalState_e>(
    CameraCalStatusPBMsg_CameraCalState_e_descriptor(), name, value);
}
enum ImageCaptureSource_e {
  ImageCaptureSource_NoChange = 0,
  ImageCaptureSource_OpenCVWebCam = 1,
  ImageCaptureSource_IPMFiles = 2,
  ImageCaptureSource_CImageFiles = 3,
  ImageCaptureSource_Sensoray2253 = 4,
  ImageCaptureSource_NVidiaCSI = 5,
  ImageCaptureSource_VideoFile = 6
};
bool ImageCaptureSource_e_IsValid(int value);
const ImageCaptureSource_e ImageCaptureSource_e_MIN = ImageCaptureSource_NoChange;
const ImageCaptureSource_e ImageCaptureSource_e_MAX = ImageCaptureSource_VideoFile;
const int ImageCaptureSource_e_ARRAYSIZE = ImageCaptureSource_e_MAX + 1;

const ::google::protobuf::EnumDescriptor* ImageCaptureSource_e_descriptor();
inline const ::std::string& ImageCaptureSource_e_Name(ImageCaptureSource_e value) {
  return ::google::protobuf::internal::NameOfEnum(
    ImageCaptureSource_e_descriptor(), value);
}
inline bool ImageCaptureSource_e_Parse(
    const ::std::string& name, ImageCaptureSource_e* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImageCaptureSource_e>(
    ImageCaptureSource_e_descriptor(), name, value);
}
enum CPImageCaptureFormat_e {
  Unknown = 0,
  Grey8 = 1,
  Grey16 = 2,
  RGB24 = 3,
  BGR24 = 4,
  MJPEG = 5,
  YUV422 = 6
};
bool CPImageCaptureFormat_e_IsValid(int value);
const CPImageCaptureFormat_e CPImageCaptureFormat_e_MIN = Unknown;
const CPImageCaptureFormat_e CPImageCaptureFormat_e_MAX = YUV422;
const int CPImageCaptureFormat_e_ARRAYSIZE = CPImageCaptureFormat_e_MAX + 1;

const ::google::protobuf::EnumDescriptor* CPImageCaptureFormat_e_descriptor();
inline const ::std::string& CPImageCaptureFormat_e_Name(CPImageCaptureFormat_e value) {
  return ::google::protobuf::internal::NameOfEnum(
    CPImageCaptureFormat_e_descriptor(), value);
}
inline bool CPImageCaptureFormat_e_Parse(
    const ::std::string& name, CPImageCaptureFormat_e* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CPImageCaptureFormat_e>(
    CPImageCaptureFormat_e_descriptor(), name, value);
}
enum ImageCaptureError_e {
  ImageCaptureError_None = 0,
  ImageCaptureError_SourceConfig = 1,
  ImageCaptureError_SourceCapture = 2
};
bool ImageCaptureError_e_IsValid(int value);
const ImageCaptureError_e ImageCaptureError_e_MIN = ImageCaptureError_None;
const ImageCaptureError_e ImageCaptureError_e_MAX = ImageCaptureError_SourceCapture;
const int ImageCaptureError_e_ARRAYSIZE = ImageCaptureError_e_MAX + 1;

const ::google::protobuf::EnumDescriptor* ImageCaptureError_e_descriptor();
inline const ::std::string& ImageCaptureError_e_Name(ImageCaptureError_e value) {
  return ::google::protobuf::internal::NameOfEnum(
    ImageCaptureError_e_descriptor(), value);
}
inline bool ImageCaptureError_e_Parse(
    const ::std::string& name, ImageCaptureError_e* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImageCaptureError_e>(
    ImageCaptureError_e_descriptor(), name, value);
}
// ===================================================================

class VisionMessageWrapperPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.VisionMessageWrapperPBMsg) */ {
 public:
  VisionMessageWrapperPBMsg();
  virtual ~VisionMessageWrapperPBMsg();

  VisionMessageWrapperPBMsg(const VisionMessageWrapperPBMsg& from);

  inline VisionMessageWrapperPBMsg& operator=(const VisionMessageWrapperPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VisionMessageWrapperPBMsg& default_instance();

  void Swap(VisionMessageWrapperPBMsg* other);

  // implements Message ----------------------------------------------

  inline VisionMessageWrapperPBMsg* New() const { return New(NULL); }

  VisionMessageWrapperPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VisionMessageWrapperPBMsg& from);
  void MergeFrom(const VisionMessageWrapperPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VisionMessageWrapperPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string MsgName = 1;
  bool has_msgname() const;
  void clear_msgname();
  static const int kMsgNameFieldNumber = 1;
  const ::std::string& msgname() const;
  void set_msgname(const ::std::string& value);
  void set_msgname(const char* value);
  void set_msgname(const char* value, size_t size);
  ::std::string* mutable_msgname();
  ::std::string* release_msgname();
  void set_allocated_msgname(::std::string* msgname);

  // optional string MsgQualifier = 2;
  bool has_msgqualifier() const;
  void clear_msgqualifier();
  static const int kMsgQualifierFieldNumber = 2;
  const ::std::string& msgqualifier() const;
  void set_msgqualifier(const ::std::string& value);
  void set_msgqualifier(const char* value);
  void set_msgqualifier(const char* value, size_t size);
  ::std::string* mutable_msgqualifier();
  ::std::string* release_msgqualifier();
  void set_allocated_msgqualifier(::std::string* msgqualifier);

  // optional bytes MsgData = 3;
  bool has_msgdata() const;
  void clear_msgdata();
  static const int kMsgDataFieldNumber = 3;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // optional uint32 MsgDataSize = 4;
  bool has_msgdatasize() const;
  void clear_msgdatasize();
  static const int kMsgDataSizeFieldNumber = 4;
  ::google::protobuf::uint32 msgdatasize() const;
  void set_msgdatasize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vision_messages.VisionMessageWrapperPBMsg)
 private:
  inline void set_has_msgname();
  inline void clear_has_msgname();
  inline void set_has_msgqualifier();
  inline void clear_has_msgqualifier();
  inline void set_has_msgdata();
  inline void clear_has_msgdata();
  inline void set_has_msgdatasize();
  inline void clear_has_msgdatasize();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msgname_;
  ::google::protobuf::internal::ArenaStringPtr msgqualifier_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint32 msgdatasize_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static VisionMessageWrapperPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class VisionCommandPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.VisionCommandPBMsg) */ {
 public:
  VisionCommandPBMsg();
  virtual ~VisionCommandPBMsg();

  VisionCommandPBMsg(const VisionCommandPBMsg& from);

  inline VisionCommandPBMsg& operator=(const VisionCommandPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VisionCommandPBMsg& default_instance();

  void Swap(VisionCommandPBMsg* other);

  // implements Message ----------------------------------------------

  inline VisionCommandPBMsg* New() const { return New(NULL); }

  VisionCommandPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VisionCommandPBMsg& from);
  void MergeFrom(const VisionCommandPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VisionCommandPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string Command = 1;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  void set_command(const char* value);
  void set_command(const char* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // optional string CmdQualifier = 2;
  bool has_cmdqualifier() const;
  void clear_cmdqualifier();
  static const int kCmdQualifierFieldNumber = 2;
  const ::std::string& cmdqualifier() const;
  void set_cmdqualifier(const ::std::string& value);
  void set_cmdqualifier(const char* value);
  void set_cmdqualifier(const char* value, size_t size);
  ::std::string* mutable_cmdqualifier();
  ::std::string* release_cmdqualifier();
  void set_allocated_cmdqualifier(::std::string* cmdqualifier);

  // optional bytes CmdData = 3;
  bool has_cmddata() const;
  void clear_cmddata();
  static const int kCmdDataFieldNumber = 3;
  const ::std::string& cmddata() const;
  void set_cmddata(const ::std::string& value);
  void set_cmddata(const char* value);
  void set_cmddata(const void* value, size_t size);
  ::std::string* mutable_cmddata();
  ::std::string* release_cmddata();
  void set_allocated_cmddata(::std::string* cmddata);

  // @@protoc_insertion_point(class_scope:vision_messages.VisionCommandPBMsg)
 private:
  inline void set_has_command();
  inline void clear_has_command();
  inline void set_has_cmdqualifier();
  inline void clear_has_cmdqualifier();
  inline void set_has_cmddata();
  inline void clear_has_cmddata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  ::google::protobuf::internal::ArenaStringPtr cmdqualifier_;
  ::google::protobuf::internal::ArenaStringPtr cmddata_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static VisionCommandPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class VisionResponsePBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.VisionResponsePBMsg) */ {
 public:
  VisionResponsePBMsg();
  virtual ~VisionResponsePBMsg();

  VisionResponsePBMsg(const VisionResponsePBMsg& from);

  inline VisionResponsePBMsg& operator=(const VisionResponsePBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VisionResponsePBMsg& default_instance();

  void Swap(VisionResponsePBMsg* other);

  // implements Message ----------------------------------------------

  inline VisionResponsePBMsg* New() const { return New(NULL); }

  VisionResponsePBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VisionResponsePBMsg& from);
  void MergeFrom(const VisionResponsePBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VisionResponsePBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef VisionResponsePBMsg_ResponseType_e ResponseType_e;
  static const ResponseType_e kOK =
    VisionResponsePBMsg_ResponseType_e_kOK;
  static const ResponseType_e kError =
    VisionResponsePBMsg_ResponseType_e_kError;
  static inline bool ResponseType_e_IsValid(int value) {
    return VisionResponsePBMsg_ResponseType_e_IsValid(value);
  }
  static const ResponseType_e ResponseType_e_MIN =
    VisionResponsePBMsg_ResponseType_e_ResponseType_e_MIN;
  static const ResponseType_e ResponseType_e_MAX =
    VisionResponsePBMsg_ResponseType_e_ResponseType_e_MAX;
  static const int ResponseType_e_ARRAYSIZE =
    VisionResponsePBMsg_ResponseType_e_ResponseType_e_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_e_descriptor() {
    return VisionResponsePBMsg_ResponseType_e_descriptor();
  }
  static inline const ::std::string& ResponseType_e_Name(ResponseType_e value) {
    return VisionResponsePBMsg_ResponseType_e_Name(value);
  }
  static inline bool ResponseType_e_Parse(const ::std::string& name,
      ResponseType_e* value) {
    return VisionResponsePBMsg_ResponseType_e_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .vision_messages.VisionResponsePBMsg.ResponseType_e CmdResponseType = 1;
  bool has_cmdresponsetype() const;
  void clear_cmdresponsetype();
  static const int kCmdResponseTypeFieldNumber = 1;
  ::vision_messages::VisionResponsePBMsg_ResponseType_e cmdresponsetype() const;
  void set_cmdresponsetype(::vision_messages::VisionResponsePBMsg_ResponseType_e value);

  // optional string CmdResponseMessage = 2;
  bool has_cmdresponsemessage() const;
  void clear_cmdresponsemessage();
  static const int kCmdResponseMessageFieldNumber = 2;
  const ::std::string& cmdresponsemessage() const;
  void set_cmdresponsemessage(const ::std::string& value);
  void set_cmdresponsemessage(const char* value);
  void set_cmdresponsemessage(const char* value, size_t size);
  ::std::string* mutable_cmdresponsemessage();
  ::std::string* release_cmdresponsemessage();
  void set_allocated_cmdresponsemessage(::std::string* cmdresponsemessage);

  // optional bytes CmdResponseData = 3;
  bool has_cmdresponsedata() const;
  void clear_cmdresponsedata();
  static const int kCmdResponseDataFieldNumber = 3;
  const ::std::string& cmdresponsedata() const;
  void set_cmdresponsedata(const ::std::string& value);
  void set_cmdresponsedata(const char* value);
  void set_cmdresponsedata(const void* value, size_t size);
  ::std::string* mutable_cmdresponsedata();
  ::std::string* release_cmdresponsedata();
  void set_allocated_cmdresponsedata(::std::string* cmdresponsedata);

  // @@protoc_insertion_point(class_scope:vision_messages.VisionResponsePBMsg)
 private:
  inline void set_has_cmdresponsetype();
  inline void clear_has_cmdresponsetype();
  inline void set_has_cmdresponsemessage();
  inline void clear_has_cmdresponsemessage();
  inline void set_has_cmdresponsedata();
  inline void clear_has_cmdresponsedata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cmdresponsemessage_;
  ::google::protobuf::internal::ArenaStringPtr cmdresponsedata_;
  int cmdresponsetype_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static VisionResponsePBMsg* default_instance_;
};
// -------------------------------------------------------------------

class VehicleInertialStatePBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.VehicleInertialStatePBMsg) */ {
 public:
  VehicleInertialStatePBMsg();
  virtual ~VehicleInertialStatePBMsg();

  VehicleInertialStatePBMsg(const VehicleInertialStatePBMsg& from);

  inline VehicleInertialStatePBMsg& operator=(const VehicleInertialStatePBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleInertialStatePBMsg& default_instance();

  void Swap(VehicleInertialStatePBMsg* other);

  // implements Message ----------------------------------------------

  inline VehicleInertialStatePBMsg* New() const { return New(NULL); }

  VehicleInertialStatePBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VehicleInertialStatePBMsg& from);
  void MergeFrom(const VehicleInertialStatePBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VehicleInertialStatePBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool CoordinatesLatLonOrXY = 1;
  bool has_coordinateslatlonorxy() const;
  void clear_coordinateslatlonorxy();
  static const int kCoordinatesLatLonOrXYFieldNumber = 1;
  bool coordinateslatlonorxy() const;
  void set_coordinateslatlonorxy(bool value);

  // optional double LatitudeRadOrY = 2;
  bool has_latituderadory() const;
  void clear_latituderadory();
  static const int kLatitudeRadOrYFieldNumber = 2;
  double latituderadory() const;
  void set_latituderadory(double value);

  // optional double LongitudeRadOrX = 3;
  bool has_longituderadorx() const;
  void clear_longituderadorx();
  static const int kLongitudeRadOrXFieldNumber = 3;
  double longituderadorx() const;
  void set_longituderadorx(double value);

  // optional double AltitudeMSL = 4;
  bool has_altitudemsl() const;
  void clear_altitudemsl();
  static const int kAltitudeMSLFieldNumber = 4;
  double altitudemsl() const;
  void set_altitudemsl(double value);

  // optional double HeightAGL = 5;
  bool has_heightagl() const;
  void clear_heightagl();
  static const int kHeightAGLFieldNumber = 5;
  double heightagl() const;
  void set_heightagl(double value);

  // optional double VelEastMpS = 6;
  bool has_veleastmps() const;
  void clear_veleastmps();
  static const int kVelEastMpSFieldNumber = 6;
  double veleastmps() const;
  void set_veleastmps(double value);

  // optional double VelNorthMpS = 7;
  bool has_velnorthmps() const;
  void clear_velnorthmps();
  static const int kVelNorthMpSFieldNumber = 7;
  double velnorthmps() const;
  void set_velnorthmps(double value);

  // optional double VelDownMpS = 8;
  bool has_veldownmps() const;
  void clear_veldownmps();
  static const int kVelDownMpSFieldNumber = 8;
  double veldownmps() const;
  void set_veldownmps(double value);

  // optional double RollRad = 9;
  bool has_rollrad() const;
  void clear_rollrad();
  static const int kRollRadFieldNumber = 9;
  double rollrad() const;
  void set_rollrad(double value);

  // optional double PitchRad = 10;
  bool has_pitchrad() const;
  void clear_pitchrad();
  static const int kPitchRadFieldNumber = 10;
  double pitchrad() const;
  void set_pitchrad(double value);

  // optional double YawRad = 11;
  bool has_yawrad() const;
  void clear_yawrad();
  static const int kYawRadFieldNumber = 11;
  double yawrad() const;
  void set_yawrad(double value);

  // optional double RollRateRadps = 12;
  bool has_rollrateradps() const;
  void clear_rollrateradps();
  static const int kRollRateRadpsFieldNumber = 12;
  double rollrateradps() const;
  void set_rollrateradps(double value);

  // optional double PitchRateRadps = 13;
  bool has_pitchrateradps() const;
  void clear_pitchrateradps();
  static const int kPitchRateRadpsFieldNumber = 13;
  double pitchrateradps() const;
  void set_pitchrateradps(double value);

  // optional double YawRateRadps = 14;
  bool has_yawrateradps() const;
  void clear_yawrateradps();
  static const int kYawRateRadpsFieldNumber = 14;
  double yawrateradps() const;
  void set_yawrateradps(double value);

  // optional double gpsTimeStampSec = 15;
  bool has_gpstimestampsec() const;
  void clear_gpstimestampsec();
  static const int kGpsTimeStampSecFieldNumber = 15;
  double gpstimestampsec() const;
  void set_gpstimestampsec(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.VehicleInertialStatePBMsg)
 private:
  inline void set_has_coordinateslatlonorxy();
  inline void clear_has_coordinateslatlonorxy();
  inline void set_has_latituderadory();
  inline void clear_has_latituderadory();
  inline void set_has_longituderadorx();
  inline void clear_has_longituderadorx();
  inline void set_has_altitudemsl();
  inline void clear_has_altitudemsl();
  inline void set_has_heightagl();
  inline void clear_has_heightagl();
  inline void set_has_veleastmps();
  inline void clear_has_veleastmps();
  inline void set_has_velnorthmps();
  inline void clear_has_velnorthmps();
  inline void set_has_veldownmps();
  inline void clear_has_veldownmps();
  inline void set_has_rollrad();
  inline void clear_has_rollrad();
  inline void set_has_pitchrad();
  inline void clear_has_pitchrad();
  inline void set_has_yawrad();
  inline void clear_has_yawrad();
  inline void set_has_rollrateradps();
  inline void clear_has_rollrateradps();
  inline void set_has_pitchrateradps();
  inline void clear_has_pitchrateradps();
  inline void set_has_yawrateradps();
  inline void clear_has_yawrateradps();
  inline void set_has_gpstimestampsec();
  inline void clear_has_gpstimestampsec();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double latituderadory_;
  double longituderadorx_;
  double altitudemsl_;
  double heightagl_;
  double veleastmps_;
  double velnorthmps_;
  double veldownmps_;
  double rollrad_;
  double pitchrad_;
  double yawrad_;
  double rollrateradps_;
  double pitchrateradps_;
  double yawrateradps_;
  double gpstimestampsec_;
  bool coordinateslatlonorxy_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static VehicleInertialStatePBMsg* default_instance_;
};
// -------------------------------------------------------------------

class TargetInfoPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.TargetInfoPBMsg) */ {
 public:
  TargetInfoPBMsg();
  virtual ~TargetInfoPBMsg();

  TargetInfoPBMsg(const TargetInfoPBMsg& from);

  inline TargetInfoPBMsg& operator=(const TargetInfoPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetInfoPBMsg& default_instance();

  void Swap(TargetInfoPBMsg* other);

  // implements Message ----------------------------------------------

  inline TargetInfoPBMsg* New() const { return New(NULL); }

  TargetInfoPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TargetInfoPBMsg& from);
  void MergeFrom(const TargetInfoPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TargetInfoPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ImageNumber = 1;
  bool has_imagenumber() const;
  void clear_imagenumber();
  static const int kImageNumberFieldNumber = 1;
  ::google::protobuf::uint32 imagenumber() const;
  void set_imagenumber(::google::protobuf::uint32 value);

  // optional .vision_messages.VehicleInertialStatePBMsg VehicleInertialStates = 2;
  bool has_vehicleinertialstates() const;
  void clear_vehicleinertialstates();
  static const int kVehicleInertialStatesFieldNumber = 2;
  const ::vision_messages::VehicleInertialStatePBMsg& vehicleinertialstates() const;
  ::vision_messages::VehicleInertialStatePBMsg* mutable_vehicleinertialstates();
  ::vision_messages::VehicleInertialStatePBMsg* release_vehicleinertialstates();
  void set_allocated_vehicleinertialstates(::vision_messages::VehicleInertialStatePBMsg* vehicleinertialstates);

  // @@protoc_insertion_point(class_scope:vision_messages.TargetInfoPBMsg)
 private:
  inline void set_has_imagenumber();
  inline void clear_has_imagenumber();
  inline void set_has_vehicleinertialstates();
  inline void clear_has_vehicleinertialstates();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::vision_messages::VehicleInertialStatePBMsg* vehicleinertialstates_;
  ::google::protobuf::uint32 imagenumber_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static TargetInfoPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.BroadcastPBMsg) */ {
 public:
  BroadcastPBMsg();
  virtual ~BroadcastPBMsg();

  BroadcastPBMsg(const BroadcastPBMsg& from);

  inline BroadcastPBMsg& operator=(const BroadcastPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastPBMsg& default_instance();

  void Swap(BroadcastPBMsg* other);

  // implements Message ----------------------------------------------

  inline BroadcastPBMsg* New() const { return New(NULL); }

  BroadcastPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastPBMsg& from);
  void MergeFrom(const BroadcastPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BroadcastPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message_string = 1;
  bool has_message_string() const;
  void clear_message_string();
  static const int kMessageStringFieldNumber = 1;
  const ::std::string& message_string() const;
  void set_message_string(const ::std::string& value);
  void set_message_string(const char* value);
  void set_message_string(const char* value, size_t size);
  ::std::string* mutable_message_string();
  ::std::string* release_message_string();
  void set_allocated_message_string(::std::string* message_string);

  // optional bool is_exception = 2;
  bool has_is_exception() const;
  void clear_is_exception();
  static const int kIsExceptionFieldNumber = 2;
  bool is_exception() const;
  void set_is_exception(bool value);

  // optional bytes report = 3;
  bool has_report() const;
  void clear_report();
  static const int kReportFieldNumber = 3;
  const ::std::string& report() const;
  void set_report(const ::std::string& value);
  void set_report(const char* value);
  void set_report(const void* value, size_t size);
  ::std::string* mutable_report();
  ::std::string* release_report();
  void set_allocated_report(::std::string* report);

  // @@protoc_insertion_point(class_scope:vision_messages.BroadcastPBMsg)
 private:
  inline void set_has_message_string();
  inline void clear_has_message_string();
  inline void set_has_is_exception();
  inline void clear_has_is_exception();
  inline void set_has_report();
  inline void clear_has_report();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_string_;
  ::google::protobuf::internal::ArenaStringPtr report_;
  bool is_exception_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static BroadcastPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class SimpleFilterVisionObjPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.SimpleFilterVisionObjPBMsg) */ {
 public:
  SimpleFilterVisionObjPBMsg();
  virtual ~SimpleFilterVisionObjPBMsg();

  SimpleFilterVisionObjPBMsg(const SimpleFilterVisionObjPBMsg& from);

  inline SimpleFilterVisionObjPBMsg& operator=(const SimpleFilterVisionObjPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimpleFilterVisionObjPBMsg& default_instance();

  void Swap(SimpleFilterVisionObjPBMsg* other);

  // implements Message ----------------------------------------------

  inline SimpleFilterVisionObjPBMsg* New() const { return New(NULL); }

  SimpleFilterVisionObjPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimpleFilterVisionObjPBMsg& from);
  void MergeFrom(const SimpleFilterVisionObjPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SimpleFilterVisionObjPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::std::string& info() const;
  void set_info(const ::std::string& value);
  void set_info(const char* value);
  void set_info(const char* value, size_t size);
  ::std::string* mutable_info();
  ::std::string* release_info();
  void set_allocated_info(::std::string* info);

  // optional bytes image_jpeg = 2;
  bool has_image_jpeg() const;
  void clear_image_jpeg();
  static const int kImageJpegFieldNumber = 2;
  const ::std::string& image_jpeg() const;
  void set_image_jpeg(const ::std::string& value);
  void set_image_jpeg(const char* value);
  void set_image_jpeg(const void* value, size_t size);
  ::std::string* mutable_image_jpeg();
  ::std::string* release_image_jpeg();
  void set_allocated_image_jpeg(::std::string* image_jpeg);

  // @@protoc_insertion_point(class_scope:vision_messages.SimpleFilterVisionObjPBMsg)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_image_jpeg();
  inline void clear_has_image_jpeg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr info_;
  ::google::protobuf::internal::ArenaStringPtr image_jpeg_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static SimpleFilterVisionObjPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class ManagerStatsPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.ManagerStatsPBMsg) */ {
 public:
  ManagerStatsPBMsg();
  virtual ~ManagerStatsPBMsg();

  ManagerStatsPBMsg(const ManagerStatsPBMsg& from);

  inline ManagerStatsPBMsg& operator=(const ManagerStatsPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManagerStatsPBMsg& default_instance();

  void Swap(ManagerStatsPBMsg* other);

  // implements Message ----------------------------------------------

  inline ManagerStatsPBMsg* New() const { return New(NULL); }

  ManagerStatsPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManagerStatsPBMsg& from);
  void MergeFrom(const ManagerStatsPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ManagerStatsPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ManagerName = 1;
  bool has_managername() const;
  void clear_managername();
  static const int kManagerNameFieldNumber = 1;
  const ::std::string& managername() const;
  void set_managername(const ::std::string& value);
  void set_managername(const char* value);
  void set_managername(const char* value, size_t size);
  ::std::string* mutable_managername();
  ::std::string* release_managername();
  void set_allocated_managername(::std::string* managername);

  // optional sint32 RunningState = 2;
  bool has_runningstate() const;
  void clear_runningstate();
  static const int kRunningStateFieldNumber = 2;
  ::google::protobuf::int32 runningstate() const;
  void set_runningstate(::google::protobuf::int32 value);

  // optional bool ErrorCondition = 3;
  bool has_errorcondition() const;
  void clear_errorcondition();
  static const int kErrorConditionFieldNumber = 3;
  bool errorcondition() const;
  void set_errorcondition(bool value);

  // optional sint32 ErrorCode = 4;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 4;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // optional sint32 TotalNumberOfExecuteCycles = 5;
  bool has_totalnumberofexecutecycles() const;
  void clear_totalnumberofexecutecycles();
  static const int kTotalNumberOfExecuteCyclesFieldNumber = 5;
  ::google::protobuf::int32 totalnumberofexecutecycles() const;
  void set_totalnumberofexecutecycles(::google::protobuf::int32 value);

  // optional sint32 NumberOfExecuteCycles = 6;
  bool has_numberofexecutecycles() const;
  void clear_numberofexecutecycles();
  static const int kNumberOfExecuteCyclesFieldNumber = 6;
  ::google::protobuf::int32 numberofexecutecycles() const;
  void set_numberofexecutecycles(::google::protobuf::int32 value);

  // optional double TimeSinceLastStatsReset_Sec = 7;
  bool has_timesincelaststatsreset_sec() const;
  void clear_timesincelaststatsreset_sec();
  static const int kTimeSinceLastStatsResetSecFieldNumber = 7;
  double timesincelaststatsreset_sec() const;
  void set_timesincelaststatsreset_sec(double value);

  // optional double MinExecuteUnitOfWorkTime_Sec = 8;
  bool has_minexecuteunitofworktime_sec() const;
  void clear_minexecuteunitofworktime_sec();
  static const int kMinExecuteUnitOfWorkTimeSecFieldNumber = 8;
  double minexecuteunitofworktime_sec() const;
  void set_minexecuteunitofworktime_sec(double value);

  // optional double MaxExecuteUnitOfWorkTime_Sec = 9;
  bool has_maxexecuteunitofworktime_sec() const;
  void clear_maxexecuteunitofworktime_sec();
  static const int kMaxExecuteUnitOfWorkTimeSecFieldNumber = 9;
  double maxexecuteunitofworktime_sec() const;
  void set_maxexecuteunitofworktime_sec(double value);

  // optional double AveExecuteUnitOfWorkTime_Sec = 10;
  bool has_aveexecuteunitofworktime_sec() const;
  void clear_aveexecuteunitofworktime_sec();
  static const int kAveExecuteUnitOfWorkTimeSecFieldNumber = 10;
  double aveexecuteunitofworktime_sec() const;
  void set_aveexecuteunitofworktime_sec(double value);

  // optional double TotalExecuteUnitOfWorkTime_Sec = 11;
  bool has_totalexecuteunitofworktime_sec() const;
  void clear_totalexecuteunitofworktime_sec();
  static const int kTotalExecuteUnitOfWorkTimeSecFieldNumber = 11;
  double totalexecuteunitofworktime_sec() const;
  void set_totalexecuteunitofworktime_sec(double value);

  // optional double MinSleepTime_Sec = 12;
  bool has_minsleeptime_sec() const;
  void clear_minsleeptime_sec();
  static const int kMinSleepTimeSecFieldNumber = 12;
  double minsleeptime_sec() const;
  void set_minsleeptime_sec(double value);

  // optional double MaxSleepTime_Sec = 13;
  bool has_maxsleeptime_sec() const;
  void clear_maxsleeptime_sec();
  static const int kMaxSleepTimeSecFieldNumber = 13;
  double maxsleeptime_sec() const;
  void set_maxsleeptime_sec(double value);

  // optional double AveSleepTime_Sec = 14;
  bool has_avesleeptime_sec() const;
  void clear_avesleeptime_sec();
  static const int kAveSleepTimeSecFieldNumber = 14;
  double avesleeptime_sec() const;
  void set_avesleeptime_sec(double value);

  // optional double TotalSleepTime_Sec = 15;
  bool has_totalsleeptime_sec() const;
  void clear_totalsleeptime_sec();
  static const int kTotalSleepTimeSecFieldNumber = 15;
  double totalsleeptime_sec() const;
  void set_totalsleeptime_sec(double value);

  // optional sint32 NumberOfWakeUpCallsWhileAsleep = 16;
  bool has_numberofwakeupcallswhileasleep() const;
  void clear_numberofwakeupcallswhileasleep();
  static const int kNumberOfWakeUpCallsWhileAsleepFieldNumber = 16;
  ::google::protobuf::int32 numberofwakeupcallswhileasleep() const;
  void set_numberofwakeupcallswhileasleep(::google::protobuf::int32 value);

  // optional sint32 NumberOfWakeUpCallsWhileAwake = 17;
  bool has_numberofwakeupcallswhileawake() const;
  void clear_numberofwakeupcallswhileawake();
  static const int kNumberOfWakeUpCallsWhileAwakeFieldNumber = 17;
  ::google::protobuf::int32 numberofwakeupcallswhileawake() const;
  void set_numberofwakeupcallswhileawake(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:vision_messages.ManagerStatsPBMsg)
 private:
  inline void set_has_managername();
  inline void clear_has_managername();
  inline void set_has_runningstate();
  inline void clear_has_runningstate();
  inline void set_has_errorcondition();
  inline void clear_has_errorcondition();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_totalnumberofexecutecycles();
  inline void clear_has_totalnumberofexecutecycles();
  inline void set_has_numberofexecutecycles();
  inline void clear_has_numberofexecutecycles();
  inline void set_has_timesincelaststatsreset_sec();
  inline void clear_has_timesincelaststatsreset_sec();
  inline void set_has_minexecuteunitofworktime_sec();
  inline void clear_has_minexecuteunitofworktime_sec();
  inline void set_has_maxexecuteunitofworktime_sec();
  inline void clear_has_maxexecuteunitofworktime_sec();
  inline void set_has_aveexecuteunitofworktime_sec();
  inline void clear_has_aveexecuteunitofworktime_sec();
  inline void set_has_totalexecuteunitofworktime_sec();
  inline void clear_has_totalexecuteunitofworktime_sec();
  inline void set_has_minsleeptime_sec();
  inline void clear_has_minsleeptime_sec();
  inline void set_has_maxsleeptime_sec();
  inline void clear_has_maxsleeptime_sec();
  inline void set_has_avesleeptime_sec();
  inline void clear_has_avesleeptime_sec();
  inline void set_has_totalsleeptime_sec();
  inline void clear_has_totalsleeptime_sec();
  inline void set_has_numberofwakeupcallswhileasleep();
  inline void clear_has_numberofwakeupcallswhileasleep();
  inline void set_has_numberofwakeupcallswhileawake();
  inline void clear_has_numberofwakeupcallswhileawake();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr managername_;
  ::google::protobuf::int32 runningstate_;
  bool errorcondition_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::int32 totalnumberofexecutecycles_;
  double timesincelaststatsreset_sec_;
  double minexecuteunitofworktime_sec_;
  double maxexecuteunitofworktime_sec_;
  double aveexecuteunitofworktime_sec_;
  double totalexecuteunitofworktime_sec_;
  ::google::protobuf::int32 numberofexecutecycles_;
  ::google::protobuf::int32 numberofwakeupcallswhileasleep_;
  double minsleeptime_sec_;
  double maxsleeptime_sec_;
  double avesleeptime_sec_;
  double totalsleeptime_sec_;
  ::google::protobuf::int32 numberofwakeupcallswhileawake_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static ManagerStatsPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class ManagerControlPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.ManagerControlPBMsg) */ {
 public:
  ManagerControlPBMsg();
  virtual ~ManagerControlPBMsg();

  ManagerControlPBMsg(const ManagerControlPBMsg& from);

  inline ManagerControlPBMsg& operator=(const ManagerControlPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManagerControlPBMsg& default_instance();

  void Swap(ManagerControlPBMsg* other);

  // implements Message ----------------------------------------------

  inline ManagerControlPBMsg* New() const { return New(NULL); }

  ManagerControlPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManagerControlPBMsg& from);
  void MergeFrom(const ManagerControlPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ManagerControlPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ManagerName = 1;
  bool has_managername() const;
  void clear_managername();
  static const int kManagerNameFieldNumber = 1;
  const ::std::string& managername() const;
  void set_managername(const ::std::string& value);
  void set_managername(const char* value);
  void set_managername(const char* value, size_t size);
  ::std::string* mutable_managername();
  ::std::string* release_managername();
  void set_allocated_managername(::std::string* managername);

  // optional bool ShutdownManager = 2;
  bool has_shutdownmanager() const;
  void clear_shutdownmanager();
  static const int kShutdownManagerFieldNumber = 2;
  bool shutdownmanager() const;
  void set_shutdownmanager(bool value);

  // optional bool ResetMgrStatsToggle = 3;
  bool has_resetmgrstatstoggle() const;
  void clear_resetmgrstatstoggle();
  static const int kResetMgrStatsToggleFieldNumber = 3;
  bool resetmgrstatstoggle() const;
  void set_resetmgrstatstoggle(bool value);

  // optional double PublishMgrStatsTime_Sec = 4;
  bool has_publishmgrstatstime_sec() const;
  void clear_publishmgrstatstime_sec();
  static const int kPublishMgrStatsTimeSecFieldNumber = 4;
  double publishmgrstatstime_sec() const;
  void set_publishmgrstatstime_sec(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.ManagerControlPBMsg)
 private:
  inline void set_has_managername();
  inline void clear_has_managername();
  inline void set_has_shutdownmanager();
  inline void clear_has_shutdownmanager();
  inline void set_has_resetmgrstatstoggle();
  inline void clear_has_resetmgrstatstoggle();
  inline void set_has_publishmgrstatstime_sec();
  inline void clear_has_publishmgrstatstime_sec();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr managername_;
  double publishmgrstatstime_sec_;
  bool shutdownmanager_;
  bool resetmgrstatstoggle_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static ManagerControlPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class CameraSteeringPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.CameraSteeringPBMsg) */ {
 public:
  CameraSteeringPBMsg();
  virtual ~CameraSteeringPBMsg();

  CameraSteeringPBMsg(const CameraSteeringPBMsg& from);

  inline CameraSteeringPBMsg& operator=(const CameraSteeringPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CameraSteeringPBMsg& default_instance();

  void Swap(CameraSteeringPBMsg* other);

  // implements Message ----------------------------------------------

  inline CameraSteeringPBMsg* New() const { return New(NULL); }

  CameraSteeringPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CameraSteeringPBMsg& from);
  void MergeFrom(const CameraSteeringPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CameraSteeringPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool CameraSteeringModeSPOI = 1;
  bool has_camerasteeringmodespoi() const;
  void clear_camerasteeringmodespoi();
  static const int kCameraSteeringModeSPOIFieldNumber = 1;
  bool camerasteeringmodespoi() const;
  void set_camerasteeringmodespoi(bool value);

  // optional bool CoordinatesLatLonOrXY = 12;
  bool has_coordinateslatlonorxy() const;
  void clear_coordinateslatlonorxy();
  static const int kCoordinatesLatLonOrXYFieldNumber = 12;
  bool coordinateslatlonorxy() const;
  void set_coordinateslatlonorxy(bool value);

  // optional double SpoiLatitudeRadOrY = 3;
  bool has_spoilatituderadory() const;
  void clear_spoilatituderadory();
  static const int kSpoiLatitudeRadOrYFieldNumber = 3;
  double spoilatituderadory() const;
  void set_spoilatituderadory(double value);

  // optional double SpoiLongitudeRadOrX = 4;
  bool has_spoilongituderadorx() const;
  void clear_spoilongituderadorx();
  static const int kSpoiLongitudeRadOrXFieldNumber = 4;
  double spoilongituderadorx() const;
  void set_spoilongituderadorx(double value);

  // optional double CameraAzimuthAngleRad = 5;
  bool has_cameraazimuthanglerad() const;
  void clear_cameraazimuthanglerad();
  static const int kCameraAzimuthAngleRadFieldNumber = 5;
  double cameraazimuthanglerad() const;
  void set_cameraazimuthanglerad(double value);

  // optional double CameraElevationAngleRad = 6;
  bool has_cameraelevationanglerad() const;
  void clear_cameraelevationanglerad();
  static const int kCameraElevationAngleRadFieldNumber = 6;
  double cameraelevationanglerad() const;
  void set_cameraelevationanglerad(double value);

  // optional double CameraZoomPercent = 7;
  bool has_camerazoompercent() const;
  void clear_camerazoompercent();
  static const int kCameraZoomPercentFieldNumber = 7;
  double camerazoompercent() const;
  void set_camerazoompercent(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.CameraSteeringPBMsg)
 private:
  inline void set_has_camerasteeringmodespoi();
  inline void clear_has_camerasteeringmodespoi();
  inline void set_has_coordinateslatlonorxy();
  inline void clear_has_coordinateslatlonorxy();
  inline void set_has_spoilatituderadory();
  inline void clear_has_spoilatituderadory();
  inline void set_has_spoilongituderadorx();
  inline void clear_has_spoilongituderadorx();
  inline void set_has_cameraazimuthanglerad();
  inline void clear_has_cameraazimuthanglerad();
  inline void set_has_cameraelevationanglerad();
  inline void clear_has_cameraelevationanglerad();
  inline void set_has_camerazoompercent();
  inline void clear_has_camerazoompercent();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double spoilatituderadory_;
  double spoilongituderadorx_;
  double cameraazimuthanglerad_;
  double cameraelevationanglerad_;
  double camerazoompercent_;
  bool camerasteeringmodespoi_;
  bool coordinateslatlonorxy_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CameraSteeringPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class ImageCompressionControlPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.ImageCompressionControlPBMsg) */ {
 public:
  ImageCompressionControlPBMsg();
  virtual ~ImageCompressionControlPBMsg();

  ImageCompressionControlPBMsg(const ImageCompressionControlPBMsg& from);

  inline ImageCompressionControlPBMsg& operator=(const ImageCompressionControlPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageCompressionControlPBMsg& default_instance();

  void Swap(ImageCompressionControlPBMsg* other);

  // implements Message ----------------------------------------------

  inline ImageCompressionControlPBMsg* New() const { return New(NULL); }

  ImageCompressionControlPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImageCompressionControlPBMsg& from);
  void MergeFrom(const ImageCompressionControlPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImageCompressionControlPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ImageCompressionControlPBMsg_VisionImageCompressionType_e VisionImageCompressionType_e;
  static const VisionImageCompressionType_e jpeg =
    ImageCompressionControlPBMsg_VisionImageCompressionType_e_jpeg;
  static const VisionImageCompressionType_e mpeg =
    ImageCompressionControlPBMsg_VisionImageCompressionType_e_mpeg;
  static const VisionImageCompressionType_e gif =
    ImageCompressionControlPBMsg_VisionImageCompressionType_e_gif;
  static inline bool VisionImageCompressionType_e_IsValid(int value) {
    return ImageCompressionControlPBMsg_VisionImageCompressionType_e_IsValid(value);
  }
  static const VisionImageCompressionType_e VisionImageCompressionType_e_MIN =
    ImageCompressionControlPBMsg_VisionImageCompressionType_e_VisionImageCompressionType_e_MIN;
  static const VisionImageCompressionType_e VisionImageCompressionType_e_MAX =
    ImageCompressionControlPBMsg_VisionImageCompressionType_e_VisionImageCompressionType_e_MAX;
  static const int VisionImageCompressionType_e_ARRAYSIZE =
    ImageCompressionControlPBMsg_VisionImageCompressionType_e_VisionImageCompressionType_e_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VisionImageCompressionType_e_descriptor() {
    return ImageCompressionControlPBMsg_VisionImageCompressionType_e_descriptor();
  }
  static inline const ::std::string& VisionImageCompressionType_e_Name(VisionImageCompressionType_e value) {
    return ImageCompressionControlPBMsg_VisionImageCompressionType_e_Name(value);
  }
  static inline bool VisionImageCompressionType_e_Parse(const ::std::string& name,
      VisionImageCompressionType_e* value) {
    return ImageCompressionControlPBMsg_VisionImageCompressionType_e_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bool EnableImageCompression = 1;
  bool has_enableimagecompression() const;
  void clear_enableimagecompression();
  static const int kEnableImageCompressionFieldNumber = 1;
  bool enableimagecompression() const;
  void set_enableimagecompression(bool value);

  // optional bool TransmitCompressedImages = 2;
  bool has_transmitcompressedimages() const;
  void clear_transmitcompressedimages();
  static const int kTransmitCompressedImagesFieldNumber = 2;
  bool transmitcompressedimages() const;
  void set_transmitcompressedimages(bool value);

  // optional .vision_messages.ImageCompressionControlPBMsg.VisionImageCompressionType_e ImageComressionType = 3;
  bool has_imagecomressiontype() const;
  void clear_imagecomressiontype();
  static const int kImageComressionTypeFieldNumber = 3;
  ::vision_messages::ImageCompressionControlPBMsg_VisionImageCompressionType_e imagecomressiontype() const;
  void set_imagecomressiontype(::vision_messages::ImageCompressionControlPBMsg_VisionImageCompressionType_e value);

  // optional double ImageCompressionRatio = 4;
  bool has_imagecompressionratio() const;
  void clear_imagecompressionratio();
  static const int kImageCompressionRatioFieldNumber = 4;
  double imagecompressionratio() const;
  void set_imagecompressionratio(double value);

  // optional double FrameRate = 5;
  bool has_framerate() const;
  void clear_framerate();
  static const int kFrameRateFieldNumber = 5;
  double framerate() const;
  void set_framerate(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.ImageCompressionControlPBMsg)
 private:
  inline void set_has_enableimagecompression();
  inline void clear_has_enableimagecompression();
  inline void set_has_transmitcompressedimages();
  inline void clear_has_transmitcompressedimages();
  inline void set_has_imagecomressiontype();
  inline void clear_has_imagecomressiontype();
  inline void set_has_imagecompressionratio();
  inline void clear_has_imagecompressionratio();
  inline void set_has_framerate();
  inline void clear_has_framerate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool enableimagecompression_;
  bool transmitcompressedimages_;
  int imagecomressiontype_;
  double imagecompressionratio_;
  double framerate_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static ImageCompressionControlPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class ImageLoggingControlPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.ImageLoggingControlPBMsg) */ {
 public:
  ImageLoggingControlPBMsg();
  virtual ~ImageLoggingControlPBMsg();

  ImageLoggingControlPBMsg(const ImageLoggingControlPBMsg& from);

  inline ImageLoggingControlPBMsg& operator=(const ImageLoggingControlPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageLoggingControlPBMsg& default_instance();

  void Swap(ImageLoggingControlPBMsg* other);

  // implements Message ----------------------------------------------

  inline ImageLoggingControlPBMsg* New() const { return New(NULL); }

  ImageLoggingControlPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImageLoggingControlPBMsg& from);
  void MergeFrom(const ImageLoggingControlPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImageLoggingControlPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ImageLoggingControlPBMsg_VisionLoggingType_e VisionLoggingType_e;
  static const VisionLoggingType_e LogMetaDataOnly =
    ImageLoggingControlPBMsg_VisionLoggingType_e_LogMetaDataOnly;
  static const VisionLoggingType_e LogRawImages =
    ImageLoggingControlPBMsg_VisionLoggingType_e_LogRawImages;
  static const VisionLoggingType_e LogCompressedImages =
    ImageLoggingControlPBMsg_VisionLoggingType_e_LogCompressedImages;
  static inline bool VisionLoggingType_e_IsValid(int value) {
    return ImageLoggingControlPBMsg_VisionLoggingType_e_IsValid(value);
  }
  static const VisionLoggingType_e VisionLoggingType_e_MIN =
    ImageLoggingControlPBMsg_VisionLoggingType_e_VisionLoggingType_e_MIN;
  static const VisionLoggingType_e VisionLoggingType_e_MAX =
    ImageLoggingControlPBMsg_VisionLoggingType_e_VisionLoggingType_e_MAX;
  static const int VisionLoggingType_e_ARRAYSIZE =
    ImageLoggingControlPBMsg_VisionLoggingType_e_VisionLoggingType_e_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VisionLoggingType_e_descriptor() {
    return ImageLoggingControlPBMsg_VisionLoggingType_e_descriptor();
  }
  static inline const ::std::string& VisionLoggingType_e_Name(VisionLoggingType_e value) {
    return ImageLoggingControlPBMsg_VisionLoggingType_e_Name(value);
  }
  static inline bool VisionLoggingType_e_Parse(const ::std::string& name,
      VisionLoggingType_e* value) {
    return ImageLoggingControlPBMsg_VisionLoggingType_e_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bool EnableLogging = 1;
  bool has_enablelogging() const;
  void clear_enablelogging();
  static const int kEnableLoggingFieldNumber = 1;
  bool enablelogging() const;
  void set_enablelogging(bool value);

  // optional .vision_messages.ImageLoggingControlPBMsg.VisionLoggingType_e LoggingType = 2;
  bool has_loggingtype() const;
  void clear_loggingtype();
  static const int kLoggingTypeFieldNumber = 2;
  ::vision_messages::ImageLoggingControlPBMsg_VisionLoggingType_e loggingtype() const;
  void set_loggingtype(::vision_messages::ImageLoggingControlPBMsg_VisionLoggingType_e value);

  // @@protoc_insertion_point(class_scope:vision_messages.ImageLoggingControlPBMsg)
 private:
  inline void set_has_enablelogging();
  inline void clear_has_enablelogging();
  inline void set_has_loggingtype();
  inline void clear_has_loggingtype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool enablelogging_;
  int loggingtype_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static ImageLoggingControlPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class ImageLocationPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.ImageLocationPBMsg) */ {
 public:
  ImageLocationPBMsg();
  virtual ~ImageLocationPBMsg();

  ImageLocationPBMsg(const ImageLocationPBMsg& from);

  inline ImageLocationPBMsg& operator=(const ImageLocationPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageLocationPBMsg& default_instance();

  void Swap(ImageLocationPBMsg* other);

  // implements Message ----------------------------------------------

  inline ImageLocationPBMsg* New() const { return New(NULL); }

  ImageLocationPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImageLocationPBMsg& from);
  void MergeFrom(const ImageLocationPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImageLocationPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ImageNumber = 1;
  bool has_imagenumber() const;
  void clear_imagenumber();
  static const int kImageNumberFieldNumber = 1;
  ::google::protobuf::uint32 imagenumber() const;
  void set_imagenumber(::google::protobuf::uint32 value);

  // optional double ImageCenterLatitudeRadians = 2;
  bool has_imagecenterlatituderadians() const;
  void clear_imagecenterlatituderadians();
  static const int kImageCenterLatitudeRadiansFieldNumber = 2;
  double imagecenterlatituderadians() const;
  void set_imagecenterlatituderadians(double value);

  // optional double ImageCenterLongitudeRadians = 3;
  bool has_imagecenterlongituderadians() const;
  void clear_imagecenterlongituderadians();
  static const int kImageCenterLongitudeRadiansFieldNumber = 3;
  double imagecenterlongituderadians() const;
  void set_imagecenterlongituderadians(double value);

  // repeated double TargetCornerLocations = 4;
  int targetcornerlocations_size() const;
  void clear_targetcornerlocations();
  static const int kTargetCornerLocationsFieldNumber = 4;
  double targetcornerlocations(int index) const;
  void set_targetcornerlocations(int index, double value);
  void add_targetcornerlocations(double value);
  const ::google::protobuf::RepeatedField< double >&
      targetcornerlocations() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_targetcornerlocations();

  // optional bool TargetCornersLatLonOrXY = 5;
  bool has_targetcornerslatlonorxy() const;
  void clear_targetcornerslatlonorxy();
  static const int kTargetCornersLatLonOrXYFieldNumber = 5;
  bool targetcornerslatlonorxy() const;
  void set_targetcornerslatlonorxy(bool value);

  // @@protoc_insertion_point(class_scope:vision_messages.ImageLocationPBMsg)
 private:
  inline void set_has_imagenumber();
  inline void clear_has_imagenumber();
  inline void set_has_imagecenterlatituderadians();
  inline void clear_has_imagecenterlatituderadians();
  inline void set_has_imagecenterlongituderadians();
  inline void clear_has_imagecenterlongituderadians();
  inline void set_has_targetcornerslatlonorxy();
  inline void clear_has_targetcornerslatlonorxy();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double imagecenterlatituderadians_;
  double imagecenterlongituderadians_;
  ::google::protobuf::uint32 imagenumber_;
  bool targetcornerslatlonorxy_;
  ::google::protobuf::RepeatedField< double > targetcornerlocations_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static ImageLocationPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class GroundTargetLocationPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.GroundTargetLocationPBMsg) */ {
 public:
  GroundTargetLocationPBMsg();
  virtual ~GroundTargetLocationPBMsg();

  GroundTargetLocationPBMsg(const GroundTargetLocationPBMsg& from);

  inline GroundTargetLocationPBMsg& operator=(const GroundTargetLocationPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroundTargetLocationPBMsg& default_instance();

  void Swap(GroundTargetLocationPBMsg* other);

  // implements Message ----------------------------------------------

  inline GroundTargetLocationPBMsg* New() const { return New(NULL); }

  GroundTargetLocationPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroundTargetLocationPBMsg& from);
  void MergeFrom(const GroundTargetLocationPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroundTargetLocationPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TargetTypeCode = 1;
  bool has_targettypecode() const;
  void clear_targettypecode();
  static const int kTargetTypeCodeFieldNumber = 1;
  ::google::protobuf::uint32 targettypecode() const;
  void set_targettypecode(::google::protobuf::uint32 value);

  // optional uint32 TargetID = 2;
  bool has_targetid() const;
  void clear_targetid();
  static const int kTargetIDFieldNumber = 2;
  ::google::protobuf::uint32 targetid() const;
  void set_targetid(::google::protobuf::uint32 value);

  // optional double TargetLatitudeRadians = 3;
  bool has_targetlatituderadians() const;
  void clear_targetlatituderadians();
  static const int kTargetLatitudeRadiansFieldNumber = 3;
  double targetlatituderadians() const;
  void set_targetlatituderadians(double value);

  // optional double TargetLongitudeRadians = 4;
  bool has_targetlongituderadians() const;
  void clear_targetlongituderadians();
  static const int kTargetLongitudeRadiansFieldNumber = 4;
  double targetlongituderadians() const;
  void set_targetlongituderadians(double value);

  // optional double TargetAltitudeMSL = 5;
  bool has_targetaltitudemsl() const;
  void clear_targetaltitudemsl();
  static const int kTargetAltitudeMSLFieldNumber = 5;
  double targetaltitudemsl() const;
  void set_targetaltitudemsl(double value);

  // optional bool TargetAltitudeValid = 6;
  bool has_targetaltitudevalid() const;
  void clear_targetaltitudevalid();
  static const int kTargetAltitudeValidFieldNumber = 6;
  bool targetaltitudevalid() const;
  void set_targetaltitudevalid(bool value);

  // optional double TargetAzimuthRadians = 7;
  bool has_targetazimuthradians() const;
  void clear_targetazimuthradians();
  static const int kTargetAzimuthRadiansFieldNumber = 7;
  double targetazimuthradians() const;
  void set_targetazimuthradians(double value);

  // optional double TargetElevationRadians = 8;
  bool has_targetelevationradians() const;
  void clear_targetelevationradians();
  static const int kTargetElevationRadiansFieldNumber = 8;
  double targetelevationradians() const;
  void set_targetelevationradians(double value);

  // optional double TargetOrientationRadians = 9;
  bool has_targetorientationradians() const;
  void clear_targetorientationradians();
  static const int kTargetOrientationRadiansFieldNumber = 9;
  double targetorientationradians() const;
  void set_targetorientationradians(double value);

  // optional bool TargetAzimuthElevationOrientationValid = 10;
  bool has_targetazimuthelevationorientationvalid() const;
  void clear_targetazimuthelevationorientationvalid();
  static const int kTargetAzimuthElevationOrientationValidFieldNumber = 10;
  bool targetazimuthelevationorientationvalid() const;
  void set_targetazimuthelevationorientationvalid(bool value);

  // repeated double TargetCovarianceMatrix = 11;
  int targetcovariancematrix_size() const;
  void clear_targetcovariancematrix();
  static const int kTargetCovarianceMatrixFieldNumber = 11;
  double targetcovariancematrix(int index) const;
  void set_targetcovariancematrix(int index, double value);
  void add_targetcovariancematrix(double value);
  const ::google::protobuf::RepeatedField< double >&
      targetcovariancematrix() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_targetcovariancematrix();

  // optional bool TargetCovarianceValid = 12;
  bool has_targetcovariancevalid() const;
  void clear_targetcovariancevalid();
  static const int kTargetCovarianceValidFieldNumber = 12;
  bool targetcovariancevalid() const;
  void set_targetcovariancevalid(bool value);

  // optional int32 TargetPixelLocation_x = 13;
  bool has_targetpixellocation_x() const;
  void clear_targetpixellocation_x();
  static const int kTargetPixelLocationXFieldNumber = 13;
  ::google::protobuf::int32 targetpixellocation_x() const;
  void set_targetpixellocation_x(::google::protobuf::int32 value);

  // optional int32 TargetPixelLocation_y = 14;
  bool has_targetpixellocation_y() const;
  void clear_targetpixellocation_y();
  static const int kTargetPixelLocationYFieldNumber = 14;
  ::google::protobuf::int32 targetpixellocation_y() const;
  void set_targetpixellocation_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:vision_messages.GroundTargetLocationPBMsg)
 private:
  inline void set_has_targettypecode();
  inline void clear_has_targettypecode();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_targetlatituderadians();
  inline void clear_has_targetlatituderadians();
  inline void set_has_targetlongituderadians();
  inline void clear_has_targetlongituderadians();
  inline void set_has_targetaltitudemsl();
  inline void clear_has_targetaltitudemsl();
  inline void set_has_targetaltitudevalid();
  inline void clear_has_targetaltitudevalid();
  inline void set_has_targetazimuthradians();
  inline void clear_has_targetazimuthradians();
  inline void set_has_targetelevationradians();
  inline void clear_has_targetelevationradians();
  inline void set_has_targetorientationradians();
  inline void clear_has_targetorientationradians();
  inline void set_has_targetazimuthelevationorientationvalid();
  inline void clear_has_targetazimuthelevationorientationvalid();
  inline void set_has_targetcovariancevalid();
  inline void clear_has_targetcovariancevalid();
  inline void set_has_targetpixellocation_x();
  inline void clear_has_targetpixellocation_x();
  inline void set_has_targetpixellocation_y();
  inline void clear_has_targetpixellocation_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 targettypecode_;
  ::google::protobuf::uint32 targetid_;
  double targetlatituderadians_;
  double targetlongituderadians_;
  double targetaltitudemsl_;
  double targetazimuthradians_;
  double targetelevationradians_;
  double targetorientationradians_;
  bool targetaltitudevalid_;
  bool targetazimuthelevationorientationvalid_;
  bool targetcovariancevalid_;
  ::google::protobuf::int32 targetpixellocation_x_;
  ::google::protobuf::RepeatedField< double > targetcovariancematrix_;
  ::google::protobuf::int32 targetpixellocation_y_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static GroundTargetLocationPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class ImageProcTargetInfoResultsPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.ImageProcTargetInfoResultsPBMsg) */ {
 public:
  ImageProcTargetInfoResultsPBMsg();
  virtual ~ImageProcTargetInfoResultsPBMsg();

  ImageProcTargetInfoResultsPBMsg(const ImageProcTargetInfoResultsPBMsg& from);

  inline ImageProcTargetInfoResultsPBMsg& operator=(const ImageProcTargetInfoResultsPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageProcTargetInfoResultsPBMsg& default_instance();

  void Swap(ImageProcTargetInfoResultsPBMsg* other);

  // implements Message ----------------------------------------------

  inline ImageProcTargetInfoResultsPBMsg* New() const { return New(NULL); }

  ImageProcTargetInfoResultsPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImageProcTargetInfoResultsPBMsg& from);
  void MergeFrom(const ImageProcTargetInfoResultsPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImageProcTargetInfoResultsPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .vision_messages.ImageLocationPBMsg ImageLocation = 1;
  bool has_imagelocation() const;
  void clear_imagelocation();
  static const int kImageLocationFieldNumber = 1;
  const ::vision_messages::ImageLocationPBMsg& imagelocation() const;
  ::vision_messages::ImageLocationPBMsg* mutable_imagelocation();
  ::vision_messages::ImageLocationPBMsg* release_imagelocation();
  void set_allocated_imagelocation(::vision_messages::ImageLocationPBMsg* imagelocation);

  // optional .vision_messages.VehicleInertialStatePBMsg VehicleInertialStates = 2;
  bool has_vehicleinertialstates() const;
  void clear_vehicleinertialstates();
  static const int kVehicleInertialStatesFieldNumber = 2;
  const ::vision_messages::VehicleInertialStatePBMsg& vehicleinertialstates() const;
  ::vision_messages::VehicleInertialStatePBMsg* mutable_vehicleinertialstates();
  ::vision_messages::VehicleInertialStatePBMsg* release_vehicleinertialstates();
  void set_allocated_vehicleinertialstates(::vision_messages::VehicleInertialStatePBMsg* vehicleinertialstates);

  // repeated .vision_messages.GroundTargetLocationPBMsg TargetLocations = 3;
  int targetlocations_size() const;
  void clear_targetlocations();
  static const int kTargetLocationsFieldNumber = 3;
  const ::vision_messages::GroundTargetLocationPBMsg& targetlocations(int index) const;
  ::vision_messages::GroundTargetLocationPBMsg* mutable_targetlocations(int index);
  ::vision_messages::GroundTargetLocationPBMsg* add_targetlocations();
  ::google::protobuf::RepeatedPtrField< ::vision_messages::GroundTargetLocationPBMsg >*
      mutable_targetlocations();
  const ::google::protobuf::RepeatedPtrField< ::vision_messages::GroundTargetLocationPBMsg >&
      targetlocations() const;

  // @@protoc_insertion_point(class_scope:vision_messages.ImageProcTargetInfoResultsPBMsg)
 private:
  inline void set_has_imagelocation();
  inline void clear_has_imagelocation();
  inline void set_has_vehicleinertialstates();
  inline void clear_has_vehicleinertialstates();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::vision_messages::ImageLocationPBMsg* imagelocation_;
  ::vision_messages::VehicleInertialStatePBMsg* vehicleinertialstates_;
  ::google::protobuf::RepeatedPtrField< ::vision_messages::GroundTargetLocationPBMsg > targetlocations_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static ImageProcTargetInfoResultsPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class TargetParametersPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.TargetParametersPBMsg) */ {
 public:
  TargetParametersPBMsg();
  virtual ~TargetParametersPBMsg();

  TargetParametersPBMsg(const TargetParametersPBMsg& from);

  inline TargetParametersPBMsg& operator=(const TargetParametersPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetParametersPBMsg& default_instance();

  void Swap(TargetParametersPBMsg* other);

  // implements Message ----------------------------------------------

  inline TargetParametersPBMsg* New() const { return New(NULL); }

  TargetParametersPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TargetParametersPBMsg& from);
  void MergeFrom(const TargetParametersPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TargetParametersPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TargetTypeCode = 1;
  bool has_targettypecode() const;
  void clear_targettypecode();
  static const int kTargetTypeCodeFieldNumber = 1;
  ::google::protobuf::uint32 targettypecode() const;
  void set_targettypecode(::google::protobuf::uint32 value);

  // optional bool IsTaticalTarget = 2;
  bool has_istaticaltarget() const;
  void clear_istaticaltarget();
  static const int kIsTaticalTargetFieldNumber = 2;
  bool istaticaltarget() const;
  void set_istaticaltarget(bool value);

  // optional double TargetSizeOrWidth = 3;
  bool has_targetsizeorwidth() const;
  void clear_targetsizeorwidth();
  static const int kTargetSizeOrWidthFieldNumber = 3;
  double targetsizeorwidth() const;
  void set_targetsizeorwidth(double value);

  // optional double TargetPerimeterOrLenght = 4;
  bool has_targetperimeterorlenght() const;
  void clear_targetperimeterorlenght();
  static const int kTargetPerimeterOrLenghtFieldNumber = 4;
  double targetperimeterorlenght() const;
  void set_targetperimeterorlenght(double value);

  // optional double TargetIRHeatGradient = 5;
  bool has_targetirheatgradient() const;
  void clear_targetirheatgradient();
  static const int kTargetIRHeatGradientFieldNumber = 5;
  double targetirheatgradient() const;
  void set_targetirheatgradient(double value);

  // optional double TargetIRSize = 6;
  bool has_targetirsize() const;
  void clear_targetirsize();
  static const int kTargetIRSizeFieldNumber = 6;
  double targetirsize() const;
  void set_targetirsize(double value);

  // optional uint32 TargetRGBColorCode = 7;
  bool has_targetrgbcolorcode() const;
  void clear_targetrgbcolorcode();
  static const int kTargetRGBColorCodeFieldNumber = 7;
  ::google::protobuf::uint32 targetrgbcolorcode() const;
  void set_targetrgbcolorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vision_messages.TargetParametersPBMsg)
 private:
  inline void set_has_targettypecode();
  inline void clear_has_targettypecode();
  inline void set_has_istaticaltarget();
  inline void clear_has_istaticaltarget();
  inline void set_has_targetsizeorwidth();
  inline void clear_has_targetsizeorwidth();
  inline void set_has_targetperimeterorlenght();
  inline void clear_has_targetperimeterorlenght();
  inline void set_has_targetirheatgradient();
  inline void clear_has_targetirheatgradient();
  inline void set_has_targetirsize();
  inline void clear_has_targetirsize();
  inline void set_has_targetrgbcolorcode();
  inline void clear_has_targetrgbcolorcode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 targettypecode_;
  bool istaticaltarget_;
  double targetsizeorwidth_;
  double targetperimeterorlenght_;
  double targetirheatgradient_;
  double targetirsize_;
  ::google::protobuf::uint32 targetrgbcolorcode_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static TargetParametersPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class TimeSyncPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.TimeSyncPBMsg) */ {
 public:
  TimeSyncPBMsg();
  virtual ~TimeSyncPBMsg();

  TimeSyncPBMsg(const TimeSyncPBMsg& from);

  inline TimeSyncPBMsg& operator=(const TimeSyncPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeSyncPBMsg& default_instance();

  void Swap(TimeSyncPBMsg* other);

  // implements Message ----------------------------------------------

  inline TimeSyncPBMsg* New() const { return New(NULL); }

  TimeSyncPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimeSyncPBMsg& from);
  void MergeFrom(const TimeSyncPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TimeSyncPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double TimeSyncOffsetSeconds = 1;
  bool has_timesyncoffsetseconds() const;
  void clear_timesyncoffsetseconds();
  static const int kTimeSyncOffsetSecondsFieldNumber = 1;
  double timesyncoffsetseconds() const;
  void set_timesyncoffsetseconds(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.TimeSyncPBMsg)
 private:
  inline void set_has_timesyncoffsetseconds();
  inline void clear_has_timesyncoffsetseconds();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double timesyncoffsetseconds_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static TimeSyncPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class GeoCoordinateSystemSetupPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.GeoCoordinateSystemSetupPBMsg) */ {
 public:
  GeoCoordinateSystemSetupPBMsg();
  virtual ~GeoCoordinateSystemSetupPBMsg();

  GeoCoordinateSystemSetupPBMsg(const GeoCoordinateSystemSetupPBMsg& from);

  inline GeoCoordinateSystemSetupPBMsg& operator=(const GeoCoordinateSystemSetupPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GeoCoordinateSystemSetupPBMsg& default_instance();

  void Swap(GeoCoordinateSystemSetupPBMsg* other);

  // implements Message ----------------------------------------------

  inline GeoCoordinateSystemSetupPBMsg* New() const { return New(NULL); }

  GeoCoordinateSystemSetupPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GeoCoordinateSystemSetupPBMsg& from);
  void MergeFrom(const GeoCoordinateSystemSetupPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GeoCoordinateSystemSetupPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e GeoCoordinateSystemConversionType_e;
  static const GeoCoordinateSystemConversionType_e Linear =
    GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_Linear;
  static const GeoCoordinateSystemConversionType_e WGS84_Relative =
    GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_WGS84_Relative;
  static const GeoCoordinateSystemConversionType_e WGS84_Map =
    GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_WGS84_Map;
  static inline bool GeoCoordinateSystemConversionType_e_IsValid(int value) {
    return GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_IsValid(value);
  }
  static const GeoCoordinateSystemConversionType_e GeoCoordinateSystemConversionType_e_MIN =
    GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_GeoCoordinateSystemConversionType_e_MIN;
  static const GeoCoordinateSystemConversionType_e GeoCoordinateSystemConversionType_e_MAX =
    GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_GeoCoordinateSystemConversionType_e_MAX;
  static const int GeoCoordinateSystemConversionType_e_ARRAYSIZE =
    GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_GeoCoordinateSystemConversionType_e_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  GeoCoordinateSystemConversionType_e_descriptor() {
    return GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_descriptor();
  }
  static inline const ::std::string& GeoCoordinateSystemConversionType_e_Name(GeoCoordinateSystemConversionType_e value) {
    return GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_Name(value);
  }
  static inline bool GeoCoordinateSystemConversionType_e_Parse(const ::std::string& name,
      GeoCoordinateSystemConversionType_e* value) {
    return GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .vision_messages.GeoCoordinateSystemSetupPBMsg.GeoCoordinateSystemConversionType_e GeoCoordinateSystemConversionType = 1;
  bool has_geocoordinatesystemconversiontype() const;
  void clear_geocoordinatesystemconversiontype();
  static const int kGeoCoordinateSystemConversionTypeFieldNumber = 1;
  ::vision_messages::GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e geocoordinatesystemconversiontype() const;
  void set_geocoordinatesystemconversiontype(::vision_messages::GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e value);

  // optional double CenterLatitudeDegrees = 2;
  bool has_centerlatitudedegrees() const;
  void clear_centerlatitudedegrees();
  static const int kCenterLatitudeDegreesFieldNumber = 2;
  double centerlatitudedegrees() const;
  void set_centerlatitudedegrees(double value);

  // optional double CenterLongitudeDegrees = 3;
  bool has_centerlongitudedegrees() const;
  void clear_centerlongitudedegrees();
  static const int kCenterLongitudeDegreesFieldNumber = 3;
  double centerlongitudedegrees() const;
  void set_centerlongitudedegrees(double value);

  // optional double GroundAltitudeMSL = 4;
  bool has_groundaltitudemsl() const;
  void clear_groundaltitudemsl();
  static const int kGroundAltitudeMSLFieldNumber = 4;
  double groundaltitudemsl() const;
  void set_groundaltitudemsl(double value);

  // optional double DeltaLatitudeDegrees = 5;
  bool has_deltalatitudedegrees() const;
  void clear_deltalatitudedegrees();
  static const int kDeltaLatitudeDegreesFieldNumber = 5;
  double deltalatitudedegrees() const;
  void set_deltalatitudedegrees(double value);

  // optional double DeltaLongitudeDegrees = 6;
  bool has_deltalongitudedegrees() const;
  void clear_deltalongitudedegrees();
  static const int kDeltaLongitudeDegreesFieldNumber = 6;
  double deltalongitudedegrees() const;
  void set_deltalongitudedegrees(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.GeoCoordinateSystemSetupPBMsg)
 private:
  inline void set_has_geocoordinatesystemconversiontype();
  inline void clear_has_geocoordinatesystemconversiontype();
  inline void set_has_centerlatitudedegrees();
  inline void clear_has_centerlatitudedegrees();
  inline void set_has_centerlongitudedegrees();
  inline void clear_has_centerlongitudedegrees();
  inline void set_has_groundaltitudemsl();
  inline void clear_has_groundaltitudemsl();
  inline void set_has_deltalatitudedegrees();
  inline void clear_has_deltalatitudedegrees();
  inline void set_has_deltalongitudedegrees();
  inline void clear_has_deltalongitudedegrees();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double centerlatitudedegrees_;
  double centerlongitudedegrees_;
  double groundaltitudemsl_;
  double deltalatitudedegrees_;
  double deltalongitudedegrees_;
  int geocoordinatesystemconversiontype_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static GeoCoordinateSystemSetupPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class LatLonXYConversionPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.LatLonXYConversionPBMsg) */ {
 public:
  LatLonXYConversionPBMsg();
  virtual ~LatLonXYConversionPBMsg();

  LatLonXYConversionPBMsg(const LatLonXYConversionPBMsg& from);

  inline LatLonXYConversionPBMsg& operator=(const LatLonXYConversionPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LatLonXYConversionPBMsg& default_instance();

  void Swap(LatLonXYConversionPBMsg* other);

  // implements Message ----------------------------------------------

  inline LatLonXYConversionPBMsg* New() const { return New(NULL); }

  LatLonXYConversionPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LatLonXYConversionPBMsg& from);
  void MergeFrom(const LatLonXYConversionPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LatLonXYConversionPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool LatLonToXYConversion = 1;
  bool has_latlontoxyconversion() const;
  void clear_latlontoxyconversion();
  static const int kLatLonToXYConversionFieldNumber = 1;
  bool latlontoxyconversion() const;
  void set_latlontoxyconversion(bool value);

  // optional double LatitudeDegrees = 2;
  bool has_latitudedegrees() const;
  void clear_latitudedegrees();
  static const int kLatitudeDegreesFieldNumber = 2;
  double latitudedegrees() const;
  void set_latitudedegrees(double value);

  // optional double LongitudeDegrees = 3;
  bool has_longitudedegrees() const;
  void clear_longitudedegrees();
  static const int kLongitudeDegreesFieldNumber = 3;
  double longitudedegrees() const;
  void set_longitudedegrees(double value);

  // optional double X_PosMeters = 4;
  bool has_x_posmeters() const;
  void clear_x_posmeters();
  static const int kXPosMetersFieldNumber = 4;
  double x_posmeters() const;
  void set_x_posmeters(double value);

  // optional double Y_PosMeters = 5;
  bool has_y_posmeters() const;
  void clear_y_posmeters();
  static const int kYPosMetersFieldNumber = 5;
  double y_posmeters() const;
  void set_y_posmeters(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.LatLonXYConversionPBMsg)
 private:
  inline void set_has_latlontoxyconversion();
  inline void clear_has_latlontoxyconversion();
  inline void set_has_latitudedegrees();
  inline void clear_has_latitudedegrees();
  inline void set_has_longitudedegrees();
  inline void clear_has_longitudedegrees();
  inline void set_has_x_posmeters();
  inline void clear_has_x_posmeters();
  inline void set_has_y_posmeters();
  inline void clear_has_y_posmeters();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double latitudedegrees_;
  double longitudedegrees_;
  double x_posmeters_;
  double y_posmeters_;
  bool latlontoxyconversion_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static LatLonXYConversionPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class ImageCaptureControlPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.ImageCaptureControlPBMsg) */ {
 public:
  ImageCaptureControlPBMsg();
  virtual ~ImageCaptureControlPBMsg();

  ImageCaptureControlPBMsg(const ImageCaptureControlPBMsg& from);

  inline ImageCaptureControlPBMsg& operator=(const ImageCaptureControlPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageCaptureControlPBMsg& default_instance();

  void Swap(ImageCaptureControlPBMsg* other);

  // implements Message ----------------------------------------------

  inline ImageCaptureControlPBMsg* New() const { return New(NULL); }

  ImageCaptureControlPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImageCaptureControlPBMsg& from);
  void MergeFrom(const ImageCaptureControlPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImageCaptureControlPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool ImageCaptureEnabled = 1;
  bool has_imagecaptureenabled() const;
  void clear_imagecaptureenabled();
  static const int kImageCaptureEnabledFieldNumber = 1;
  bool imagecaptureenabled() const;
  void set_imagecaptureenabled(bool value);

  // optional uint32 NumberOfImagesToCapture = 2;
  bool has_numberofimagestocapture() const;
  void clear_numberofimagestocapture();
  static const int kNumberOfImagesToCaptureFieldNumber = 2;
  ::google::protobuf::uint32 numberofimagestocapture() const;
  void set_numberofimagestocapture(::google::protobuf::uint32 value);

  // optional double DesiredFramesPerSecond = 3;
  bool has_desiredframespersecond() const;
  void clear_desiredframespersecond();
  static const int kDesiredFramesPerSecondFieldNumber = 3;
  double desiredframespersecond() const;
  void set_desiredframespersecond(double value);

  // optional uint32 DesiredImageWidth = 4;
  bool has_desiredimagewidth() const;
  void clear_desiredimagewidth();
  static const int kDesiredImageWidthFieldNumber = 4;
  ::google::protobuf::uint32 desiredimagewidth() const;
  void set_desiredimagewidth(::google::protobuf::uint32 value);

  // optional uint32 DesiredImageHeight = 5;
  bool has_desiredimageheight() const;
  void clear_desiredimageheight();
  static const int kDesiredImageHeightFieldNumber = 5;
  ::google::protobuf::uint32 desiredimageheight() const;
  void set_desiredimageheight(::google::protobuf::uint32 value);

  // optional .vision_messages.ImageCaptureSource_e ImageCaptureSource = 6;
  bool has_imagecapturesource() const;
  void clear_imagecapturesource();
  static const int kImageCaptureSourceFieldNumber = 6;
  ::vision_messages::ImageCaptureSource_e imagecapturesource() const;
  void set_imagecapturesource(::vision_messages::ImageCaptureSource_e value);

  // optional .vision_messages.CPImageCaptureFormat_e ImageCaptureFormat = 7;
  bool has_imagecaptureformat() const;
  void clear_imagecaptureformat();
  static const int kImageCaptureFormatFieldNumber = 7;
  ::vision_messages::CPImageCaptureFormat_e imagecaptureformat() const;
  void set_imagecaptureformat(::vision_messages::CPImageCaptureFormat_e value);

  // optional string ImageCaptureSourceConfigPri = 8;
  bool has_imagecapturesourceconfigpri() const;
  void clear_imagecapturesourceconfigpri();
  static const int kImageCaptureSourceConfigPriFieldNumber = 8;
  const ::std::string& imagecapturesourceconfigpri() const;
  void set_imagecapturesourceconfigpri(const ::std::string& value);
  void set_imagecapturesourceconfigpri(const char* value);
  void set_imagecapturesourceconfigpri(const char* value, size_t size);
  ::std::string* mutable_imagecapturesourceconfigpri();
  ::std::string* release_imagecapturesourceconfigpri();
  void set_allocated_imagecapturesourceconfigpri(::std::string* imagecapturesourceconfigpri);

  // optional string ImageCaptureSourceConfigSec = 9;
  bool has_imagecapturesourceconfigsec() const;
  void clear_imagecapturesourceconfigsec();
  static const int kImageCaptureSourceConfigSecFieldNumber = 9;
  const ::std::string& imagecapturesourceconfigsec() const;
  void set_imagecapturesourceconfigsec(const ::std::string& value);
  void set_imagecapturesourceconfigsec(const char* value);
  void set_imagecapturesourceconfigsec(const char* value, size_t size);
  ::std::string* mutable_imagecapturesourceconfigsec();
  ::std::string* release_imagecapturesourceconfigsec();
  void set_allocated_imagecapturesourceconfigsec(::std::string* imagecapturesourceconfigsec);

  // optional bool ImageSourceLoopAround = 10;
  bool has_imagesourcelooparound() const;
  void clear_imagesourcelooparound();
  static const int kImageSourceLoopAroundFieldNumber = 10;
  bool imagesourcelooparound() const;
  void set_imagesourcelooparound(bool value);

  // optional bool AutoFocusEnable = 11;
  bool has_autofocusenable() const;
  void clear_autofocusenable();
  static const int kAutoFocusEnableFieldNumber = 11;
  bool autofocusenable() const;
  void set_autofocusenable(bool value);

  // @@protoc_insertion_point(class_scope:vision_messages.ImageCaptureControlPBMsg)
 private:
  inline void set_has_imagecaptureenabled();
  inline void clear_has_imagecaptureenabled();
  inline void set_has_numberofimagestocapture();
  inline void clear_has_numberofimagestocapture();
  inline void set_has_desiredframespersecond();
  inline void clear_has_desiredframespersecond();
  inline void set_has_desiredimagewidth();
  inline void clear_has_desiredimagewidth();
  inline void set_has_desiredimageheight();
  inline void clear_has_desiredimageheight();
  inline void set_has_imagecapturesource();
  inline void clear_has_imagecapturesource();
  inline void set_has_imagecaptureformat();
  inline void clear_has_imagecaptureformat();
  inline void set_has_imagecapturesourceconfigpri();
  inline void clear_has_imagecapturesourceconfigpri();
  inline void set_has_imagecapturesourceconfigsec();
  inline void clear_has_imagecapturesourceconfigsec();
  inline void set_has_imagesourcelooparound();
  inline void clear_has_imagesourcelooparound();
  inline void set_has_autofocusenable();
  inline void clear_has_autofocusenable();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double desiredframespersecond_;
  ::google::protobuf::uint32 numberofimagestocapture_;
  ::google::protobuf::uint32 desiredimagewidth_;
  ::google::protobuf::uint32 desiredimageheight_;
  int imagecapturesource_;
  int imagecaptureformat_;
  bool imagecaptureenabled_;
  bool imagesourcelooparound_;
  bool autofocusenable_;
  ::google::protobuf::internal::ArenaStringPtr imagecapturesourceconfigpri_;
  ::google::protobuf::internal::ArenaStringPtr imagecapturesourceconfigsec_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static ImageCaptureControlPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class CameraParametersSetupPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.CameraParametersSetupPBMsg) */ {
 public:
  CameraParametersSetupPBMsg();
  virtual ~CameraParametersSetupPBMsg();

  CameraParametersSetupPBMsg(const CameraParametersSetupPBMsg& from);

  inline CameraParametersSetupPBMsg& operator=(const CameraParametersSetupPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CameraParametersSetupPBMsg& default_instance();

  void Swap(CameraParametersSetupPBMsg* other);

  // implements Message ----------------------------------------------

  inline CameraParametersSetupPBMsg* New() const { return New(NULL); }

  CameraParametersSetupPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CameraParametersSetupPBMsg& from);
  void MergeFrom(const CameraParametersSetupPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CameraParametersSetupPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .vision_messages.CPImageCaptureFormat_e ImageCaptureFormat = 1;
  bool has_imagecaptureformat() const;
  void clear_imagecaptureformat();
  static const int kImageCaptureFormatFieldNumber = 1;
  ::vision_messages::CPImageCaptureFormat_e imagecaptureformat() const;
  void set_imagecaptureformat(::vision_messages::CPImageCaptureFormat_e value);

  // optional uint32 Mode = 2;
  bool has_mode() const;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::uint32 mode() const;
  void set_mode(::google::protobuf::uint32 value);

  // optional uint32 FrameWidth = 3;
  bool has_framewidth() const;
  void clear_framewidth();
  static const int kFrameWidthFieldNumber = 3;
  ::google::protobuf::uint32 framewidth() const;
  void set_framewidth(::google::protobuf::uint32 value);

  // optional uint32 FrameHeight = 4;
  bool has_frameheight() const;
  void clear_frameheight();
  static const int kFrameHeightFieldNumber = 4;
  ::google::protobuf::uint32 frameheight() const;
  void set_frameheight(::google::protobuf::uint32 value);

  // optional double FrameRateFPS = 5;
  bool has_frameratefps() const;
  void clear_frameratefps();
  static const int kFrameRateFPSFieldNumber = 5;
  double frameratefps() const;
  void set_frameratefps(double value);

  // optional bool Autofocus = 6;
  bool has_autofocus() const;
  void clear_autofocus();
  static const int kAutofocusFieldNumber = 6;
  bool autofocus() const;
  void set_autofocus(bool value);

  // optional double FocusValue = 7;
  bool has_focusvalue() const;
  void clear_focusvalue();
  static const int kFocusValueFieldNumber = 7;
  double focusvalue() const;
  void set_focusvalue(double value);

  // optional double Brightness = 8;
  bool has_brightness() const;
  void clear_brightness();
  static const int kBrightnessFieldNumber = 8;
  double brightness() const;
  void set_brightness(double value);

  // optional double Contrast = 9;
  bool has_contrast() const;
  void clear_contrast();
  static const int kContrastFieldNumber = 9;
  double contrast() const;
  void set_contrast(double value);

  // optional double Saturation = 10;
  bool has_saturation() const;
  void clear_saturation();
  static const int kSaturationFieldNumber = 10;
  double saturation() const;
  void set_saturation(double value);

  // optional double Hue = 11;
  bool has_hue() const;
  void clear_hue();
  static const int kHueFieldNumber = 11;
  double hue() const;
  void set_hue(double value);

  // optional double Gain = 12;
  bool has_gain() const;
  void clear_gain();
  static const int kGainFieldNumber = 12;
  double gain() const;
  void set_gain(double value);

  // optional double Exposure = 13;
  bool has_exposure() const;
  void clear_exposure();
  static const int kExposureFieldNumber = 13;
  double exposure() const;
  void set_exposure(double value);

  // optional double WhiteBallanceBlue = 14;
  bool has_whiteballanceblue() const;
  void clear_whiteballanceblue();
  static const int kWhiteBallanceBlueFieldNumber = 14;
  double whiteballanceblue() const;
  void set_whiteballanceblue(double value);

  // optional double WhiteBallanceRed = 15;
  bool has_whiteballancered() const;
  void clear_whiteballancered();
  static const int kWhiteBallanceRedFieldNumber = 15;
  double whiteballancered() const;
  void set_whiteballancered(double value);

  // optional bool ExternalTrigger = 16;
  bool has_externaltrigger() const;
  void clear_externaltrigger();
  static const int kExternalTriggerFieldNumber = 16;
  bool externaltrigger() const;
  void set_externaltrigger(bool value);

  // @@protoc_insertion_point(class_scope:vision_messages.CameraParametersSetupPBMsg)
 private:
  inline void set_has_imagecaptureformat();
  inline void clear_has_imagecaptureformat();
  inline void set_has_mode();
  inline void clear_has_mode();
  inline void set_has_framewidth();
  inline void clear_has_framewidth();
  inline void set_has_frameheight();
  inline void clear_has_frameheight();
  inline void set_has_frameratefps();
  inline void clear_has_frameratefps();
  inline void set_has_autofocus();
  inline void clear_has_autofocus();
  inline void set_has_focusvalue();
  inline void clear_has_focusvalue();
  inline void set_has_brightness();
  inline void clear_has_brightness();
  inline void set_has_contrast();
  inline void clear_has_contrast();
  inline void set_has_saturation();
  inline void clear_has_saturation();
  inline void set_has_hue();
  inline void clear_has_hue();
  inline void set_has_gain();
  inline void clear_has_gain();
  inline void set_has_exposure();
  inline void clear_has_exposure();
  inline void set_has_whiteballanceblue();
  inline void clear_has_whiteballanceblue();
  inline void set_has_whiteballancered();
  inline void clear_has_whiteballancered();
  inline void set_has_externaltrigger();
  inline void clear_has_externaltrigger();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int imagecaptureformat_;
  ::google::protobuf::uint32 mode_;
  ::google::protobuf::uint32 framewidth_;
  ::google::protobuf::uint32 frameheight_;
  double frameratefps_;
  double focusvalue_;
  double brightness_;
  double contrast_;
  double saturation_;
  double hue_;
  double gain_;
  double exposure_;
  double whiteballanceblue_;
  double whiteballancered_;
  bool autofocus_;
  bool externaltrigger_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CameraParametersSetupPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class StreamControlPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.StreamControlPBMsg) */ {
 public:
  StreamControlPBMsg();
  virtual ~StreamControlPBMsg();

  StreamControlPBMsg(const StreamControlPBMsg& from);

  inline StreamControlPBMsg& operator=(const StreamControlPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamControlPBMsg& default_instance();

  void Swap(StreamControlPBMsg* other);

  // implements Message ----------------------------------------------

  inline StreamControlPBMsg* New() const { return New(NULL); }

  StreamControlPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StreamControlPBMsg& from);
  void MergeFrom(const StreamControlPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StreamControlPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool StreamImagesEnabled = 1;
  bool has_streamimagesenabled() const;
  void clear_streamimagesenabled();
  static const int kStreamImagesEnabledFieldNumber = 1;
  bool streamimagesenabled() const;
  void set_streamimagesenabled(bool value);

  // optional double StreamImageFrameRate = 2;
  bool has_streamimageframerate() const;
  void clear_streamimageframerate();
  static const int kStreamImageFrameRateFieldNumber = 2;
  double streamimageframerate() const;
  void set_streamimageframerate(double value);

  // optional uint32 ImageCompressionQuality = 3;
  bool has_imagecompressionquality() const;
  void clear_imagecompressionquality();
  static const int kImageCompressionQualityFieldNumber = 3;
  ::google::protobuf::uint32 imagecompressionquality() const;
  void set_imagecompressionquality(::google::protobuf::uint32 value);

  // optional double StreamImageScaleDownFactor = 4;
  bool has_streamimagescaledownfactor() const;
  void clear_streamimagescaledownfactor();
  static const int kStreamImageScaleDownFactorFieldNumber = 4;
  double streamimagescaledownfactor() const;
  void set_streamimagescaledownfactor(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.StreamControlPBMsg)
 private:
  inline void set_has_streamimagesenabled();
  inline void clear_has_streamimagesenabled();
  inline void set_has_streamimageframerate();
  inline void clear_has_streamimageframerate();
  inline void set_has_imagecompressionquality();
  inline void clear_has_imagecompressionquality();
  inline void set_has_streamimagescaledownfactor();
  inline void clear_has_streamimagescaledownfactor();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double streamimageframerate_;
  bool streamimagesenabled_;
  ::google::protobuf::uint32 imagecompressionquality_;
  double streamimagescaledownfactor_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static StreamControlPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class ImageCaptureStatusPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.ImageCaptureStatusPBMsg) */ {
 public:
  ImageCaptureStatusPBMsg();
  virtual ~ImageCaptureStatusPBMsg();

  ImageCaptureStatusPBMsg(const ImageCaptureStatusPBMsg& from);

  inline ImageCaptureStatusPBMsg& operator=(const ImageCaptureStatusPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageCaptureStatusPBMsg& default_instance();

  void Swap(ImageCaptureStatusPBMsg* other);

  // implements Message ----------------------------------------------

  inline ImageCaptureStatusPBMsg* New() const { return New(NULL); }

  ImageCaptureStatusPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImageCaptureStatusPBMsg& from);
  void MergeFrom(const ImageCaptureStatusPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImageCaptureStatusPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool ImageCaptureEnabled = 1;
  bool has_imagecaptureenabled() const;
  void clear_imagecaptureenabled();
  static const int kImageCaptureEnabledFieldNumber = 1;
  bool imagecaptureenabled() const;
  void set_imagecaptureenabled(bool value);

  // optional bool ImageCaptureComplete = 2;
  bool has_imagecapturecomplete() const;
  void clear_imagecapturecomplete();
  static const int kImageCaptureCompleteFieldNumber = 2;
  bool imagecapturecomplete() const;
  void set_imagecapturecomplete(bool value);

  // optional bool EndOfImages = 3;
  bool has_endofimages() const;
  void clear_endofimages();
  static const int kEndOfImagesFieldNumber = 3;
  bool endofimages() const;
  void set_endofimages(bool value);

  // optional uint32 TotalNumberOfImagesCaptured = 4;
  bool has_totalnumberofimagescaptured() const;
  void clear_totalnumberofimagescaptured();
  static const int kTotalNumberOfImagesCapturedFieldNumber = 4;
  ::google::protobuf::uint32 totalnumberofimagescaptured() const;
  void set_totalnumberofimagescaptured(::google::protobuf::uint32 value);

  // optional uint32 CurrentNumberOfImagesCaptured = 5;
  bool has_currentnumberofimagescaptured() const;
  void clear_currentnumberofimagescaptured();
  static const int kCurrentNumberOfImagesCapturedFieldNumber = 5;
  ::google::protobuf::uint32 currentnumberofimagescaptured() const;
  void set_currentnumberofimagescaptured(::google::protobuf::uint32 value);

  // optional double AverageFramesPerSecond = 6;
  bool has_averageframespersecond() const;
  void clear_averageframespersecond();
  static const int kAverageFramesPerSecondFieldNumber = 6;
  double averageframespersecond() const;
  void set_averageframespersecond(double value);

  // optional .vision_messages.ImageCaptureSource_e ImageCaptureSource = 7;
  bool has_imagecapturesource() const;
  void clear_imagecapturesource();
  static const int kImageCaptureSourceFieldNumber = 7;
  ::vision_messages::ImageCaptureSource_e imagecapturesource() const;
  void set_imagecapturesource(::vision_messages::ImageCaptureSource_e value);

  // optional .vision_messages.ImageCaptureError_e ErrorCode = 8;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 8;
  ::vision_messages::ImageCaptureError_e errorcode() const;
  void set_errorcode(::vision_messages::ImageCaptureError_e value);

  // @@protoc_insertion_point(class_scope:vision_messages.ImageCaptureStatusPBMsg)
 private:
  inline void set_has_imagecaptureenabled();
  inline void clear_has_imagecaptureenabled();
  inline void set_has_imagecapturecomplete();
  inline void clear_has_imagecapturecomplete();
  inline void set_has_endofimages();
  inline void clear_has_endofimages();
  inline void set_has_totalnumberofimagescaptured();
  inline void clear_has_totalnumberofimagescaptured();
  inline void set_has_currentnumberofimagescaptured();
  inline void clear_has_currentnumberofimagescaptured();
  inline void set_has_averageframespersecond();
  inline void clear_has_averageframespersecond();
  inline void set_has_imagecapturesource();
  inline void clear_has_imagecapturesource();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool imagecaptureenabled_;
  bool imagecapturecomplete_;
  bool endofimages_;
  ::google::protobuf::uint32 totalnumberofimagescaptured_;
  double averageframespersecond_;
  ::google::protobuf::uint32 currentnumberofimagescaptured_;
  int imagecapturesource_;
  int errorcode_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static ImageCaptureStatusPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class VisionProcessingControlPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.VisionProcessingControlPBMsg) */ {
 public:
  VisionProcessingControlPBMsg();
  virtual ~VisionProcessingControlPBMsg();

  VisionProcessingControlPBMsg(const VisionProcessingControlPBMsg& from);

  inline VisionProcessingControlPBMsg& operator=(const VisionProcessingControlPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VisionProcessingControlPBMsg& default_instance();

  void Swap(VisionProcessingControlPBMsg* other);

  // implements Message ----------------------------------------------

  inline VisionProcessingControlPBMsg* New() const { return New(NULL); }

  VisionProcessingControlPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VisionProcessingControlPBMsg& from);
  void MergeFrom(const VisionProcessingControlPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VisionProcessingControlPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef VisionProcessingControlPBMsg_VisionProcessingModeEnum VisionProcessingModeEnum;
  static const VisionProcessingModeEnum VisionProcMode_None =
    VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_None;
  static const VisionProcessingModeEnum VisionProcMode_Target =
    VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_Target;
  static const VisionProcessingModeEnum VisionProcMode_GPSDenied =
    VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_GPSDenied;
  static const VisionProcessingModeEnum VisionProcMode_CameraCalibration =
    VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_CameraCalibration;
  static const VisionProcessingModeEnum VisionProcMode_FeatureMatchProc =
    VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_FeatureMatchProc;
  static const VisionProcessingModeEnum VisionProcMode_HeadTrackingProc =
    VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_HeadTrackingProc;
  static const VisionProcessingModeEnum VisionProcMode_HeadOrientationCalProc =
    VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcMode_HeadOrientationCalProc;
  static inline bool VisionProcessingModeEnum_IsValid(int value) {
    return VisionProcessingControlPBMsg_VisionProcessingModeEnum_IsValid(value);
  }
  static const VisionProcessingModeEnum VisionProcessingModeEnum_MIN =
    VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcessingModeEnum_MIN;
  static const VisionProcessingModeEnum VisionProcessingModeEnum_MAX =
    VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcessingModeEnum_MAX;
  static const int VisionProcessingModeEnum_ARRAYSIZE =
    VisionProcessingControlPBMsg_VisionProcessingModeEnum_VisionProcessingModeEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VisionProcessingModeEnum_descriptor() {
    return VisionProcessingControlPBMsg_VisionProcessingModeEnum_descriptor();
  }
  static inline const ::std::string& VisionProcessingModeEnum_Name(VisionProcessingModeEnum value) {
    return VisionProcessingControlPBMsg_VisionProcessingModeEnum_Name(value);
  }
  static inline bool VisionProcessingModeEnum_Parse(const ::std::string& name,
      VisionProcessingModeEnum* value) {
    return VisionProcessingControlPBMsg_VisionProcessingModeEnum_Parse(name, value);
  }

  typedef VisionProcessingControlPBMsg_TargetProcessingModeEnum TargetProcessingModeEnum;
  static const TargetProcessingModeEnum TgtProcMode_None =
    VisionProcessingControlPBMsg_TargetProcessingModeEnum_TgtProcMode_None;
  static const TargetProcessingModeEnum TgtProcMode_Std =
    VisionProcessingControlPBMsg_TargetProcessingModeEnum_TgtProcMode_Std;
  static const TargetProcessingModeEnum TgtProcMode_Blob =
    VisionProcessingControlPBMsg_TargetProcessingModeEnum_TgtProcMode_Blob;
  static const TargetProcessingModeEnum TgtProcMode_CheckerBoard =
    VisionProcessingControlPBMsg_TargetProcessingModeEnum_TgtProcMode_CheckerBoard;
  static inline bool TargetProcessingModeEnum_IsValid(int value) {
    return VisionProcessingControlPBMsg_TargetProcessingModeEnum_IsValid(value);
  }
  static const TargetProcessingModeEnum TargetProcessingModeEnum_MIN =
    VisionProcessingControlPBMsg_TargetProcessingModeEnum_TargetProcessingModeEnum_MIN;
  static const TargetProcessingModeEnum TargetProcessingModeEnum_MAX =
    VisionProcessingControlPBMsg_TargetProcessingModeEnum_TargetProcessingModeEnum_MAX;
  static const int TargetProcessingModeEnum_ARRAYSIZE =
    VisionProcessingControlPBMsg_TargetProcessingModeEnum_TargetProcessingModeEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TargetProcessingModeEnum_descriptor() {
    return VisionProcessingControlPBMsg_TargetProcessingModeEnum_descriptor();
  }
  static inline const ::std::string& TargetProcessingModeEnum_Name(TargetProcessingModeEnum value) {
    return VisionProcessingControlPBMsg_TargetProcessingModeEnum_Name(value);
  }
  static inline bool TargetProcessingModeEnum_Parse(const ::std::string& name,
      TargetProcessingModeEnum* value) {
    return VisionProcessingControlPBMsg_TargetProcessingModeEnum_Parse(name, value);
  }

  typedef VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum GPSDeniedProcessingModeEnum;
  static const GPSDeniedProcessingModeEnum GpsDeniedMode_None =
    VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_GpsDeniedMode_None;
  static const GPSDeniedProcessingModeEnum GpsDeniedMode_Std =
    VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_GpsDeniedMode_Std;
  static inline bool GPSDeniedProcessingModeEnum_IsValid(int value) {
    return VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_IsValid(value);
  }
  static const GPSDeniedProcessingModeEnum GPSDeniedProcessingModeEnum_MIN =
    VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_GPSDeniedProcessingModeEnum_MIN;
  static const GPSDeniedProcessingModeEnum GPSDeniedProcessingModeEnum_MAX =
    VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_GPSDeniedProcessingModeEnum_MAX;
  static const int GPSDeniedProcessingModeEnum_ARRAYSIZE =
    VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_GPSDeniedProcessingModeEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  GPSDeniedProcessingModeEnum_descriptor() {
    return VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_descriptor();
  }
  static inline const ::std::string& GPSDeniedProcessingModeEnum_Name(GPSDeniedProcessingModeEnum value) {
    return VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_Name(value);
  }
  static inline bool GPSDeniedProcessingModeEnum_Parse(const ::std::string& name,
      GPSDeniedProcessingModeEnum* value) {
    return VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bool ImageCaptureEnabled = 1;
  bool has_imagecaptureenabled() const;
  void clear_imagecaptureenabled();
  static const int kImageCaptureEnabledFieldNumber = 1;
  bool imagecaptureenabled() const;
  void set_imagecaptureenabled(bool value);

  // optional sint32 NumberOfImagesToCapture = 2;
  bool has_numberofimagestocapture() const;
  void clear_numberofimagestocapture();
  static const int kNumberOfImagesToCaptureFieldNumber = 2;
  ::google::protobuf::int32 numberofimagestocapture() const;
  void set_numberofimagestocapture(::google::protobuf::int32 value);

  // optional double DesiredFramesPerSecond = 3;
  bool has_desiredframespersecond() const;
  void clear_desiredframespersecond();
  static const int kDesiredFramesPerSecondFieldNumber = 3;
  double desiredframespersecond() const;
  void set_desiredframespersecond(double value);

  // optional bool GPUProcessingEnabled = 4;
  bool has_gpuprocessingenabled() const;
  void clear_gpuprocessingenabled();
  static const int kGPUProcessingEnabledFieldNumber = 4;
  bool gpuprocessingenabled() const;
  void set_gpuprocessingenabled(bool value);

  // optional bool TargetImageProcessingEnabled = 5;
  bool has_targetimageprocessingenabled() const;
  void clear_targetimageprocessingenabled();
  static const int kTargetImageProcessingEnabledFieldNumber = 5;
  bool targetimageprocessingenabled() const;
  void set_targetimageprocessingenabled(bool value);

  // optional .vision_messages.VisionProcessingControlPBMsg.VisionProcessingModeEnum VisionProcessingMode = 6;
  bool has_visionprocessingmode() const;
  void clear_visionprocessingmode();
  static const int kVisionProcessingModeFieldNumber = 6;
  ::vision_messages::VisionProcessingControlPBMsg_VisionProcessingModeEnum visionprocessingmode() const;
  void set_visionprocessingmode(::vision_messages::VisionProcessingControlPBMsg_VisionProcessingModeEnum value);

  // optional .vision_messages.VisionProcessingControlPBMsg.TargetProcessingModeEnum TargetProcessingMode = 7;
  bool has_targetprocessingmode() const;
  void clear_targetprocessingmode();
  static const int kTargetProcessingModeFieldNumber = 7;
  ::vision_messages::VisionProcessingControlPBMsg_TargetProcessingModeEnum targetprocessingmode() const;
  void set_targetprocessingmode(::vision_messages::VisionProcessingControlPBMsg_TargetProcessingModeEnum value);

  // optional bool GPSDeniedProcessingEnabled = 8;
  bool has_gpsdeniedprocessingenabled() const;
  void clear_gpsdeniedprocessingenabled();
  static const int kGPSDeniedProcessingEnabledFieldNumber = 8;
  bool gpsdeniedprocessingenabled() const;
  void set_gpsdeniedprocessingenabled(bool value);

  // optional .vision_messages.VisionProcessingControlPBMsg.GPSDeniedProcessingModeEnum GPSDeniedProcessingMode = 9;
  bool has_gpsdeniedprocessingmode() const;
  void clear_gpsdeniedprocessingmode();
  static const int kGPSDeniedProcessingModeFieldNumber = 9;
  ::vision_messages::VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum gpsdeniedprocessingmode() const;
  void set_gpsdeniedprocessingmode(::vision_messages::VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum value);

  // optional bool RecordImagesEnabled = 10;
  bool has_recordimagesenabled() const;
  void clear_recordimagesenabled();
  static const int kRecordImagesEnabledFieldNumber = 10;
  bool recordimagesenabled() const;
  void set_recordimagesenabled(bool value);

  // optional bool StreamImagesEnabled = 11;
  bool has_streamimagesenabled() const;
  void clear_streamimagesenabled();
  static const int kStreamImagesEnabledFieldNumber = 11;
  bool streamimagesenabled() const;
  void set_streamimagesenabled(bool value);

  // @@protoc_insertion_point(class_scope:vision_messages.VisionProcessingControlPBMsg)
 private:
  inline void set_has_imagecaptureenabled();
  inline void clear_has_imagecaptureenabled();
  inline void set_has_numberofimagestocapture();
  inline void clear_has_numberofimagestocapture();
  inline void set_has_desiredframespersecond();
  inline void clear_has_desiredframespersecond();
  inline void set_has_gpuprocessingenabled();
  inline void clear_has_gpuprocessingenabled();
  inline void set_has_targetimageprocessingenabled();
  inline void clear_has_targetimageprocessingenabled();
  inline void set_has_visionprocessingmode();
  inline void clear_has_visionprocessingmode();
  inline void set_has_targetprocessingmode();
  inline void clear_has_targetprocessingmode();
  inline void set_has_gpsdeniedprocessingenabled();
  inline void clear_has_gpsdeniedprocessingenabled();
  inline void set_has_gpsdeniedprocessingmode();
  inline void clear_has_gpsdeniedprocessingmode();
  inline void set_has_recordimagesenabled();
  inline void clear_has_recordimagesenabled();
  inline void set_has_streamimagesenabled();
  inline void clear_has_streamimagesenabled();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double desiredframespersecond_;
  ::google::protobuf::int32 numberofimagestocapture_;
  bool imagecaptureenabled_;
  bool gpuprocessingenabled_;
  bool targetimageprocessingenabled_;
  bool gpsdeniedprocessingenabled_;
  int visionprocessingmode_;
  int targetprocessingmode_;
  int gpsdeniedprocessingmode_;
  bool recordimagesenabled_;
  bool streamimagesenabled_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static VisionProcessingControlPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class CameraCalControlPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.CameraCalControlPBMsg) */ {
 public:
  CameraCalControlPBMsg();
  virtual ~CameraCalControlPBMsg();

  CameraCalControlPBMsg(const CameraCalControlPBMsg& from);

  inline CameraCalControlPBMsg& operator=(const CameraCalControlPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CameraCalControlPBMsg& default_instance();

  void Swap(CameraCalControlPBMsg* other);

  // implements Message ----------------------------------------------

  inline CameraCalControlPBMsg* New() const { return New(NULL); }

  CameraCalControlPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CameraCalControlPBMsg& from);
  void MergeFrom(const CameraCalControlPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CameraCalControlPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CameraCalControlPBMsg_CameraCalibrationType_e CameraCalibrationType_e;
  static const CameraCalibrationType_e CameraCal_2DPlaneCheckerBoard =
    CameraCalControlPBMsg_CameraCalibrationType_e_CameraCal_2DPlaneCheckerBoard;
  static inline bool CameraCalibrationType_e_IsValid(int value) {
    return CameraCalControlPBMsg_CameraCalibrationType_e_IsValid(value);
  }
  static const CameraCalibrationType_e CameraCalibrationType_e_MIN =
    CameraCalControlPBMsg_CameraCalibrationType_e_CameraCalibrationType_e_MIN;
  static const CameraCalibrationType_e CameraCalibrationType_e_MAX =
    CameraCalControlPBMsg_CameraCalibrationType_e_CameraCalibrationType_e_MAX;
  static const int CameraCalibrationType_e_ARRAYSIZE =
    CameraCalControlPBMsg_CameraCalibrationType_e_CameraCalibrationType_e_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CameraCalibrationType_e_descriptor() {
    return CameraCalControlPBMsg_CameraCalibrationType_e_descriptor();
  }
  static inline const ::std::string& CameraCalibrationType_e_Name(CameraCalibrationType_e value) {
    return CameraCalControlPBMsg_CameraCalibrationType_e_Name(value);
  }
  static inline bool CameraCalibrationType_e_Parse(const ::std::string& name,
      CameraCalibrationType_e* value) {
    return CameraCalControlPBMsg_CameraCalibrationType_e_Parse(name, value);
  }

  typedef CameraCalControlPBMsg_CameraCalCmd_e CameraCalCmd_e;
  static const CameraCalCmd_e NullCmd =
    CameraCalControlPBMsg_CameraCalCmd_e_NullCmd;
  static const CameraCalCmd_e Reset =
    CameraCalControlPBMsg_CameraCalCmd_e_Reset;
  static const CameraCalCmd_e ClearImageSet =
    CameraCalControlPBMsg_CameraCalCmd_e_ClearImageSet;
  static const CameraCalCmd_e StreamImages =
    CameraCalControlPBMsg_CameraCalCmd_e_StreamImages;
  static const CameraCalCmd_e CaptureImage =
    CameraCalControlPBMsg_CameraCalCmd_e_CaptureImage;
  static const CameraCalCmd_e SetImageOk =
    CameraCalControlPBMsg_CameraCalCmd_e_SetImageOk;
  static const CameraCalCmd_e RejectImage =
    CameraCalControlPBMsg_CameraCalCmd_e_RejectImage;
  static const CameraCalCmd_e RunCalProcess =
    CameraCalControlPBMsg_CameraCalCmd_e_RunCalProcess;
  static inline bool CameraCalCmd_e_IsValid(int value) {
    return CameraCalControlPBMsg_CameraCalCmd_e_IsValid(value);
  }
  static const CameraCalCmd_e CameraCalCmd_e_MIN =
    CameraCalControlPBMsg_CameraCalCmd_e_CameraCalCmd_e_MIN;
  static const CameraCalCmd_e CameraCalCmd_e_MAX =
    CameraCalControlPBMsg_CameraCalCmd_e_CameraCalCmd_e_MAX;
  static const int CameraCalCmd_e_ARRAYSIZE =
    CameraCalControlPBMsg_CameraCalCmd_e_CameraCalCmd_e_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CameraCalCmd_e_descriptor() {
    return CameraCalControlPBMsg_CameraCalCmd_e_descriptor();
  }
  static inline const ::std::string& CameraCalCmd_e_Name(CameraCalCmd_e value) {
    return CameraCalControlPBMsg_CameraCalCmd_e_Name(value);
  }
  static inline bool CameraCalCmd_e_Parse(const ::std::string& name,
      CameraCalCmd_e* value) {
    return CameraCalControlPBMsg_CameraCalCmd_e_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .vision_messages.CameraCalControlPBMsg.CameraCalibrationType_e CameraCalibrationType = 1;
  bool has_cameracalibrationtype() const;
  void clear_cameracalibrationtype();
  static const int kCameraCalibrationTypeFieldNumber = 1;
  ::vision_messages::CameraCalControlPBMsg_CameraCalibrationType_e cameracalibrationtype() const;
  void set_cameracalibrationtype(::vision_messages::CameraCalControlPBMsg_CameraCalibrationType_e value);

  // optional .vision_messages.CameraCalControlPBMsg.CameraCalCmd_e CameraCalCmd = 2;
  bool has_cameracalcmd() const;
  void clear_cameracalcmd();
  static const int kCameraCalCmdFieldNumber = 2;
  ::vision_messages::CameraCalControlPBMsg_CameraCalCmd_e cameracalcmd() const;
  void set_cameracalcmd(::vision_messages::CameraCalControlPBMsg_CameraCalCmd_e value);

  // optional string CameraCalBaseFilename = 3;
  bool has_cameracalbasefilename() const;
  void clear_cameracalbasefilename();
  static const int kCameraCalBaseFilenameFieldNumber = 3;
  const ::std::string& cameracalbasefilename() const;
  void set_cameracalbasefilename(const ::std::string& value);
  void set_cameracalbasefilename(const char* value);
  void set_cameracalbasefilename(const char* value, size_t size);
  ::std::string* mutable_cameracalbasefilename();
  ::std::string* release_cameracalbasefilename();
  void set_allocated_cameracalbasefilename(::std::string* cameracalbasefilename);

  // optional int32 NumberOfRows = 4;
  bool has_numberofrows() const;
  void clear_numberofrows();
  static const int kNumberOfRowsFieldNumber = 4;
  ::google::protobuf::int32 numberofrows() const;
  void set_numberofrows(::google::protobuf::int32 value);

  // optional int32 NumberOfCols = 5;
  bool has_numberofcols() const;
  void clear_numberofcols();
  static const int kNumberOfColsFieldNumber = 5;
  ::google::protobuf::int32 numberofcols() const;
  void set_numberofcols(::google::protobuf::int32 value);

  // optional double SquareSizeMilliMeters = 6;
  bool has_squaresizemillimeters() const;
  void clear_squaresizemillimeters();
  static const int kSquareSizeMilliMetersFieldNumber = 6;
  double squaresizemillimeters() const;
  void set_squaresizemillimeters(double value);

  // optional double YawCorrectionDegrees = 7;
  bool has_yawcorrectiondegrees() const;
  void clear_yawcorrectiondegrees();
  static const int kYawCorrectionDegreesFieldNumber = 7;
  double yawcorrectiondegrees() const;
  void set_yawcorrectiondegrees(double value);

  // optional double PitchCorrectionDegrees = 8;
  bool has_pitchcorrectiondegrees() const;
  void clear_pitchcorrectiondegrees();
  static const int kPitchCorrectionDegreesFieldNumber = 8;
  double pitchcorrectiondegrees() const;
  void set_pitchcorrectiondegrees(double value);

  // optional double RollCorrectionDegrees = 9;
  bool has_rollcorrectiondegrees() const;
  void clear_rollcorrectiondegrees();
  static const int kRollCorrectionDegreesFieldNumber = 9;
  double rollcorrectiondegrees() const;
  void set_rollcorrectiondegrees(double value);

  // optional double DelXCorrectionCentiMeters = 10;
  bool has_delxcorrectioncentimeters() const;
  void clear_delxcorrectioncentimeters();
  static const int kDelXCorrectionCentiMetersFieldNumber = 10;
  double delxcorrectioncentimeters() const;
  void set_delxcorrectioncentimeters(double value);

  // optional double DelYCorrectionCentiMeters = 11;
  bool has_delycorrectioncentimeters() const;
  void clear_delycorrectioncentimeters();
  static const int kDelYCorrectionCentiMetersFieldNumber = 11;
  double delycorrectioncentimeters() const;
  void set_delycorrectioncentimeters(double value);

  // optional double DelZCorrectionCentiMeters = 12;
  bool has_delzcorrectioncentimeters() const;
  void clear_delzcorrectioncentimeters();
  static const int kDelZCorrectionCentiMetersFieldNumber = 12;
  double delzcorrectioncentimeters() const;
  void set_delzcorrectioncentimeters(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.CameraCalControlPBMsg)
 private:
  inline void set_has_cameracalibrationtype();
  inline void clear_has_cameracalibrationtype();
  inline void set_has_cameracalcmd();
  inline void clear_has_cameracalcmd();
  inline void set_has_cameracalbasefilename();
  inline void clear_has_cameracalbasefilename();
  inline void set_has_numberofrows();
  inline void clear_has_numberofrows();
  inline void set_has_numberofcols();
  inline void clear_has_numberofcols();
  inline void set_has_squaresizemillimeters();
  inline void clear_has_squaresizemillimeters();
  inline void set_has_yawcorrectiondegrees();
  inline void clear_has_yawcorrectiondegrees();
  inline void set_has_pitchcorrectiondegrees();
  inline void clear_has_pitchcorrectiondegrees();
  inline void set_has_rollcorrectiondegrees();
  inline void clear_has_rollcorrectiondegrees();
  inline void set_has_delxcorrectioncentimeters();
  inline void clear_has_delxcorrectioncentimeters();
  inline void set_has_delycorrectioncentimeters();
  inline void clear_has_delycorrectioncentimeters();
  inline void set_has_delzcorrectioncentimeters();
  inline void clear_has_delzcorrectioncentimeters();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cameracalibrationtype_;
  int cameracalcmd_;
  ::google::protobuf::internal::ArenaStringPtr cameracalbasefilename_;
  ::google::protobuf::int32 numberofrows_;
  ::google::protobuf::int32 numberofcols_;
  double squaresizemillimeters_;
  double yawcorrectiondegrees_;
  double pitchcorrectiondegrees_;
  double rollcorrectiondegrees_;
  double delxcorrectioncentimeters_;
  double delycorrectioncentimeters_;
  double delzcorrectioncentimeters_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CameraCalControlPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class CameraCalStatusPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.CameraCalStatusPBMsg) */ {
 public:
  CameraCalStatusPBMsg();
  virtual ~CameraCalStatusPBMsg();

  CameraCalStatusPBMsg(const CameraCalStatusPBMsg& from);

  inline CameraCalStatusPBMsg& operator=(const CameraCalStatusPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CameraCalStatusPBMsg& default_instance();

  void Swap(CameraCalStatusPBMsg* other);

  // implements Message ----------------------------------------------

  inline CameraCalStatusPBMsg* New() const { return New(NULL); }

  CameraCalStatusPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CameraCalStatusPBMsg& from);
  void MergeFrom(const CameraCalStatusPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CameraCalStatusPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CameraCalStatusPBMsg_CameraCalState_e CameraCalState_e;
  static const CameraCalState_e Reset =
    CameraCalStatusPBMsg_CameraCalState_e_Reset;
  static const CameraCalState_e WaitForStart =
    CameraCalStatusPBMsg_CameraCalState_e_WaitForStart;
  static const CameraCalState_e StreamImages =
    CameraCalStatusPBMsg_CameraCalState_e_StreamImages;
  static const CameraCalState_e ImageValidate =
    CameraCalStatusPBMsg_CameraCalState_e_ImageValidate;
  static const CameraCalState_e ImageCapturedWait =
    CameraCalStatusPBMsg_CameraCalState_e_ImageCapturedWait;
  static const CameraCalState_e CalProcess =
    CameraCalStatusPBMsg_CameraCalState_e_CalProcess;
  static const CameraCalState_e CalComplete =
    CameraCalStatusPBMsg_CameraCalState_e_CalComplete;
  static const CameraCalState_e CalError =
    CameraCalStatusPBMsg_CameraCalState_e_CalError;
  static inline bool CameraCalState_e_IsValid(int value) {
    return CameraCalStatusPBMsg_CameraCalState_e_IsValid(value);
  }
  static const CameraCalState_e CameraCalState_e_MIN =
    CameraCalStatusPBMsg_CameraCalState_e_CameraCalState_e_MIN;
  static const CameraCalState_e CameraCalState_e_MAX =
    CameraCalStatusPBMsg_CameraCalState_e_CameraCalState_e_MAX;
  static const int CameraCalState_e_ARRAYSIZE =
    CameraCalStatusPBMsg_CameraCalState_e_CameraCalState_e_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CameraCalState_e_descriptor() {
    return CameraCalStatusPBMsg_CameraCalState_e_descriptor();
  }
  static inline const ::std::string& CameraCalState_e_Name(CameraCalState_e value) {
    return CameraCalStatusPBMsg_CameraCalState_e_Name(value);
  }
  static inline bool CameraCalState_e_Parse(const ::std::string& name,
      CameraCalState_e* value) {
    return CameraCalStatusPBMsg_CameraCalState_e_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .vision_messages.CameraCalStatusPBMsg.CameraCalState_e CameraCalState = 1;
  bool has_cameracalstate() const;
  void clear_cameracalstate();
  static const int kCameraCalStateFieldNumber = 1;
  ::vision_messages::CameraCalStatusPBMsg_CameraCalState_e cameracalstate() const;
  void set_cameracalstate(::vision_messages::CameraCalStatusPBMsg_CameraCalState_e value);

  // optional int32 NumberOfImagesCaptured = 2;
  bool has_numberofimagescaptured() const;
  void clear_numberofimagescaptured();
  static const int kNumberOfImagesCapturedFieldNumber = 2;
  ::google::protobuf::int32 numberofimagescaptured() const;
  void set_numberofimagescaptured(::google::protobuf::int32 value);

  // optional string CameraCalStatusMsg = 3;
  bool has_cameracalstatusmsg() const;
  void clear_cameracalstatusmsg();
  static const int kCameraCalStatusMsgFieldNumber = 3;
  const ::std::string& cameracalstatusmsg() const;
  void set_cameracalstatusmsg(const ::std::string& value);
  void set_cameracalstatusmsg(const char* value);
  void set_cameracalstatusmsg(const char* value, size_t size);
  ::std::string* mutable_cameracalstatusmsg();
  ::std::string* release_cameracalstatusmsg();
  void set_allocated_cameracalstatusmsg(::std::string* cameracalstatusmsg);

  // optional bool ImageOk = 4;
  bool has_imageok() const;
  void clear_imageok();
  static const int kImageOkFieldNumber = 4;
  bool imageok() const;
  void set_imageok(bool value);

  // @@protoc_insertion_point(class_scope:vision_messages.CameraCalStatusPBMsg)
 private:
  inline void set_has_cameracalstate();
  inline void clear_has_cameracalstate();
  inline void set_has_numberofimagescaptured();
  inline void clear_has_numberofimagescaptured();
  inline void set_has_cameracalstatusmsg();
  inline void clear_has_cameracalstatusmsg();
  inline void set_has_imageok();
  inline void clear_has_imageok();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cameracalstate_;
  ::google::protobuf::int32 numberofimagescaptured_;
  ::google::protobuf::internal::ArenaStringPtr cameracalstatusmsg_;
  bool imageok_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static CameraCalStatusPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class FeatureMatchProcCtrlPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.FeatureMatchProcCtrlPBMsg) */ {
 public:
  FeatureMatchProcCtrlPBMsg();
  virtual ~FeatureMatchProcCtrlPBMsg();

  FeatureMatchProcCtrlPBMsg(const FeatureMatchProcCtrlPBMsg& from);

  inline FeatureMatchProcCtrlPBMsg& operator=(const FeatureMatchProcCtrlPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FeatureMatchProcCtrlPBMsg& default_instance();

  void Swap(FeatureMatchProcCtrlPBMsg* other);

  // implements Message ----------------------------------------------

  inline FeatureMatchProcCtrlPBMsg* New() const { return New(NULL); }

  FeatureMatchProcCtrlPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FeatureMatchProcCtrlPBMsg& from);
  void MergeFrom(const FeatureMatchProcCtrlPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FeatureMatchProcCtrlPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 FeatureMatchingProcCmd = 1;
  bool has_featurematchingproccmd() const;
  void clear_featurematchingproccmd();
  static const int kFeatureMatchingProcCmdFieldNumber = 1;
  ::google::protobuf::int32 featurematchingproccmd() const;
  void set_featurematchingproccmd(::google::protobuf::int32 value);

  // optional int32 FeatureExtractionTypeRoutine = 2;
  bool has_featureextractiontyperoutine() const;
  void clear_featureextractiontyperoutine();
  static const int kFeatureExtractionTypeRoutineFieldNumber = 2;
  ::google::protobuf::int32 featureextractiontyperoutine() const;
  void set_featureextractiontyperoutine(::google::protobuf::int32 value);

  // optional int32 FeatureMatchTypeRoutine = 3;
  bool has_featurematchtyperoutine() const;
  void clear_featurematchtyperoutine();
  static const int kFeatureMatchTypeRoutineFieldNumber = 3;
  ::google::protobuf::int32 featurematchtyperoutine() const;
  void set_featurematchtyperoutine(::google::protobuf::int32 value);

  // optional int32 FMImagePostProcessMethod = 4;
  bool has_fmimagepostprocessmethod() const;
  void clear_fmimagepostprocessmethod();
  static const int kFMImagePostProcessMethodFieldNumber = 4;
  ::google::protobuf::int32 fmimagepostprocessmethod() const;
  void set_fmimagepostprocessmethod(::google::protobuf::int32 value);

  // optional bool UseGPUProcessing = 5;
  bool has_usegpuprocessing() const;
  void clear_usegpuprocessing();
  static const int kUseGPUProcessingFieldNumber = 5;
  bool usegpuprocessing() const;
  void set_usegpuprocessing(bool value);

  // optional int32 ParamI_1 = 10;
  bool has_parami_1() const;
  void clear_parami_1();
  static const int kParamI1FieldNumber = 10;
  ::google::protobuf::int32 parami_1() const;
  void set_parami_1(::google::protobuf::int32 value);

  // optional int32 ParamI_2 = 11;
  bool has_parami_2() const;
  void clear_parami_2();
  static const int kParamI2FieldNumber = 11;
  ::google::protobuf::int32 parami_2() const;
  void set_parami_2(::google::protobuf::int32 value);

  // optional int32 ParamI_3 = 12;
  bool has_parami_3() const;
  void clear_parami_3();
  static const int kParamI3FieldNumber = 12;
  ::google::protobuf::int32 parami_3() const;
  void set_parami_3(::google::protobuf::int32 value);

  // optional int32 ParamI_4 = 13;
  bool has_parami_4() const;
  void clear_parami_4();
  static const int kParamI4FieldNumber = 13;
  ::google::protobuf::int32 parami_4() const;
  void set_parami_4(::google::protobuf::int32 value);

  // optional int32 ParamI_5 = 14;
  bool has_parami_5() const;
  void clear_parami_5();
  static const int kParamI5FieldNumber = 14;
  ::google::protobuf::int32 parami_5() const;
  void set_parami_5(::google::protobuf::int32 value);

  // optional int32 ParamI_6 = 15;
  bool has_parami_6() const;
  void clear_parami_6();
  static const int kParamI6FieldNumber = 15;
  ::google::protobuf::int32 parami_6() const;
  void set_parami_6(::google::protobuf::int32 value);

  // optional int32 ParamI_7 = 16;
  bool has_parami_7() const;
  void clear_parami_7();
  static const int kParamI7FieldNumber = 16;
  ::google::protobuf::int32 parami_7() const;
  void set_parami_7(::google::protobuf::int32 value);

  // optional int32 ParamI_8 = 17;
  bool has_parami_8() const;
  void clear_parami_8();
  static const int kParamI8FieldNumber = 17;
  ::google::protobuf::int32 parami_8() const;
  void set_parami_8(::google::protobuf::int32 value);

  // optional int32 ParamI_9 = 18;
  bool has_parami_9() const;
  void clear_parami_9();
  static const int kParamI9FieldNumber = 18;
  ::google::protobuf::int32 parami_9() const;
  void set_parami_9(::google::protobuf::int32 value);

  // optional double ParamF_10 = 20;
  bool has_paramf_10() const;
  void clear_paramf_10();
  static const int kParamF10FieldNumber = 20;
  double paramf_10() const;
  void set_paramf_10(double value);

  // optional double ParamF_11 = 21;
  bool has_paramf_11() const;
  void clear_paramf_11();
  static const int kParamF11FieldNumber = 21;
  double paramf_11() const;
  void set_paramf_11(double value);

  // optional double ParamF_12 = 22;
  bool has_paramf_12() const;
  void clear_paramf_12();
  static const int kParamF12FieldNumber = 22;
  double paramf_12() const;
  void set_paramf_12(double value);

  // optional double ParamF_13 = 23;
  bool has_paramf_13() const;
  void clear_paramf_13();
  static const int kParamF13FieldNumber = 23;
  double paramf_13() const;
  void set_paramf_13(double value);

  // optional double ParamF_14 = 24;
  bool has_paramf_14() const;
  void clear_paramf_14();
  static const int kParamF14FieldNumber = 24;
  double paramf_14() const;
  void set_paramf_14(double value);

  // optional double ParamF_15 = 25;
  bool has_paramf_15() const;
  void clear_paramf_15();
  static const int kParamF15FieldNumber = 25;
  double paramf_15() const;
  void set_paramf_15(double value);

  // optional double ParamF_16 = 26;
  bool has_paramf_16() const;
  void clear_paramf_16();
  static const int kParamF16FieldNumber = 26;
  double paramf_16() const;
  void set_paramf_16(double value);

  // optional double ParamF_17 = 27;
  bool has_paramf_17() const;
  void clear_paramf_17();
  static const int kParamF17FieldNumber = 27;
  double paramf_17() const;
  void set_paramf_17(double value);

  // optional double ParamF_18 = 28;
  bool has_paramf_18() const;
  void clear_paramf_18();
  static const int kParamF18FieldNumber = 28;
  double paramf_18() const;
  void set_paramf_18(double value);

  // optional double ParamF_19 = 29;
  bool has_paramf_19() const;
  void clear_paramf_19();
  static const int kParamF19FieldNumber = 29;
  double paramf_19() const;
  void set_paramf_19(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.FeatureMatchProcCtrlPBMsg)
 private:
  inline void set_has_featurematchingproccmd();
  inline void clear_has_featurematchingproccmd();
  inline void set_has_featureextractiontyperoutine();
  inline void clear_has_featureextractiontyperoutine();
  inline void set_has_featurematchtyperoutine();
  inline void clear_has_featurematchtyperoutine();
  inline void set_has_fmimagepostprocessmethod();
  inline void clear_has_fmimagepostprocessmethod();
  inline void set_has_usegpuprocessing();
  inline void clear_has_usegpuprocessing();
  inline void set_has_parami_1();
  inline void clear_has_parami_1();
  inline void set_has_parami_2();
  inline void clear_has_parami_2();
  inline void set_has_parami_3();
  inline void clear_has_parami_3();
  inline void set_has_parami_4();
  inline void clear_has_parami_4();
  inline void set_has_parami_5();
  inline void clear_has_parami_5();
  inline void set_has_parami_6();
  inline void clear_has_parami_6();
  inline void set_has_parami_7();
  inline void clear_has_parami_7();
  inline void set_has_parami_8();
  inline void clear_has_parami_8();
  inline void set_has_parami_9();
  inline void clear_has_parami_9();
  inline void set_has_paramf_10();
  inline void clear_has_paramf_10();
  inline void set_has_paramf_11();
  inline void clear_has_paramf_11();
  inline void set_has_paramf_12();
  inline void clear_has_paramf_12();
  inline void set_has_paramf_13();
  inline void clear_has_paramf_13();
  inline void set_has_paramf_14();
  inline void clear_has_paramf_14();
  inline void set_has_paramf_15();
  inline void clear_has_paramf_15();
  inline void set_has_paramf_16();
  inline void clear_has_paramf_16();
  inline void set_has_paramf_17();
  inline void clear_has_paramf_17();
  inline void set_has_paramf_18();
  inline void clear_has_paramf_18();
  inline void set_has_paramf_19();
  inline void clear_has_paramf_19();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 featurematchingproccmd_;
  ::google::protobuf::int32 featureextractiontyperoutine_;
  ::google::protobuf::int32 featurematchtyperoutine_;
  ::google::protobuf::int32 fmimagepostprocessmethod_;
  bool usegpuprocessing_;
  ::google::protobuf::int32 parami_1_;
  ::google::protobuf::int32 parami_2_;
  ::google::protobuf::int32 parami_3_;
  ::google::protobuf::int32 parami_4_;
  ::google::protobuf::int32 parami_5_;
  ::google::protobuf::int32 parami_6_;
  ::google::protobuf::int32 parami_7_;
  ::google::protobuf::int32 parami_8_;
  ::google::protobuf::int32 parami_9_;
  double paramf_10_;
  double paramf_11_;
  double paramf_12_;
  double paramf_13_;
  double paramf_14_;
  double paramf_15_;
  double paramf_16_;
  double paramf_17_;
  double paramf_18_;
  double paramf_19_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static FeatureMatchProcCtrlPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class FeatureMatchProcStatusPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.FeatureMatchProcStatusPBMsg) */ {
 public:
  FeatureMatchProcStatusPBMsg();
  virtual ~FeatureMatchProcStatusPBMsg();

  FeatureMatchProcStatusPBMsg(const FeatureMatchProcStatusPBMsg& from);

  inline FeatureMatchProcStatusPBMsg& operator=(const FeatureMatchProcStatusPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FeatureMatchProcStatusPBMsg& default_instance();

  void Swap(FeatureMatchProcStatusPBMsg* other);

  // implements Message ----------------------------------------------

  inline FeatureMatchProcStatusPBMsg* New() const { return New(NULL); }

  FeatureMatchProcStatusPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FeatureMatchProcStatusPBMsg& from);
  void MergeFrom(const FeatureMatchProcStatusPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FeatureMatchProcStatusPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 FeatureMatchingState = 1;
  bool has_featurematchingstate() const;
  void clear_featurematchingstate();
  static const int kFeatureMatchingStateFieldNumber = 1;
  ::google::protobuf::int32 featurematchingstate() const;
  void set_featurematchingstate(::google::protobuf::int32 value);

  // optional int32 FeatureExtractionTypeRoutine = 2;
  bool has_featureextractiontyperoutine() const;
  void clear_featureextractiontyperoutine();
  static const int kFeatureExtractionTypeRoutineFieldNumber = 2;
  ::google::protobuf::int32 featureextractiontyperoutine() const;
  void set_featureextractiontyperoutine(::google::protobuf::int32 value);

  // optional int32 FeatureMatchTypeRoutine = 3;
  bool has_featurematchtyperoutine() const;
  void clear_featurematchtyperoutine();
  static const int kFeatureMatchTypeRoutineFieldNumber = 3;
  ::google::protobuf::int32 featurematchtyperoutine() const;
  void set_featurematchtyperoutine(::google::protobuf::int32 value);

  // optional string StatusMessage = 4;
  bool has_statusmessage() const;
  void clear_statusmessage();
  static const int kStatusMessageFieldNumber = 4;
  const ::std::string& statusmessage() const;
  void set_statusmessage(const ::std::string& value);
  void set_statusmessage(const char* value);
  void set_statusmessage(const char* value, size_t size);
  ::std::string* mutable_statusmessage();
  ::std::string* release_statusmessage();
  void set_allocated_statusmessage(::std::string* statusmessage);

  // optional int32 NumberOfImagesCaptured = 5;
  bool has_numberofimagescaptured() const;
  void clear_numberofimagescaptured();
  static const int kNumberOfImagesCapturedFieldNumber = 5;
  ::google::protobuf::int32 numberofimagescaptured() const;
  void set_numberofimagescaptured(::google::protobuf::int32 value);

  // optional double ProcessTimer_1 = 6;
  bool has_processtimer_1() const;
  void clear_processtimer_1();
  static const int kProcessTimer1FieldNumber = 6;
  double processtimer_1() const;
  void set_processtimer_1(double value);

  // optional double ProcessTimer_2 = 7;
  bool has_processtimer_2() const;
  void clear_processtimer_2();
  static const int kProcessTimer2FieldNumber = 7;
  double processtimer_2() const;
  void set_processtimer_2(double value);

  // optional int32 StatusValI_1 = 10;
  bool has_statusvali_1() const;
  void clear_statusvali_1();
  static const int kStatusValI1FieldNumber = 10;
  ::google::protobuf::int32 statusvali_1() const;
  void set_statusvali_1(::google::protobuf::int32 value);

  // optional int32 StatusValI_2 = 11;
  bool has_statusvali_2() const;
  void clear_statusvali_2();
  static const int kStatusValI2FieldNumber = 11;
  ::google::protobuf::int32 statusvali_2() const;
  void set_statusvali_2(::google::protobuf::int32 value);

  // optional int32 StatusValI_3 = 12;
  bool has_statusvali_3() const;
  void clear_statusvali_3();
  static const int kStatusValI3FieldNumber = 12;
  ::google::protobuf::int32 statusvali_3() const;
  void set_statusvali_3(::google::protobuf::int32 value);

  // optional int32 StatusValI_4 = 13;
  bool has_statusvali_4() const;
  void clear_statusvali_4();
  static const int kStatusValI4FieldNumber = 13;
  ::google::protobuf::int32 statusvali_4() const;
  void set_statusvali_4(::google::protobuf::int32 value);

  // optional int32 StatusValI_5 = 14;
  bool has_statusvali_5() const;
  void clear_statusvali_5();
  static const int kStatusValI5FieldNumber = 14;
  ::google::protobuf::int32 statusvali_5() const;
  void set_statusvali_5(::google::protobuf::int32 value);

  // optional int32 StatusValI_6 = 15;
  bool has_statusvali_6() const;
  void clear_statusvali_6();
  static const int kStatusValI6FieldNumber = 15;
  ::google::protobuf::int32 statusvali_6() const;
  void set_statusvali_6(::google::protobuf::int32 value);

  // optional int32 StatusValI_7 = 16;
  bool has_statusvali_7() const;
  void clear_statusvali_7();
  static const int kStatusValI7FieldNumber = 16;
  ::google::protobuf::int32 statusvali_7() const;
  void set_statusvali_7(::google::protobuf::int32 value);

  // optional int32 StatusValI_8 = 17;
  bool has_statusvali_8() const;
  void clear_statusvali_8();
  static const int kStatusValI8FieldNumber = 17;
  ::google::protobuf::int32 statusvali_8() const;
  void set_statusvali_8(::google::protobuf::int32 value);

  // optional int32 StatusValI_9 = 18;
  bool has_statusvali_9() const;
  void clear_statusvali_9();
  static const int kStatusValI9FieldNumber = 18;
  ::google::protobuf::int32 statusvali_9() const;
  void set_statusvali_9(::google::protobuf::int32 value);

  // optional double StatusValF_10 = 20;
  bool has_statusvalf_10() const;
  void clear_statusvalf_10();
  static const int kStatusValF10FieldNumber = 20;
  double statusvalf_10() const;
  void set_statusvalf_10(double value);

  // optional double StatusValF_11 = 21;
  bool has_statusvalf_11() const;
  void clear_statusvalf_11();
  static const int kStatusValF11FieldNumber = 21;
  double statusvalf_11() const;
  void set_statusvalf_11(double value);

  // optional double StatusValF_12 = 22;
  bool has_statusvalf_12() const;
  void clear_statusvalf_12();
  static const int kStatusValF12FieldNumber = 22;
  double statusvalf_12() const;
  void set_statusvalf_12(double value);

  // optional double StatusValF_13 = 23;
  bool has_statusvalf_13() const;
  void clear_statusvalf_13();
  static const int kStatusValF13FieldNumber = 23;
  double statusvalf_13() const;
  void set_statusvalf_13(double value);

  // optional double StatusValF_14 = 24;
  bool has_statusvalf_14() const;
  void clear_statusvalf_14();
  static const int kStatusValF14FieldNumber = 24;
  double statusvalf_14() const;
  void set_statusvalf_14(double value);

  // optional double StatusValF_15 = 25;
  bool has_statusvalf_15() const;
  void clear_statusvalf_15();
  static const int kStatusValF15FieldNumber = 25;
  double statusvalf_15() const;
  void set_statusvalf_15(double value);

  // optional double StatusValF_16 = 26;
  bool has_statusvalf_16() const;
  void clear_statusvalf_16();
  static const int kStatusValF16FieldNumber = 26;
  double statusvalf_16() const;
  void set_statusvalf_16(double value);

  // optional double StatusValF_17 = 27;
  bool has_statusvalf_17() const;
  void clear_statusvalf_17();
  static const int kStatusValF17FieldNumber = 27;
  double statusvalf_17() const;
  void set_statusvalf_17(double value);

  // optional double StatusValF_18 = 28;
  bool has_statusvalf_18() const;
  void clear_statusvalf_18();
  static const int kStatusValF18FieldNumber = 28;
  double statusvalf_18() const;
  void set_statusvalf_18(double value);

  // optional double StatusValF_19 = 29;
  bool has_statusvalf_19() const;
  void clear_statusvalf_19();
  static const int kStatusValF19FieldNumber = 29;
  double statusvalf_19() const;
  void set_statusvalf_19(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.FeatureMatchProcStatusPBMsg)
 private:
  inline void set_has_featurematchingstate();
  inline void clear_has_featurematchingstate();
  inline void set_has_featureextractiontyperoutine();
  inline void clear_has_featureextractiontyperoutine();
  inline void set_has_featurematchtyperoutine();
  inline void clear_has_featurematchtyperoutine();
  inline void set_has_statusmessage();
  inline void clear_has_statusmessage();
  inline void set_has_numberofimagescaptured();
  inline void clear_has_numberofimagescaptured();
  inline void set_has_processtimer_1();
  inline void clear_has_processtimer_1();
  inline void set_has_processtimer_2();
  inline void clear_has_processtimer_2();
  inline void set_has_statusvali_1();
  inline void clear_has_statusvali_1();
  inline void set_has_statusvali_2();
  inline void clear_has_statusvali_2();
  inline void set_has_statusvali_3();
  inline void clear_has_statusvali_3();
  inline void set_has_statusvali_4();
  inline void clear_has_statusvali_4();
  inline void set_has_statusvali_5();
  inline void clear_has_statusvali_5();
  inline void set_has_statusvali_6();
  inline void clear_has_statusvali_6();
  inline void set_has_statusvali_7();
  inline void clear_has_statusvali_7();
  inline void set_has_statusvali_8();
  inline void clear_has_statusvali_8();
  inline void set_has_statusvali_9();
  inline void clear_has_statusvali_9();
  inline void set_has_statusvalf_10();
  inline void clear_has_statusvalf_10();
  inline void set_has_statusvalf_11();
  inline void clear_has_statusvalf_11();
  inline void set_has_statusvalf_12();
  inline void clear_has_statusvalf_12();
  inline void set_has_statusvalf_13();
  inline void clear_has_statusvalf_13();
  inline void set_has_statusvalf_14();
  inline void clear_has_statusvalf_14();
  inline void set_has_statusvalf_15();
  inline void clear_has_statusvalf_15();
  inline void set_has_statusvalf_16();
  inline void clear_has_statusvalf_16();
  inline void set_has_statusvalf_17();
  inline void clear_has_statusvalf_17();
  inline void set_has_statusvalf_18();
  inline void clear_has_statusvalf_18();
  inline void set_has_statusvalf_19();
  inline void clear_has_statusvalf_19();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 featurematchingstate_;
  ::google::protobuf::int32 featureextractiontyperoutine_;
  ::google::protobuf::internal::ArenaStringPtr statusmessage_;
  ::google::protobuf::int32 featurematchtyperoutine_;
  ::google::protobuf::int32 numberofimagescaptured_;
  double processtimer_1_;
  double processtimer_2_;
  ::google::protobuf::int32 statusvali_1_;
  ::google::protobuf::int32 statusvali_2_;
  ::google::protobuf::int32 statusvali_3_;
  ::google::protobuf::int32 statusvali_4_;
  ::google::protobuf::int32 statusvali_5_;
  ::google::protobuf::int32 statusvali_6_;
  ::google::protobuf::int32 statusvali_7_;
  ::google::protobuf::int32 statusvali_8_;
  double statusvalf_10_;
  double statusvalf_11_;
  double statusvalf_12_;
  double statusvalf_13_;
  double statusvalf_14_;
  double statusvalf_15_;
  double statusvalf_16_;
  double statusvalf_17_;
  double statusvalf_18_;
  double statusvalf_19_;
  ::google::protobuf::int32 statusvali_9_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static FeatureMatchProcStatusPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class ListOfManagerNamesPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.ListOfManagerNamesPBMsg) */ {
 public:
  ListOfManagerNamesPBMsg();
  virtual ~ListOfManagerNamesPBMsg();

  ListOfManagerNamesPBMsg(const ListOfManagerNamesPBMsg& from);

  inline ListOfManagerNamesPBMsg& operator=(const ListOfManagerNamesPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListOfManagerNamesPBMsg& default_instance();

  void Swap(ListOfManagerNamesPBMsg* other);

  // implements Message ----------------------------------------------

  inline ListOfManagerNamesPBMsg* New() const { return New(NULL); }

  ListOfManagerNamesPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListOfManagerNamesPBMsg& from);
  void MergeFrom(const ListOfManagerNamesPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListOfManagerNamesPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 NumberOfManagers = 1;
  bool has_numberofmanagers() const;
  void clear_numberofmanagers();
  static const int kNumberOfManagersFieldNumber = 1;
  ::google::protobuf::int32 numberofmanagers() const;
  void set_numberofmanagers(::google::protobuf::int32 value);

  // repeated string ListOfManagerNames = 2;
  int listofmanagernames_size() const;
  void clear_listofmanagernames();
  static const int kListOfManagerNamesFieldNumber = 2;
  const ::std::string& listofmanagernames(int index) const;
  ::std::string* mutable_listofmanagernames(int index);
  void set_listofmanagernames(int index, const ::std::string& value);
  void set_listofmanagernames(int index, const char* value);
  void set_listofmanagernames(int index, const char* value, size_t size);
  ::std::string* add_listofmanagernames();
  void add_listofmanagernames(const ::std::string& value);
  void add_listofmanagernames(const char* value);
  void add_listofmanagernames(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& listofmanagernames() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_listofmanagernames();

  // @@protoc_insertion_point(class_scope:vision_messages.ListOfManagerNamesPBMsg)
 private:
  inline void set_has_numberofmanagers();
  inline void clear_has_numberofmanagers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> listofmanagernames_;
  ::google::protobuf::int32 numberofmanagers_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static ListOfManagerNamesPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class SteeringTorqueCtrlPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.SteeringTorqueCtrlPBMsg) */ {
 public:
  SteeringTorqueCtrlPBMsg();
  virtual ~SteeringTorqueCtrlPBMsg();

  SteeringTorqueCtrlPBMsg(const SteeringTorqueCtrlPBMsg& from);

  inline SteeringTorqueCtrlPBMsg& operator=(const SteeringTorqueCtrlPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SteeringTorqueCtrlPBMsg& default_instance();

  void Swap(SteeringTorqueCtrlPBMsg* other);

  // implements Message ----------------------------------------------

  inline SteeringTorqueCtrlPBMsg* New() const { return New(NULL); }

  SteeringTorqueCtrlPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SteeringTorqueCtrlPBMsg& from);
  void MergeFrom(const SteeringTorqueCtrlPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SteeringTorqueCtrlPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double SteeringTorquePercent = 1;
  bool has_steeringtorquepercent() const;
  void clear_steeringtorquepercent();
  static const int kSteeringTorquePercentFieldNumber = 1;
  double steeringtorquepercent() const;
  void set_steeringtorquepercent(double value);

  // optional uint32 SteeringTorqueMap = 2;
  bool has_steeringtorquemap() const;
  void clear_steeringtorquemap();
  static const int kSteeringTorqueMapFieldNumber = 2;
  ::google::protobuf::uint32 steeringtorquemap() const;
  void set_steeringtorquemap(::google::protobuf::uint32 value);

  // optional bool SteeringControlEnabled = 3;
  bool has_steeringcontrolenabled() const;
  void clear_steeringcontrolenabled();
  static const int kSteeringControlEnabledFieldNumber = 3;
  bool steeringcontrolenabled() const;
  void set_steeringcontrolenabled(bool value);

  // optional bool ManualExtControl = 4;
  bool has_manualextcontrol() const;
  void clear_manualextcontrol();
  static const int kManualExtControlFieldNumber = 4;
  bool manualextcontrol() const;
  void set_manualextcontrol(bool value);

  // @@protoc_insertion_point(class_scope:vision_messages.SteeringTorqueCtrlPBMsg)
 private:
  inline void set_has_steeringtorquepercent();
  inline void clear_has_steeringtorquepercent();
  inline void set_has_steeringtorquemap();
  inline void clear_has_steeringtorquemap();
  inline void set_has_steeringcontrolenabled();
  inline void clear_has_steeringcontrolenabled();
  inline void set_has_manualextcontrol();
  inline void clear_has_manualextcontrol();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double steeringtorquepercent_;
  ::google::protobuf::uint32 steeringtorquemap_;
  bool steeringcontrolenabled_;
  bool manualextcontrol_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static SteeringTorqueCtrlPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class DceEPASteeringStatusPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.DceEPASteeringStatusPBMsg) */ {
 public:
  DceEPASteeringStatusPBMsg();
  virtual ~DceEPASteeringStatusPBMsg();

  DceEPASteeringStatusPBMsg(const DceEPASteeringStatusPBMsg& from);

  inline DceEPASteeringStatusPBMsg& operator=(const DceEPASteeringStatusPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DceEPASteeringStatusPBMsg& default_instance();

  void Swap(DceEPASteeringStatusPBMsg* other);

  // implements Message ----------------------------------------------

  inline DceEPASteeringStatusPBMsg* New() const { return New(NULL); }

  DceEPASteeringStatusPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DceEPASteeringStatusPBMsg& from);
  void MergeFrom(const DceEPASteeringStatusPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DceEPASteeringStatusPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double MotorCurrentAmps = 1;
  bool has_motorcurrentamps() const;
  void clear_motorcurrentamps();
  static const int kMotorCurrentAmpsFieldNumber = 1;
  double motorcurrentamps() const;
  void set_motorcurrentamps(double value);

  // optional double PWMDutyCyclePercent = 2;
  bool has_pwmdutycyclepercent() const;
  void clear_pwmdutycyclepercent();
  static const int kPWMDutyCyclePercentFieldNumber = 2;
  double pwmdutycyclepercent() const;
  void set_pwmdutycyclepercent(double value);

  // optional double MotorTorquePercent = 3;
  bool has_motortorquepercent() const;
  void clear_motortorquepercent();
  static const int kMotorTorquePercentFieldNumber = 3;
  double motortorquepercent() const;
  void set_motortorquepercent(double value);

  // optional double SupplyVoltage = 4;
  bool has_supplyvoltage() const;
  void clear_supplyvoltage();
  static const int kSupplyVoltageFieldNumber = 4;
  double supplyvoltage() const;
  void set_supplyvoltage(double value);

  // optional double TempDegC = 5;
  bool has_tempdegc() const;
  void clear_tempdegc();
  static const int kTempDegCFieldNumber = 5;
  double tempdegc() const;
  void set_tempdegc(double value);

  // optional double SteeringAngleDeg = 6;
  bool has_steeringangledeg() const;
  void clear_steeringangledeg();
  static const int kSteeringAngleDegFieldNumber = 6;
  double steeringangledeg() const;
  void set_steeringangledeg(double value);

  // optional int32 SteeringTorqueMapSetting = 7;
  bool has_steeringtorquemapsetting() const;
  void clear_steeringtorquemapsetting();
  static const int kSteeringTorqueMapSettingFieldNumber = 7;
  ::google::protobuf::int32 steeringtorquemapsetting() const;
  void set_steeringtorquemapsetting(::google::protobuf::int32 value);

  // optional int32 SwitchPosition = 8;
  bool has_switchposition() const;
  void clear_switchposition();
  static const int kSwitchPositionFieldNumber = 8;
  ::google::protobuf::int32 switchposition() const;
  void set_switchposition(::google::protobuf::int32 value);

  // optional int32 TorqueA = 9;
  bool has_torquea() const;
  void clear_torquea();
  static const int kTorqueAFieldNumber = 9;
  ::google::protobuf::int32 torquea() const;
  void set_torquea(::google::protobuf::int32 value);

  // optional int32 TorqueB = 10;
  bool has_torqueb() const;
  void clear_torqueb();
  static const int kTorqueBFieldNumber = 10;
  ::google::protobuf::int32 torqueb() const;
  void set_torqueb(::google::protobuf::int32 value);

  // optional int32 ErrorCode = 11;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 11;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // optional int32 StatusFlags = 12;
  bool has_statusflags() const;
  void clear_statusflags();
  static const int kStatusFlagsFieldNumber = 12;
  ::google::protobuf::int32 statusflags() const;
  void set_statusflags(::google::protobuf::int32 value);

  // optional int32 LimitFlags = 13;
  bool has_limitflags() const;
  void clear_limitflags();
  static const int kLimitFlagsFieldNumber = 13;
  ::google::protobuf::int32 limitflags() const;
  void set_limitflags(::google::protobuf::int32 value);

  // optional bool ManualExtControl = 14;
  bool has_manualextcontrol() const;
  void clear_manualextcontrol();
  static const int kManualExtControlFieldNumber = 14;
  bool manualextcontrol() const;
  void set_manualextcontrol(bool value);

  // @@protoc_insertion_point(class_scope:vision_messages.DceEPASteeringStatusPBMsg)
 private:
  inline void set_has_motorcurrentamps();
  inline void clear_has_motorcurrentamps();
  inline void set_has_pwmdutycyclepercent();
  inline void clear_has_pwmdutycyclepercent();
  inline void set_has_motortorquepercent();
  inline void clear_has_motortorquepercent();
  inline void set_has_supplyvoltage();
  inline void clear_has_supplyvoltage();
  inline void set_has_tempdegc();
  inline void clear_has_tempdegc();
  inline void set_has_steeringangledeg();
  inline void clear_has_steeringangledeg();
  inline void set_has_steeringtorquemapsetting();
  inline void clear_has_steeringtorquemapsetting();
  inline void set_has_switchposition();
  inline void clear_has_switchposition();
  inline void set_has_torquea();
  inline void clear_has_torquea();
  inline void set_has_torqueb();
  inline void clear_has_torqueb();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_statusflags();
  inline void clear_has_statusflags();
  inline void set_has_limitflags();
  inline void clear_has_limitflags();
  inline void set_has_manualextcontrol();
  inline void clear_has_manualextcontrol();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double motorcurrentamps_;
  double pwmdutycyclepercent_;
  double motortorquepercent_;
  double supplyvoltage_;
  double tempdegc_;
  double steeringangledeg_;
  ::google::protobuf::int32 steeringtorquemapsetting_;
  ::google::protobuf::int32 switchposition_;
  ::google::protobuf::int32 torquea_;
  ::google::protobuf::int32 torqueb_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::int32 statusflags_;
  ::google::protobuf::int32 limitflags_;
  bool manualextcontrol_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static DceEPASteeringStatusPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class LinearActuatorPositionCtrlPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.LinearActuatorPositionCtrlPBMsg) */ {
 public:
  LinearActuatorPositionCtrlPBMsg();
  virtual ~LinearActuatorPositionCtrlPBMsg();

  LinearActuatorPositionCtrlPBMsg(const LinearActuatorPositionCtrlPBMsg& from);

  inline LinearActuatorPositionCtrlPBMsg& operator=(const LinearActuatorPositionCtrlPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LinearActuatorPositionCtrlPBMsg& default_instance();

  void Swap(LinearActuatorPositionCtrlPBMsg* other);

  // implements Message ----------------------------------------------

  inline LinearActuatorPositionCtrlPBMsg* New() const { return New(NULL); }

  LinearActuatorPositionCtrlPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LinearActuatorPositionCtrlPBMsg& from);
  void MergeFrom(const LinearActuatorPositionCtrlPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LinearActuatorPositionCtrlPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double PositionPercent = 1;
  bool has_positionpercent() const;
  void clear_positionpercent();
  static const int kPositionPercentFieldNumber = 1;
  double positionpercent() const;
  void set_positionpercent(double value);

  // optional bool ClutchEnable = 2;
  bool has_clutchenable() const;
  void clear_clutchenable();
  static const int kClutchEnableFieldNumber = 2;
  bool clutchenable() const;
  void set_clutchenable(bool value);

  // optional bool MotorEnable = 3;
  bool has_motorenable() const;
  void clear_motorenable();
  static const int kMotorEnableFieldNumber = 3;
  bool motorenable() const;
  void set_motorenable(bool value);

  // optional bool ManualExtControl = 4;
  bool has_manualextcontrol() const;
  void clear_manualextcontrol();
  static const int kManualExtControlFieldNumber = 4;
  bool manualextcontrol() const;
  void set_manualextcontrol(bool value);

  // optional double MotorCurrentAmps = 5;
  bool has_motorcurrentamps() const;
  void clear_motorcurrentamps();
  static const int kMotorCurrentAmpsFieldNumber = 5;
  double motorcurrentamps() const;
  void set_motorcurrentamps(double value);

  // optional double TempDegC = 6;
  bool has_tempdegc() const;
  void clear_tempdegc();
  static const int kTempDegCFieldNumber = 6;
  double tempdegc() const;
  void set_tempdegc(double value);

  // optional int32 ErrorFlags = 7;
  bool has_errorflags() const;
  void clear_errorflags();
  static const int kErrorFlagsFieldNumber = 7;
  ::google::protobuf::int32 errorflags() const;
  void set_errorflags(::google::protobuf::int32 value);

  // optional bool ActuatorSetupMode = 8;
  bool has_actuatorsetupmode() const;
  void clear_actuatorsetupmode();
  static const int kActuatorSetupModeFieldNumber = 8;
  bool actuatorsetupmode() const;
  void set_actuatorsetupmode(bool value);

  // @@protoc_insertion_point(class_scope:vision_messages.LinearActuatorPositionCtrlPBMsg)
 private:
  inline void set_has_positionpercent();
  inline void clear_has_positionpercent();
  inline void set_has_clutchenable();
  inline void clear_has_clutchenable();
  inline void set_has_motorenable();
  inline void clear_has_motorenable();
  inline void set_has_manualextcontrol();
  inline void clear_has_manualextcontrol();
  inline void set_has_motorcurrentamps();
  inline void clear_has_motorcurrentamps();
  inline void set_has_tempdegc();
  inline void clear_has_tempdegc();
  inline void set_has_errorflags();
  inline void clear_has_errorflags();
  inline void set_has_actuatorsetupmode();
  inline void clear_has_actuatorsetupmode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double positionpercent_;
  bool clutchenable_;
  bool motorenable_;
  bool manualextcontrol_;
  bool actuatorsetupmode_;
  ::google::protobuf::int32 errorflags_;
  double motorcurrentamps_;
  double tempdegc_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static LinearActuatorPositionCtrlPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class KarTechLinearActuatorParamsPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.KarTechLinearActuatorParamsPBMsg) */ {
 public:
  KarTechLinearActuatorParamsPBMsg();
  virtual ~KarTechLinearActuatorParamsPBMsg();

  KarTechLinearActuatorParamsPBMsg(const KarTechLinearActuatorParamsPBMsg& from);

  inline KarTechLinearActuatorParamsPBMsg& operator=(const KarTechLinearActuatorParamsPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KarTechLinearActuatorParamsPBMsg& default_instance();

  void Swap(KarTechLinearActuatorParamsPBMsg* other);

  // implements Message ----------------------------------------------

  inline KarTechLinearActuatorParamsPBMsg* New() const { return New(NULL); }

  KarTechLinearActuatorParamsPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KarTechLinearActuatorParamsPBMsg& from);
  void MergeFrom(const KarTechLinearActuatorParamsPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KarTechLinearActuatorParamsPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double MinPositionInches = 1;
  bool has_minpositioninches() const;
  void clear_minpositioninches();
  static const int kMinPositionInchesFieldNumber = 1;
  double minpositioninches() const;
  void set_minpositioninches(double value);

  // optional double MaxPositionInches = 2;
  bool has_maxpositioninches() const;
  void clear_maxpositioninches();
  static const int kMaxPositionInchesFieldNumber = 2;
  double maxpositioninches() const;
  void set_maxpositioninches(double value);

  // optional double MotorMaxCurrentLimitAmps = 3;
  bool has_motormaxcurrentlimitamps() const;
  void clear_motormaxcurrentlimitamps();
  static const int kMotorMaxCurrentLimitAmpsFieldNumber = 3;
  double motormaxcurrentlimitamps() const;
  void set_motormaxcurrentlimitamps(double value);

  // optional double FeedbackCtrl_ErrDeadbandInces = 4;
  bool has_feedbackctrl_errdeadbandinces() const;
  void clear_feedbackctrl_errdeadbandinces();
  static const int kFeedbackCtrlErrDeadbandIncesFieldNumber = 4;
  double feedbackctrl_errdeadbandinces() const;
  void set_feedbackctrl_errdeadbandinces(double value);

  // optional uint32 FeedbackCtrl_KP = 5;
  bool has_feedbackctrl_kp() const;
  void clear_feedbackctrl_kp();
  static const int kFeedbackCtrlKPFieldNumber = 5;
  ::google::protobuf::uint32 feedbackctrl_kp() const;
  void set_feedbackctrl_kp(::google::protobuf::uint32 value);

  // optional uint32 FeedbackCtrl_KI = 6;
  bool has_feedbackctrl_ki() const;
  void clear_feedbackctrl_ki();
  static const int kFeedbackCtrlKIFieldNumber = 6;
  ::google::protobuf::uint32 feedbackctrl_ki() const;
  void set_feedbackctrl_ki(::google::protobuf::uint32 value);

  // optional uint32 FeedbackCtrl_KD = 7;
  bool has_feedbackctrl_kd() const;
  void clear_feedbackctrl_kd();
  static const int kFeedbackCtrlKDFieldNumber = 7;
  ::google::protobuf::uint32 feedbackctrl_kd() const;
  void set_feedbackctrl_kd(::google::protobuf::uint32 value);

  // optional uint32 FeedbackCtrl_CLFreq = 8;
  bool has_feedbackctrl_clfreq() const;
  void clear_feedbackctrl_clfreq();
  static const int kFeedbackCtrlCLFreqFieldNumber = 8;
  ::google::protobuf::uint32 feedbackctrl_clfreq() const;
  void set_feedbackctrl_clfreq(::google::protobuf::uint32 value);

  // optional uint32 Motor_MinPWM = 9;
  bool has_motor_minpwm() const;
  void clear_motor_minpwm();
  static const int kMotorMinPWMFieldNumber = 9;
  ::google::protobuf::uint32 motor_minpwm() const;
  void set_motor_minpwm(::google::protobuf::uint32 value);

  // optional uint32 Motor_MaxPWM = 10;
  bool has_motor_maxpwm() const;
  void clear_motor_maxpwm();
  static const int kMotorMaxPWMFieldNumber = 10;
  ::google::protobuf::uint32 motor_maxpwm() const;
  void set_motor_maxpwm(::google::protobuf::uint32 value);

  // optional uint32 Motor_pwmFreq = 11;
  bool has_motor_pwmfreq() const;
  void clear_motor_pwmfreq();
  static const int kMotorPwmFreqFieldNumber = 11;
  ::google::protobuf::uint32 motor_pwmfreq() const;
  void set_motor_pwmfreq(::google::protobuf::uint32 value);

  // optional uint32 PositionReachedErrorTimeMSec = 12;
  bool has_positionreachederrortimemsec() const;
  void clear_positionreachederrortimemsec();
  static const int kPositionReachedErrorTimeMSecFieldNumber = 12;
  ::google::protobuf::uint32 positionreachederrortimemsec() const;
  void set_positionreachederrortimemsec(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vision_messages.KarTechLinearActuatorParamsPBMsg)
 private:
  inline void set_has_minpositioninches();
  inline void clear_has_minpositioninches();
  inline void set_has_maxpositioninches();
  inline void clear_has_maxpositioninches();
  inline void set_has_motormaxcurrentlimitamps();
  inline void clear_has_motormaxcurrentlimitamps();
  inline void set_has_feedbackctrl_errdeadbandinces();
  inline void clear_has_feedbackctrl_errdeadbandinces();
  inline void set_has_feedbackctrl_kp();
  inline void clear_has_feedbackctrl_kp();
  inline void set_has_feedbackctrl_ki();
  inline void clear_has_feedbackctrl_ki();
  inline void set_has_feedbackctrl_kd();
  inline void clear_has_feedbackctrl_kd();
  inline void set_has_feedbackctrl_clfreq();
  inline void clear_has_feedbackctrl_clfreq();
  inline void set_has_motor_minpwm();
  inline void clear_has_motor_minpwm();
  inline void set_has_motor_maxpwm();
  inline void clear_has_motor_maxpwm();
  inline void set_has_motor_pwmfreq();
  inline void clear_has_motor_pwmfreq();
  inline void set_has_positionreachederrortimemsec();
  inline void clear_has_positionreachederrortimemsec();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double minpositioninches_;
  double maxpositioninches_;
  double motormaxcurrentlimitamps_;
  double feedbackctrl_errdeadbandinces_;
  ::google::protobuf::uint32 feedbackctrl_kp_;
  ::google::protobuf::uint32 feedbackctrl_ki_;
  ::google::protobuf::uint32 feedbackctrl_kd_;
  ::google::protobuf::uint32 feedbackctrl_clfreq_;
  ::google::protobuf::uint32 motor_minpwm_;
  ::google::protobuf::uint32 motor_maxpwm_;
  ::google::protobuf::uint32 motor_pwmfreq_;
  ::google::protobuf::uint32 positionreachederrortimemsec_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static KarTechLinearActuatorParamsPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class KarTechLinearActuatorSetupPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.KarTechLinearActuatorSetupPBMsg) */ {
 public:
  KarTechLinearActuatorSetupPBMsg();
  virtual ~KarTechLinearActuatorSetupPBMsg();

  KarTechLinearActuatorSetupPBMsg(const KarTechLinearActuatorSetupPBMsg& from);

  inline KarTechLinearActuatorSetupPBMsg& operator=(const KarTechLinearActuatorSetupPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KarTechLinearActuatorSetupPBMsg& default_instance();

  void Swap(KarTechLinearActuatorSetupPBMsg* other);

  // implements Message ----------------------------------------------

  inline KarTechLinearActuatorSetupPBMsg* New() const { return New(NULL); }

  KarTechLinearActuatorSetupPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KarTechLinearActuatorSetupPBMsg& from);
  void MergeFrom(const KarTechLinearActuatorSetupPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KarTechLinearActuatorSetupPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool ResetOutputs = 1;
  bool has_resetoutputs() const;
  void clear_resetoutputs();
  static const int kResetOutputsFieldNumber = 1;
  bool resetoutputs() const;
  void set_resetoutputs(bool value);

  // optional bool ResetHardwareCfgs = 2;
  bool has_resethardwarecfgs() const;
  void clear_resethardwarecfgs();
  static const int kResetHardwareCfgsFieldNumber = 2;
  bool resethardwarecfgs() const;
  void set_resethardwarecfgs(bool value);

  // optional bool ResetUserCfgs = 3;
  bool has_resetusercfgs() const;
  void clear_resetusercfgs();
  static const int kResetUserCfgsFieldNumber = 3;
  bool resetusercfgs() const;
  void set_resetusercfgs(bool value);

  // optional bool ResetAll = 4;
  bool has_resetall() const;
  void clear_resetall();
  static const int kResetAllFieldNumber = 4;
  bool resetall() const;
  void set_resetall(bool value);

  // optional bool AutoZeroCal = 5;
  bool has_autozerocal() const;
  void clear_autozerocal();
  static const int kAutoZeroCalFieldNumber = 5;
  bool autozerocal() const;
  void set_autozerocal(bool value);

  // optional bool SetCanCommandResponsIDs = 6;
  bool has_setcancommandresponsids() const;
  void clear_setcancommandresponsids();
  static const int kSetCanCommandResponsIDsFieldNumber = 6;
  bool setcancommandresponsids() const;
  void set_setcancommandresponsids(bool value);

  // @@protoc_insertion_point(class_scope:vision_messages.KarTechLinearActuatorSetupPBMsg)
 private:
  inline void set_has_resetoutputs();
  inline void clear_has_resetoutputs();
  inline void set_has_resethardwarecfgs();
  inline void clear_has_resethardwarecfgs();
  inline void set_has_resetusercfgs();
  inline void clear_has_resetusercfgs();
  inline void set_has_resetall();
  inline void clear_has_resetall();
  inline void set_has_autozerocal();
  inline void clear_has_autozerocal();
  inline void set_has_setcancommandresponsids();
  inline void clear_has_setcancommandresponsids();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool resetoutputs_;
  bool resethardwarecfgs_;
  bool resetusercfgs_;
  bool resetall_;
  bool autozerocal_;
  bool setcancommandresponsids_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static KarTechLinearActuatorSetupPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class HeadOrientationPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.HeadOrientationPBMsg) */ {
 public:
  HeadOrientationPBMsg();
  virtual ~HeadOrientationPBMsg();

  HeadOrientationPBMsg(const HeadOrientationPBMsg& from);

  inline HeadOrientationPBMsg& operator=(const HeadOrientationPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeadOrientationPBMsg& default_instance();

  void Swap(HeadOrientationPBMsg* other);

  // implements Message ----------------------------------------------

  inline HeadOrientationPBMsg* New() const { return New(NULL); }

  HeadOrientationPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeadOrientationPBMsg& from);
  void MergeFrom(const HeadOrientationPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeadOrientationPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double HeadRollDegrees = 1;
  bool has_headrolldegrees() const;
  void clear_headrolldegrees();
  static const int kHeadRollDegreesFieldNumber = 1;
  double headrolldegrees() const;
  void set_headrolldegrees(double value);

  // optional double HeadPitchDegrees = 2;
  bool has_headpitchdegrees() const;
  void clear_headpitchdegrees();
  static const int kHeadPitchDegreesFieldNumber = 2;
  double headpitchdegrees() const;
  void set_headpitchdegrees(double value);

  // optional double HeadYawDegrees = 3;
  bool has_headyawdegrees() const;
  void clear_headyawdegrees();
  static const int kHeadYawDegreesFieldNumber = 3;
  double headyawdegrees() const;
  void set_headyawdegrees(double value);

  // optional double CovarianceNorm = 4;
  bool has_covariancenorm() const;
  void clear_covariancenorm();
  static const int kCovarianceNormFieldNumber = 4;
  double covariancenorm() const;
  void set_covariancenorm(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.HeadOrientationPBMsg)
 private:
  inline void set_has_headrolldegrees();
  inline void clear_has_headrolldegrees();
  inline void set_has_headpitchdegrees();
  inline void clear_has_headpitchdegrees();
  inline void set_has_headyawdegrees();
  inline void clear_has_headyawdegrees();
  inline void set_has_covariancenorm();
  inline void clear_has_covariancenorm();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double headrolldegrees_;
  double headpitchdegrees_;
  double headyawdegrees_;
  double covariancenorm_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static HeadOrientationPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class SipAndPuffPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.SipAndPuffPBMsg) */ {
 public:
  SipAndPuffPBMsg();
  virtual ~SipAndPuffPBMsg();

  SipAndPuffPBMsg(const SipAndPuffPBMsg& from);

  inline SipAndPuffPBMsg& operator=(const SipAndPuffPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SipAndPuffPBMsg& default_instance();

  void Swap(SipAndPuffPBMsg* other);

  // implements Message ----------------------------------------------

  inline SipAndPuffPBMsg* New() const { return New(NULL); }

  SipAndPuffPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SipAndPuffPBMsg& from);
  void MergeFrom(const SipAndPuffPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SipAndPuffPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double SipAndPuffPecent = 1;
  bool has_sipandpuffpecent() const;
  void clear_sipandpuffpecent();
  static const int kSipAndPuffPecentFieldNumber = 1;
  double sipandpuffpecent() const;
  void set_sipandpuffpecent(double value);

  // optional double SipAndPuffIntegralPercent = 2;
  bool has_sipandpuffintegralpercent() const;
  void clear_sipandpuffintegralpercent();
  static const int kSipAndPuffIntegralPercentFieldNumber = 2;
  double sipandpuffintegralpercent() const;
  void set_sipandpuffintegralpercent(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.SipAndPuffPBMsg)
 private:
  inline void set_has_sipandpuffpecent();
  inline void clear_has_sipandpuffpecent();
  inline void set_has_sipandpuffintegralpercent();
  inline void clear_has_sipandpuffintegralpercent();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double sipandpuffpecent_;
  double sipandpuffintegralpercent_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static SipAndPuffPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class IMUCommandResponsePBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.IMUCommandResponsePBMsg) */ {
 public:
  IMUCommandResponsePBMsg();
  virtual ~IMUCommandResponsePBMsg();

  IMUCommandResponsePBMsg(const IMUCommandResponsePBMsg& from);

  inline IMUCommandResponsePBMsg& operator=(const IMUCommandResponsePBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IMUCommandResponsePBMsg& default_instance();

  void Swap(IMUCommandResponsePBMsg* other);

  // implements Message ----------------------------------------------

  inline IMUCommandResponsePBMsg* New() const { return New(NULL); }

  IMUCommandResponsePBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IMUCommandResponsePBMsg& from);
  void MergeFrom(const IMUCommandResponsePBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMUCommandResponsePBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool IMURemoteCtrlEnable = 1;
  bool has_imuremotectrlenable() const;
  void clear_imuremotectrlenable();
  static const int kIMURemoteCtrlEnableFieldNumber = 1;
  bool imuremotectrlenable() const;
  void set_imuremotectrlenable(bool value);

  // optional string CmdRspMsg = 2;
  bool has_cmdrspmsg() const;
  void clear_cmdrspmsg();
  static const int kCmdRspMsgFieldNumber = 2;
  const ::std::string& cmdrspmsg() const;
  void set_cmdrspmsg(const ::std::string& value);
  void set_cmdrspmsg(const char* value);
  void set_cmdrspmsg(const char* value, size_t size);
  ::std::string* mutable_cmdrspmsg();
  ::std::string* release_cmdrspmsg();
  void set_allocated_cmdrspmsg(::std::string* cmdrspmsg);

  // @@protoc_insertion_point(class_scope:vision_messages.IMUCommandResponsePBMsg)
 private:
  inline void set_has_imuremotectrlenable();
  inline void clear_has_imuremotectrlenable();
  inline void set_has_cmdrspmsg();
  inline void clear_has_cmdrspmsg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cmdrspmsg_;
  bool imuremotectrlenable_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static IMUCommandResponsePBMsg* default_instance_;
};
// -------------------------------------------------------------------

class PlaybackControlPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.PlaybackControlPBMsg) */ {
 public:
  PlaybackControlPBMsg();
  virtual ~PlaybackControlPBMsg();

  PlaybackControlPBMsg(const PlaybackControlPBMsg& from);

  inline PlaybackControlPBMsg& operator=(const PlaybackControlPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaybackControlPBMsg& default_instance();

  void Swap(PlaybackControlPBMsg* other);

  // implements Message ----------------------------------------------

  inline PlaybackControlPBMsg* New() const { return New(NULL); }

  PlaybackControlPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlaybackControlPBMsg& from);
  void MergeFrom(const PlaybackControlPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlaybackControlPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DataLogDirectory = 1;
  bool has_datalogdirectory() const;
  void clear_datalogdirectory();
  static const int kDataLogDirectoryFieldNumber = 1;
  const ::std::string& datalogdirectory() const;
  void set_datalogdirectory(const ::std::string& value);
  void set_datalogdirectory(const char* value);
  void set_datalogdirectory(const char* value, size_t size);
  ::std::string* mutable_datalogdirectory();
  ::std::string* release_datalogdirectory();
  void set_allocated_datalogdirectory(::std::string* datalogdirectory);

  // optional bool EnablePlayback = 2;
  bool has_enableplayback() const;
  void clear_enableplayback();
  static const int kEnablePlaybackFieldNumber = 2;
  bool enableplayback() const;
  void set_enableplayback(bool value);

  // optional bool LoopBackToStartOfDataRecords = 3;
  bool has_loopbacktostartofdatarecords() const;
  void clear_loopbacktostartofdatarecords();
  static const int kLoopBackToStartOfDataRecordsFieldNumber = 3;
  bool loopbacktostartofdatarecords() const;
  void set_loopbacktostartofdatarecords(bool value);

  // optional bool StartPlayback = 4;
  bool has_startplayback() const;
  void clear_startplayback();
  static const int kStartPlaybackFieldNumber = 4;
  bool startplayback() const;
  void set_startplayback(bool value);

  // optional bool TimeSyncPlayback = 5;
  bool has_timesyncplayback() const;
  void clear_timesyncplayback();
  static const int kTimeSyncPlaybackFieldNumber = 5;
  bool timesyncplayback() const;
  void set_timesyncplayback(bool value);

  // optional bool ResetPlayback = 6;
  bool has_resetplayback() const;
  void clear_resetplayback();
  static const int kResetPlaybackFieldNumber = 6;
  bool resetplayback() const;
  void set_resetplayback(bool value);

  // optional double PlayForTimeSeconds = 7;
  bool has_playfortimeseconds() const;
  void clear_playfortimeseconds();
  static const int kPlayForTimeSecondsFieldNumber = 7;
  double playfortimeseconds() const;
  void set_playfortimeseconds(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.PlaybackControlPBMsg)
 private:
  inline void set_has_datalogdirectory();
  inline void clear_has_datalogdirectory();
  inline void set_has_enableplayback();
  inline void clear_has_enableplayback();
  inline void set_has_loopbacktostartofdatarecords();
  inline void clear_has_loopbacktostartofdatarecords();
  inline void set_has_startplayback();
  inline void clear_has_startplayback();
  inline void set_has_timesyncplayback();
  inline void clear_has_timesyncplayback();
  inline void set_has_resetplayback();
  inline void clear_has_resetplayback();
  inline void set_has_playfortimeseconds();
  inline void clear_has_playfortimeseconds();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr datalogdirectory_;
  bool enableplayback_;
  bool loopbacktostartofdatarecords_;
  bool startplayback_;
  bool timesyncplayback_;
  bool resetplayback_;
  double playfortimeseconds_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PlaybackControlPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class HeadTrackingControlPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.HeadTrackingControlPBMsg) */ {
 public:
  HeadTrackingControlPBMsg();
  virtual ~HeadTrackingControlPBMsg();

  HeadTrackingControlPBMsg(const HeadTrackingControlPBMsg& from);

  inline HeadTrackingControlPBMsg& operator=(const HeadTrackingControlPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeadTrackingControlPBMsg& default_instance();

  void Swap(HeadTrackingControlPBMsg* other);

  // implements Message ----------------------------------------------

  inline HeadTrackingControlPBMsg* New() const { return New(NULL); }

  HeadTrackingControlPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeadTrackingControlPBMsg& from);
  void MergeFrom(const HeadTrackingControlPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeadTrackingControlPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Canny_low = 1;
  bool has_canny_low() const;
  void clear_canny_low();
  static const int kCannyLowFieldNumber = 1;
  ::google::protobuf::int32 canny_low() const;
  void set_canny_low(::google::protobuf::int32 value);

  // optional int32 Canny_high = 2;
  bool has_canny_high() const;
  void clear_canny_high();
  static const int kCannyHighFieldNumber = 2;
  ::google::protobuf::int32 canny_high() const;
  void set_canny_high(::google::protobuf::int32 value);

  // optional int32 GlyphAreaPixels_min = 3;
  bool has_glyphareapixels_min() const;
  void clear_glyphareapixels_min();
  static const int kGlyphAreaPixelsMinFieldNumber = 3;
  ::google::protobuf::int32 glyphareapixels_min() const;
  void set_glyphareapixels_min(::google::protobuf::int32 value);

  // optional int32 GlyphAreaPixels_max = 4;
  bool has_glyphareapixels_max() const;
  void clear_glyphareapixels_max();
  static const int kGlyphAreaPixelsMaxFieldNumber = 4;
  ::google::protobuf::int32 glyphareapixels_max() const;
  void set_glyphareapixels_max(::google::protobuf::int32 value);

  // optional int32 NumberOfIterations = 5;
  bool has_numberofiterations() const;
  void clear_numberofiterations();
  static const int kNumberOfIterationsFieldNumber = 5;
  ::google::protobuf::int32 numberofiterations() const;
  void set_numberofiterations(::google::protobuf::int32 value);

  // optional double ReprojectionErrorDistance = 6;
  bool has_reprojectionerrordistance() const;
  void clear_reprojectionerrordistance();
  static const int kReprojectionErrorDistanceFieldNumber = 6;
  double reprojectionerrordistance() const;
  void set_reprojectionerrordistance(double value);

  // optional double ConfidencePercent = 7;
  bool has_confidencepercent() const;
  void clear_confidencepercent();
  static const int kConfidencePercentFieldNumber = 7;
  double confidencepercent() const;
  void set_confidencepercent(double value);

  // optional uint32 HeadTrackingImageDisplayType = 8;
  bool has_headtrackingimagedisplaytype() const;
  void clear_headtrackingimagedisplaytype();
  static const int kHeadTrackingImageDisplayTypeFieldNumber = 8;
  ::google::protobuf::uint32 headtrackingimagedisplaytype() const;
  void set_headtrackingimagedisplaytype(::google::protobuf::uint32 value);

  // optional uint32 GlyphModelIndex = 9;
  bool has_glyphmodelindex() const;
  void clear_glyphmodelindex();
  static const int kGlyphModelIndexFieldNumber = 9;
  ::google::protobuf::uint32 glyphmodelindex() const;
  void set_glyphmodelindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vision_messages.HeadTrackingControlPBMsg)
 private:
  inline void set_has_canny_low();
  inline void clear_has_canny_low();
  inline void set_has_canny_high();
  inline void clear_has_canny_high();
  inline void set_has_glyphareapixels_min();
  inline void clear_has_glyphareapixels_min();
  inline void set_has_glyphareapixels_max();
  inline void clear_has_glyphareapixels_max();
  inline void set_has_numberofiterations();
  inline void clear_has_numberofiterations();
  inline void set_has_reprojectionerrordistance();
  inline void clear_has_reprojectionerrordistance();
  inline void set_has_confidencepercent();
  inline void clear_has_confidencepercent();
  inline void set_has_headtrackingimagedisplaytype();
  inline void clear_has_headtrackingimagedisplaytype();
  inline void set_has_glyphmodelindex();
  inline void clear_has_glyphmodelindex();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 canny_low_;
  ::google::protobuf::int32 canny_high_;
  ::google::protobuf::int32 glyphareapixels_min_;
  ::google::protobuf::int32 glyphareapixels_max_;
  double reprojectionerrordistance_;
  ::google::protobuf::int32 numberofiterations_;
  ::google::protobuf::uint32 headtrackingimagedisplaytype_;
  double confidencepercent_;
  ::google::protobuf::uint32 glyphmodelindex_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static HeadTrackingControlPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class TrackHeadOrientationPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.TrackHeadOrientationPBMsg) */ {
 public:
  TrackHeadOrientationPBMsg();
  virtual ~TrackHeadOrientationPBMsg();

  TrackHeadOrientationPBMsg(const TrackHeadOrientationPBMsg& from);

  inline TrackHeadOrientationPBMsg& operator=(const TrackHeadOrientationPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrackHeadOrientationPBMsg& default_instance();

  void Swap(TrackHeadOrientationPBMsg* other);

  // implements Message ----------------------------------------------

  inline TrackHeadOrientationPBMsg* New() const { return New(NULL); }

  TrackHeadOrientationPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrackHeadOrientationPBMsg& from);
  void MergeFrom(const TrackHeadOrientationPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrackHeadOrientationPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double HeadOrientationQuaternion_W = 1;
  bool has_headorientationquaternion_w() const;
  void clear_headorientationquaternion_w();
  static const int kHeadOrientationQuaternionWFieldNumber = 1;
  double headorientationquaternion_w() const;
  void set_headorientationquaternion_w(double value);

  // optional double HeadOrientationQuaternion_X = 2;
  bool has_headorientationquaternion_x() const;
  void clear_headorientationquaternion_x();
  static const int kHeadOrientationQuaternionXFieldNumber = 2;
  double headorientationquaternion_x() const;
  void set_headorientationquaternion_x(double value);

  // optional double HeadOrientationQuaternion_Y = 3;
  bool has_headorientationquaternion_y() const;
  void clear_headorientationquaternion_y();
  static const int kHeadOrientationQuaternionYFieldNumber = 3;
  double headorientationquaternion_y() const;
  void set_headorientationquaternion_y(double value);

  // optional double HeadOrientationQuaternion_Z = 4;
  bool has_headorientationquaternion_z() const;
  void clear_headorientationquaternion_z();
  static const int kHeadOrientationQuaternionZFieldNumber = 4;
  double headorientationquaternion_z() const;
  void set_headorientationquaternion_z(double value);

  // optional double HeadTranslationVec_X = 5;
  bool has_headtranslationvec_x() const;
  void clear_headtranslationvec_x();
  static const int kHeadTranslationVecXFieldNumber = 5;
  double headtranslationvec_x() const;
  void set_headtranslationvec_x(double value);

  // optional double HeadTranslationVec_Y = 6;
  bool has_headtranslationvec_y() const;
  void clear_headtranslationvec_y();
  static const int kHeadTranslationVecYFieldNumber = 6;
  double headtranslationvec_y() const;
  void set_headtranslationvec_y(double value);

  // optional double HeadTranslationVec_Z = 7;
  bool has_headtranslationvec_z() const;
  void clear_headtranslationvec_z();
  static const int kHeadTranslationVecZFieldNumber = 7;
  double headtranslationvec_z() const;
  void set_headtranslationvec_z(double value);

  // optional bool IsDataValid = 8;
  bool has_isdatavalid() const;
  void clear_isdatavalid();
  static const int kIsDataValidFieldNumber = 8;
  bool isdatavalid() const;
  void set_isdatavalid(bool value);

  // optional uint32 ImageNumber = 9;
  bool has_imagenumber() const;
  void clear_imagenumber();
  static const int kImageNumberFieldNumber = 9;
  ::google::protobuf::uint32 imagenumber() const;
  void set_imagenumber(::google::protobuf::uint32 value);

  // optional double ImageCaptureTimeStampSec = 10;
  bool has_imagecapturetimestampsec() const;
  void clear_imagecapturetimestampsec();
  static const int kImageCaptureTimeStampSecFieldNumber = 10;
  double imagecapturetimestampsec() const;
  void set_imagecapturetimestampsec(double value);

  // optional double VidereTimeStampSec = 11;
  bool has_videretimestampsec() const;
  void clear_videretimestampsec();
  static const int kVidereTimeStampSecFieldNumber = 11;
  double videretimestampsec() const;
  void set_videretimestampsec(double value);

  // optional double CovarianceNorm = 12;
  bool has_covariancenorm() const;
  void clear_covariancenorm();
  static const int kCovarianceNormFieldNumber = 12;
  double covariancenorm() const;
  void set_covariancenorm(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.TrackHeadOrientationPBMsg)
 private:
  inline void set_has_headorientationquaternion_w();
  inline void clear_has_headorientationquaternion_w();
  inline void set_has_headorientationquaternion_x();
  inline void clear_has_headorientationquaternion_x();
  inline void set_has_headorientationquaternion_y();
  inline void clear_has_headorientationquaternion_y();
  inline void set_has_headorientationquaternion_z();
  inline void clear_has_headorientationquaternion_z();
  inline void set_has_headtranslationvec_x();
  inline void clear_has_headtranslationvec_x();
  inline void set_has_headtranslationvec_y();
  inline void clear_has_headtranslationvec_y();
  inline void set_has_headtranslationvec_z();
  inline void clear_has_headtranslationvec_z();
  inline void set_has_isdatavalid();
  inline void clear_has_isdatavalid();
  inline void set_has_imagenumber();
  inline void clear_has_imagenumber();
  inline void set_has_imagecapturetimestampsec();
  inline void clear_has_imagecapturetimestampsec();
  inline void set_has_videretimestampsec();
  inline void clear_has_videretimestampsec();
  inline void set_has_covariancenorm();
  inline void clear_has_covariancenorm();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double headorientationquaternion_w_;
  double headorientationquaternion_x_;
  double headorientationquaternion_y_;
  double headorientationquaternion_z_;
  double headtranslationvec_x_;
  double headtranslationvec_y_;
  double headtranslationvec_z_;
  bool isdatavalid_;
  ::google::protobuf::uint32 imagenumber_;
  double imagecapturetimestampsec_;
  double videretimestampsec_;
  double covariancenorm_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static TrackHeadOrientationPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class IMUAccelGyroDataPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.IMUAccelGyroDataPBMsg) */ {
 public:
  IMUAccelGyroDataPBMsg();
  virtual ~IMUAccelGyroDataPBMsg();

  IMUAccelGyroDataPBMsg(const IMUAccelGyroDataPBMsg& from);

  inline IMUAccelGyroDataPBMsg& operator=(const IMUAccelGyroDataPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IMUAccelGyroDataPBMsg& default_instance();

  void Swap(IMUAccelGyroDataPBMsg* other);

  // implements Message ----------------------------------------------

  inline IMUAccelGyroDataPBMsg* New() const { return New(NULL); }

  IMUAccelGyroDataPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IMUAccelGyroDataPBMsg& from);
  void MergeFrom(const IMUAccelGyroDataPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMUAccelGyroDataPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 IMULocation = 1;
  bool has_imulocation() const;
  void clear_imulocation();
  static const int kIMULocationFieldNumber = 1;
  ::google::protobuf::int32 imulocation() const;
  void set_imulocation(::google::protobuf::int32 value);

  // optional double IMUTimeStampSec = 2;
  bool has_imutimestampsec() const;
  void clear_imutimestampsec();
  static const int kIMUTimeStampSecFieldNumber = 2;
  double imutimestampsec() const;
  void set_imutimestampsec(double value);

  // optional double VidereTimeStampSec = 3;
  bool has_videretimestampsec() const;
  void clear_videretimestampsec();
  static const int kVidereTimeStampSecFieldNumber = 3;
  double videretimestampsec() const;
  void set_videretimestampsec(double value);

  // optional double AccelMPS2_X = 4;
  bool has_accelmps2_x() const;
  void clear_accelmps2_x();
  static const int kAccelMPS2XFieldNumber = 4;
  double accelmps2_x() const;
  void set_accelmps2_x(double value);

  // optional double AccelMPS2_Y = 5;
  bool has_accelmps2_y() const;
  void clear_accelmps2_y();
  static const int kAccelMPS2YFieldNumber = 5;
  double accelmps2_y() const;
  void set_accelmps2_y(double value);

  // optional double AccelMPS2_Z = 6;
  bool has_accelmps2_z() const;
  void clear_accelmps2_z();
  static const int kAccelMPS2ZFieldNumber = 6;
  double accelmps2_z() const;
  void set_accelmps2_z(double value);

  // optional double GyroRadPerSec_X = 7;
  bool has_gyroradpersec_x() const;
  void clear_gyroradpersec_x();
  static const int kGyroRadPerSecXFieldNumber = 7;
  double gyroradpersec_x() const;
  void set_gyroradpersec_x(double value);

  // optional double GyroRadPerSec_Y = 8;
  bool has_gyroradpersec_y() const;
  void clear_gyroradpersec_y();
  static const int kGyroRadPerSecYFieldNumber = 8;
  double gyroradpersec_y() const;
  void set_gyroradpersec_y(double value);

  // optional double GyroRadPerSec_Z = 9;
  bool has_gyroradpersec_z() const;
  void clear_gyroradpersec_z();
  static const int kGyroRadPerSecZFieldNumber = 9;
  double gyroradpersec_z() const;
  void set_gyroradpersec_z(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.IMUAccelGyroDataPBMsg)
 private:
  inline void set_has_imulocation();
  inline void clear_has_imulocation();
  inline void set_has_imutimestampsec();
  inline void clear_has_imutimestampsec();
  inline void set_has_videretimestampsec();
  inline void clear_has_videretimestampsec();
  inline void set_has_accelmps2_x();
  inline void clear_has_accelmps2_x();
  inline void set_has_accelmps2_y();
  inline void clear_has_accelmps2_y();
  inline void set_has_accelmps2_z();
  inline void clear_has_accelmps2_z();
  inline void set_has_gyroradpersec_x();
  inline void clear_has_gyroradpersec_x();
  inline void set_has_gyroradpersec_y();
  inline void clear_has_gyroradpersec_y();
  inline void set_has_gyroradpersec_z();
  inline void clear_has_gyroradpersec_z();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double imutimestampsec_;
  double videretimestampsec_;
  double accelmps2_x_;
  double accelmps2_y_;
  double accelmps2_z_;
  double gyroradpersec_x_;
  double gyroradpersec_y_;
  double gyroradpersec_z_;
  ::google::protobuf::int32 imulocation_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static IMUAccelGyroDataPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class GPSFixPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.GPSFixPBMsg) */ {
 public:
  GPSFixPBMsg();
  virtual ~GPSFixPBMsg();

  GPSFixPBMsg(const GPSFixPBMsg& from);

  inline GPSFixPBMsg& operator=(const GPSFixPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GPSFixPBMsg& default_instance();

  void Swap(GPSFixPBMsg* other);

  // implements Message ----------------------------------------------

  inline GPSFixPBMsg* New() const { return New(NULL); }

  GPSFixPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GPSFixPBMsg& from);
  void MergeFrom(const GPSFixPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GPSFixPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TrackingSatellites = 1;
  bool has_trackingsatellites() const;
  void clear_trackingsatellites();
  static const int kTrackingSatellitesFieldNumber = 1;
  ::google::protobuf::int32 trackingsatellites() const;
  void set_trackingsatellites(::google::protobuf::int32 value);

  // optional double LatitudeDeg = 2;
  bool has_latitudedeg() const;
  void clear_latitudedeg();
  static const int kLatitudeDegFieldNumber = 2;
  double latitudedeg() const;
  void set_latitudedeg(double value);

  // optional double LongitudeDeg = 3;
  bool has_longitudedeg() const;
  void clear_longitudedeg();
  static const int kLongitudeDegFieldNumber = 3;
  double longitudedeg() const;
  void set_longitudedeg(double value);

  // optional double AltitudeMSL = 4;
  bool has_altitudemsl() const;
  void clear_altitudemsl();
  static const int kAltitudeMSLFieldNumber = 4;
  double altitudemsl() const;
  void set_altitudemsl(double value);

  // optional double Position_X = 5;
  bool has_position_x() const;
  void clear_position_x();
  static const int kPositionXFieldNumber = 5;
  double position_x() const;
  void set_position_x(double value);

  // optional double Position_Y = 6;
  bool has_position_y() const;
  void clear_position_y();
  static const int kPositionYFieldNumber = 6;
  double position_y() const;
  void set_position_y(double value);

  // optional double Position_Z = 7;
  bool has_position_z() const;
  void clear_position_z();
  static const int kPositionZFieldNumber = 7;
  double position_z() const;
  void set_position_z(double value);

  // optional double Velocity_X = 8;
  bool has_velocity_x() const;
  void clear_velocity_x();
  static const int kVelocityXFieldNumber = 8;
  double velocity_x() const;
  void set_velocity_x(double value);

  // optional double Velocity_Y = 9;
  bool has_velocity_y() const;
  void clear_velocity_y();
  static const int kVelocityYFieldNumber = 9;
  double velocity_y() const;
  void set_velocity_y(double value);

  // optional double Velocity_Z = 10;
  bool has_velocity_z() const;
  void clear_velocity_z();
  static const int kVelocityZFieldNumber = 10;
  double velocity_z() const;
  void set_velocity_z(double value);

  // optional double GPSTimeStampSec = 11;
  bool has_gpstimestampsec() const;
  void clear_gpstimestampsec();
  static const int kGPSTimeStampSecFieldNumber = 11;
  double gpstimestampsec() const;
  void set_gpstimestampsec(double value);

  // optional double VidereTimeStampSec = 12;
  bool has_videretimestampsec() const;
  void clear_videretimestampsec();
  static const int kVidereTimeStampSecFieldNumber = 12;
  double videretimestampsec() const;
  void set_videretimestampsec(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.GPSFixPBMsg)
 private:
  inline void set_has_trackingsatellites();
  inline void clear_has_trackingsatellites();
  inline void set_has_latitudedeg();
  inline void clear_has_latitudedeg();
  inline void set_has_longitudedeg();
  inline void clear_has_longitudedeg();
  inline void set_has_altitudemsl();
  inline void clear_has_altitudemsl();
  inline void set_has_position_x();
  inline void clear_has_position_x();
  inline void set_has_position_y();
  inline void clear_has_position_y();
  inline void set_has_position_z();
  inline void clear_has_position_z();
  inline void set_has_velocity_x();
  inline void clear_has_velocity_x();
  inline void set_has_velocity_y();
  inline void clear_has_velocity_y();
  inline void set_has_velocity_z();
  inline void clear_has_velocity_z();
  inline void set_has_gpstimestampsec();
  inline void clear_has_gpstimestampsec();
  inline void set_has_videretimestampsec();
  inline void clear_has_videretimestampsec();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double latitudedeg_;
  double longitudedeg_;
  double altitudemsl_;
  double position_x_;
  double position_y_;
  double position_z_;
  double velocity_x_;
  double velocity_y_;
  double velocity_z_;
  double gpstimestampsec_;
  double videretimestampsec_;
  ::google::protobuf::int32 trackingsatellites_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static GPSFixPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class VidereSystemControlPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.VidereSystemControlPBMsg) */ {
 public:
  VidereSystemControlPBMsg();
  virtual ~VidereSystemControlPBMsg();

  VidereSystemControlPBMsg(const VidereSystemControlPBMsg& from);

  inline VidereSystemControlPBMsg& operator=(const VidereSystemControlPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VidereSystemControlPBMsg& default_instance();

  void Swap(VidereSystemControlPBMsg* other);

  // implements Message ----------------------------------------------

  inline VidereSystemControlPBMsg* New() const { return New(NULL); }

  VidereSystemControlPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VidereSystemControlPBMsg& from);
  void MergeFrom(const VidereSystemControlPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VidereSystemControlPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 SystemState = 1;
  bool has_systemstate() const;
  void clear_systemstate();
  static const int kSystemStateFieldNumber = 1;
  ::google::protobuf::uint32 systemstate() const;
  void set_systemstate(::google::protobuf::uint32 value);

  // optional bool StartProcess = 2;
  bool has_startprocess() const;
  void clear_startprocess();
  static const int kStartProcessFieldNumber = 2;
  bool startprocess() const;
  void set_startprocess(bool value);

  // optional bool PauseProces = 3;
  bool has_pauseproces() const;
  void clear_pauseproces();
  static const int kPauseProcesFieldNumber = 3;
  bool pauseproces() const;
  void set_pauseproces(bool value);

  // optional bool StopProcess = 4;
  bool has_stopprocess() const;
  void clear_stopprocess();
  static const int kStopProcessFieldNumber = 4;
  bool stopprocess() const;
  void set_stopprocess(bool value);

  // optional uint32 SystemStatus = 5;
  bool has_systemstatus() const;
  void clear_systemstatus();
  static const int kSystemStatusFieldNumber = 5;
  ::google::protobuf::uint32 systemstatus() const;
  void set_systemstatus(::google::protobuf::uint32 value);

  // optional uint32 StatusCounter = 6;
  bool has_statuscounter() const;
  void clear_statuscounter();
  static const int kStatusCounterFieldNumber = 6;
  ::google::protobuf::uint32 statuscounter() const;
  void set_statuscounter(::google::protobuf::uint32 value);

  // optional bool DriverEnableSwitch = 7;
  bool has_driverenableswitch() const;
  void clear_driverenableswitch();
  static const int kDriverEnableSwitchFieldNumber = 7;
  bool driverenableswitch() const;
  void set_driverenableswitch(bool value);

  // optional bool HeadControlEnable = 8;
  bool has_headcontrolenable() const;
  void clear_headcontrolenable();
  static const int kHeadControlEnableFieldNumber = 8;
  bool headcontrolenable() const;
  void set_headcontrolenable(bool value);

  // optional bool ThrottleControlEnable = 9;
  bool has_throttlecontrolenable() const;
  void clear_throttlecontrolenable();
  static const int kThrottleControlEnableFieldNumber = 9;
  bool throttlecontrolenable() const;
  void set_throttlecontrolenable(bool value);

  // optional bool BrakeControlEnable = 10;
  bool has_brakecontrolenable() const;
  void clear_brakecontrolenable();
  static const int kBrakeControlEnableFieldNumber = 10;
  bool brakecontrolenable() const;
  void set_brakecontrolenable(bool value);

  // optional bool NexusBCIControlEnabled = 11;
  bool has_nexusbcicontrolenabled() const;
  void clear_nexusbcicontrolenabled();
  static const int kNexusBCIControlEnabledFieldNumber = 11;
  bool nexusbcicontrolenabled() const;
  void set_nexusbcicontrolenabled(bool value);

  // optional bool NexusBCIThrottleEnable = 12;
  bool has_nexusbcithrottleenable() const;
  void clear_nexusbcithrottleenable();
  static const int kNexusBCIThrottleEnableFieldNumber = 12;
  bool nexusbcithrottleenable() const;
  void set_nexusbcithrottleenable(bool value);

  // @@protoc_insertion_point(class_scope:vision_messages.VidereSystemControlPBMsg)
 private:
  inline void set_has_systemstate();
  inline void clear_has_systemstate();
  inline void set_has_startprocess();
  inline void clear_has_startprocess();
  inline void set_has_pauseproces();
  inline void clear_has_pauseproces();
  inline void set_has_stopprocess();
  inline void clear_has_stopprocess();
  inline void set_has_systemstatus();
  inline void clear_has_systemstatus();
  inline void set_has_statuscounter();
  inline void clear_has_statuscounter();
  inline void set_has_driverenableswitch();
  inline void clear_has_driverenableswitch();
  inline void set_has_headcontrolenable();
  inline void clear_has_headcontrolenable();
  inline void set_has_throttlecontrolenable();
  inline void clear_has_throttlecontrolenable();
  inline void set_has_brakecontrolenable();
  inline void clear_has_brakecontrolenable();
  inline void set_has_nexusbcicontrolenabled();
  inline void clear_has_nexusbcicontrolenabled();
  inline void set_has_nexusbcithrottleenable();
  inline void clear_has_nexusbcithrottleenable();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 systemstate_;
  bool startprocess_;
  bool pauseproces_;
  bool stopprocess_;
  bool driverenableswitch_;
  ::google::protobuf::uint32 systemstatus_;
  ::google::protobuf::uint32 statuscounter_;
  bool headcontrolenable_;
  bool throttlecontrolenable_;
  bool brakecontrolenable_;
  bool nexusbcicontrolenabled_;
  bool nexusbcithrottleenable_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static VidereSystemControlPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class HeadOrientationControlPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.HeadOrientationControlPBMsg) */ {
 public:
  HeadOrientationControlPBMsg();
  virtual ~HeadOrientationControlPBMsg();

  HeadOrientationControlPBMsg(const HeadOrientationControlPBMsg& from);

  inline HeadOrientationControlPBMsg& operator=(const HeadOrientationControlPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeadOrientationControlPBMsg& default_instance();

  void Swap(HeadOrientationControlPBMsg* other);

  // implements Message ----------------------------------------------

  inline HeadOrientationControlPBMsg* New() const { return New(NULL); }

  HeadOrientationControlPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeadOrientationControlPBMsg& from);
  void MergeFrom(const HeadOrientationControlPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeadOrientationControlPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 HeadOrientationOutputSelect = 1;
  bool has_headorientationoutputselect() const;
  void clear_headorientationoutputselect();
  static const int kHeadOrientationOutputSelectFieldNumber = 1;
  ::google::protobuf::uint32 headorientationoutputselect() const;
  void set_headorientationoutputselect(::google::protobuf::uint32 value);

  // optional bool DisableHeadOrientationKalmanFilter = 2;
  bool has_disableheadorientationkalmanfilter() const;
  void clear_disableheadorientationkalmanfilter();
  static const int kDisableHeadOrientationKalmanFilterFieldNumber = 2;
  bool disableheadorientationkalmanfilter() const;
  void set_disableheadorientationkalmanfilter(bool value);

  // optional bool DisableVehicleInputToHeadOrientation = 3;
  bool has_disablevehicleinputtoheadorientation() const;
  void clear_disablevehicleinputtoheadorientation();
  static const int kDisableVehicleInputToHeadOrientationFieldNumber = 3;
  bool disablevehicleinputtoheadorientation() const;
  void set_disablevehicleinputtoheadorientation(bool value);

  // optional bool DisableVehicleGravityFeedback = 4;
  bool has_disablevehiclegravityfeedback() const;
  void clear_disablevehiclegravityfeedback();
  static const int kDisableVehicleGravityFeedbackFieldNumber = 4;
  bool disablevehiclegravityfeedback() const;
  void set_disablevehiclegravityfeedback(bool value);

  // optional double VehicleGravityFeedbackGain = 5;
  bool has_vehiclegravityfeedbackgain() const;
  void clear_vehiclegravityfeedbackgain();
  static const int kVehicleGravityFeedbackGainFieldNumber = 5;
  double vehiclegravityfeedbackgain() const;
  void set_vehiclegravityfeedbackgain(double value);

  // optional double HeadOrientation_QVar = 6;
  bool has_headorientation_qvar() const;
  void clear_headorientation_qvar();
  static const int kHeadOrientationQVarFieldNumber = 6;
  double headorientation_qvar() const;
  void set_headorientation_qvar(double value);

  // optional double HeadOrientation_RVar = 7;
  bool has_headorientation_rvar() const;
  void clear_headorientation_rvar();
  static const int kHeadOrientationRVarFieldNumber = 7;
  double headorientation_rvar() const;
  void set_headorientation_rvar(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.HeadOrientationControlPBMsg)
 private:
  inline void set_has_headorientationoutputselect();
  inline void clear_has_headorientationoutputselect();
  inline void set_has_disableheadorientationkalmanfilter();
  inline void clear_has_disableheadorientationkalmanfilter();
  inline void set_has_disablevehicleinputtoheadorientation();
  inline void clear_has_disablevehicleinputtoheadorientation();
  inline void set_has_disablevehiclegravityfeedback();
  inline void clear_has_disablevehiclegravityfeedback();
  inline void set_has_vehiclegravityfeedbackgain();
  inline void clear_has_vehiclegravityfeedbackgain();
  inline void set_has_headorientation_qvar();
  inline void clear_has_headorientation_qvar();
  inline void set_has_headorientation_rvar();
  inline void clear_has_headorientation_rvar();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 headorientationoutputselect_;
  bool disableheadorientationkalmanfilter_;
  bool disablevehicleinputtoheadorientation_;
  bool disablevehiclegravityfeedback_;
  double vehiclegravityfeedbackgain_;
  double headorientation_qvar_;
  double headorientation_rvar_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static HeadOrientationControlPBMsg* default_instance_;
};
// -------------------------------------------------------------------

class VehicleControlParametersPBMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vision_messages.VehicleControlParametersPBMsg) */ {
 public:
  VehicleControlParametersPBMsg();
  virtual ~VehicleControlParametersPBMsg();

  VehicleControlParametersPBMsg(const VehicleControlParametersPBMsg& from);

  inline VehicleControlParametersPBMsg& operator=(const VehicleControlParametersPBMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleControlParametersPBMsg& default_instance();

  void Swap(VehicleControlParametersPBMsg* other);

  // implements Message ----------------------------------------------

  inline VehicleControlParametersPBMsg* New() const { return New(NULL); }

  VehicleControlParametersPBMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VehicleControlParametersPBMsg& from);
  void MergeFrom(const VehicleControlParametersPBMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VehicleControlParametersPBMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double SipnPuffBlowGain = 1;
  bool has_sipnpuffblowgain() const;
  void clear_sipnpuffblowgain();
  static const int kSipnPuffBlowGainFieldNumber = 1;
  double sipnpuffblowgain() const;
  void set_sipnpuffblowgain(double value);

  // optional double SipnPuffSuckGain = 2;
  bool has_sipnpuffsuckgain() const;
  void clear_sipnpuffsuckgain();
  static const int kSipnPuffSuckGainFieldNumber = 2;
  double sipnpuffsuckgain() const;
  void set_sipnpuffsuckgain(double value);

  // optional double SipnPuffDeadBandPercent = 3;
  bool has_sipnpuffdeadbandpercent() const;
  void clear_sipnpuffdeadbandpercent();
  static const int kSipnPuffDeadBandPercentFieldNumber = 3;
  double sipnpuffdeadbandpercent() const;
  void set_sipnpuffdeadbandpercent(double value);

  // optional bool ReverseSipnPuffThrottleBrake = 4;
  bool has_reversesipnpuffthrottlebrake() const;
  void clear_reversesipnpuffthrottlebrake();
  static const int kReverseSipnPuffThrottleBrakeFieldNumber = 4;
  bool reversesipnpuffthrottlebrake() const;
  void set_reversesipnpuffthrottlebrake(bool value);

  // optional double ThrottleSipnPuffGain = 5;
  bool has_throttlesipnpuffgain() const;
  void clear_throttlesipnpuffgain();
  static const int kThrottleSipnPuffGainFieldNumber = 5;
  double throttlesipnpuffgain() const;
  void set_throttlesipnpuffgain(double value);

  // optional double BrakeSipnPuffGain = 6;
  bool has_brakesipnpuffgain() const;
  void clear_brakesipnpuffgain();
  static const int kBrakeSipnPuffGainFieldNumber = 6;
  double brakesipnpuffgain() const;
  void set_brakesipnpuffgain(double value);

  // optional bool ThrottleBrakeHeadTiltEnable = 7;
  bool has_throttlebrakeheadtiltenable() const;
  void clear_throttlebrakeheadtiltenable();
  static const int kThrottleBrakeHeadTiltEnableFieldNumber = 7;
  bool throttlebrakeheadtiltenable() const;
  void set_throttlebrakeheadtiltenable(bool value);

  // optional double ThrottleBrakeHeadTiltForwardDeadbandDegrees = 8;
  bool has_throttlebrakeheadtiltforwarddeadbanddegrees() const;
  void clear_throttlebrakeheadtiltforwarddeadbanddegrees();
  static const int kThrottleBrakeHeadTiltForwardDeadbandDegreesFieldNumber = 8;
  double throttlebrakeheadtiltforwarddeadbanddegrees() const;
  void set_throttlebrakeheadtiltforwarddeadbanddegrees(double value);

  // optional double ThrottleBrakeHeadTiltBackDeadbandDegrees = 9;
  bool has_throttlebrakeheadtiltbackdeadbanddegrees() const;
  void clear_throttlebrakeheadtiltbackdeadbanddegrees();
  static const int kThrottleBrakeHeadTiltBackDeadbandDegreesFieldNumber = 9;
  double throttlebrakeheadtiltbackdeadbanddegrees() const;
  void set_throttlebrakeheadtiltbackdeadbanddegrees(double value);

  // optional double ThrottleHeadTiltGain = 10;
  bool has_throttleheadtiltgain() const;
  void clear_throttleheadtiltgain();
  static const int kThrottleHeadTiltGainFieldNumber = 10;
  double throttleheadtiltgain() const;
  void set_throttleheadtiltgain(double value);

  // optional double BrakeHeadTiltGain = 11;
  bool has_brakeheadtiltgain() const;
  void clear_brakeheadtiltgain();
  static const int kBrakeHeadTiltGainFieldNumber = 11;
  double brakeheadtiltgain() const;
  void set_brakeheadtiltgain(double value);

  // optional bool UseSteeringAngleControl = 12;
  bool has_usesteeringanglecontrol() const;
  void clear_usesteeringanglecontrol();
  static const int kUseSteeringAngleControlFieldNumber = 12;
  bool usesteeringanglecontrol() const;
  void set_usesteeringanglecontrol(bool value);

  // optional double SteeringDeadband = 13;
  bool has_steeringdeadband() const;
  void clear_steeringdeadband();
  static const int kSteeringDeadbandFieldNumber = 13;
  double steeringdeadband() const;
  void set_steeringdeadband(double value);

  // optional double SteeringControlGain = 14;
  bool has_steeringcontrolgain() const;
  void clear_steeringcontrolgain();
  static const int kSteeringControlGainFieldNumber = 14;
  double steeringcontrolgain() const;
  void set_steeringcontrolgain(double value);

  // optional double MaxLRHeadRotationDegrees = 15;
  bool has_maxlrheadrotationdegrees() const;
  void clear_maxlrheadrotationdegrees();
  static const int kMaxLRHeadRotationDegreesFieldNumber = 15;
  double maxlrheadrotationdegrees() const;
  void set_maxlrheadrotationdegrees(double value);

  // optional int32 HeadLeftRighLPFOrder = 16;
  bool has_headleftrighlpforder() const;
  void clear_headleftrighlpforder();
  static const int kHeadLeftRighLPFOrderFieldNumber = 16;
  ::google::protobuf::int32 headleftrighlpforder() const;
  void set_headleftrighlpforder(::google::protobuf::int32 value);

  // optional double HeadLeftRighLPFCutoffFreqHz = 17;
  bool has_headleftrighlpfcutofffreqhz() const;
  void clear_headleftrighlpfcutofffreqhz();
  static const int kHeadLeftRighLPFCutoffFreqHzFieldNumber = 17;
  double headleftrighlpfcutofffreqhz() const;
  void set_headleftrighlpfcutofffreqhz(double value);

  // optional double SteeringAngleFeedback_Kp = 18;
  bool has_steeringanglefeedback_kp() const;
  void clear_steeringanglefeedback_kp();
  static const int kSteeringAngleFeedbackKpFieldNumber = 18;
  double steeringanglefeedback_kp() const;
  void set_steeringanglefeedback_kp(double value);

  // optional double SteeringAngleFeedback_Kd = 19;
  bool has_steeringanglefeedback_kd() const;
  void clear_steeringanglefeedback_kd();
  static const int kSteeringAngleFeedbackKdFieldNumber = 19;
  double steeringanglefeedback_kd() const;
  void set_steeringanglefeedback_kd(double value);

  // optional double SteeringAngleFeedback_Ki = 20;
  bool has_steeringanglefeedback_ki() const;
  void clear_steeringanglefeedback_ki();
  static const int kSteeringAngleFeedbackKiFieldNumber = 20;
  double steeringanglefeedback_ki() const;
  void set_steeringanglefeedback_ki(double value);

  // optional double SteeringBiasAngleDegrees = 21;
  bool has_steeringbiasangledegrees() const;
  void clear_steeringbiasangledegrees();
  static const int kSteeringBiasAngleDegreesFieldNumber = 21;
  double steeringbiasangledegrees() const;
  void set_steeringbiasangledegrees(double value);

  // optional double RCSteeringGain = 22;
  bool has_rcsteeringgain() const;
  void clear_rcsteeringgain();
  static const int kRCSteeringGainFieldNumber = 22;
  double rcsteeringgain() const;
  void set_rcsteeringgain(double value);

  // optional double BCIGain = 23;
  bool has_bcigain() const;
  void clear_bcigain();
  static const int kBCIGainFieldNumber = 23;
  double bcigain() const;
  void set_bcigain(double value);

  // @@protoc_insertion_point(class_scope:vision_messages.VehicleControlParametersPBMsg)
 private:
  inline void set_has_sipnpuffblowgain();
  inline void clear_has_sipnpuffblowgain();
  inline void set_has_sipnpuffsuckgain();
  inline void clear_has_sipnpuffsuckgain();
  inline void set_has_sipnpuffdeadbandpercent();
  inline void clear_has_sipnpuffdeadbandpercent();
  inline void set_has_reversesipnpuffthrottlebrake();
  inline void clear_has_reversesipnpuffthrottlebrake();
  inline void set_has_throttlesipnpuffgain();
  inline void clear_has_throttlesipnpuffgain();
  inline void set_has_brakesipnpuffgain();
  inline void clear_has_brakesipnpuffgain();
  inline void set_has_throttlebrakeheadtiltenable();
  inline void clear_has_throttlebrakeheadtiltenable();
  inline void set_has_throttlebrakeheadtiltforwarddeadbanddegrees();
  inline void clear_has_throttlebrakeheadtiltforwarddeadbanddegrees();
  inline void set_has_throttlebrakeheadtiltbackdeadbanddegrees();
  inline void clear_has_throttlebrakeheadtiltbackdeadbanddegrees();
  inline void set_has_throttleheadtiltgain();
  inline void clear_has_throttleheadtiltgain();
  inline void set_has_brakeheadtiltgain();
  inline void clear_has_brakeheadtiltgain();
  inline void set_has_usesteeringanglecontrol();
  inline void clear_has_usesteeringanglecontrol();
  inline void set_has_steeringdeadband();
  inline void clear_has_steeringdeadband();
  inline void set_has_steeringcontrolgain();
  inline void clear_has_steeringcontrolgain();
  inline void set_has_maxlrheadrotationdegrees();
  inline void clear_has_maxlrheadrotationdegrees();
  inline void set_has_headleftrighlpforder();
  inline void clear_has_headleftrighlpforder();
  inline void set_has_headleftrighlpfcutofffreqhz();
  inline void clear_has_headleftrighlpfcutofffreqhz();
  inline void set_has_steeringanglefeedback_kp();
  inline void clear_has_steeringanglefeedback_kp();
  inline void set_has_steeringanglefeedback_kd();
  inline void clear_has_steeringanglefeedback_kd();
  inline void set_has_steeringanglefeedback_ki();
  inline void clear_has_steeringanglefeedback_ki();
  inline void set_has_steeringbiasangledegrees();
  inline void clear_has_steeringbiasangledegrees();
  inline void set_has_rcsteeringgain();
  inline void clear_has_rcsteeringgain();
  inline void set_has_bcigain();
  inline void clear_has_bcigain();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double sipnpuffblowgain_;
  double sipnpuffsuckgain_;
  double sipnpuffdeadbandpercent_;
  double throttlesipnpuffgain_;
  double brakesipnpuffgain_;
  double throttlebrakeheadtiltforwarddeadbanddegrees_;
  double throttlebrakeheadtiltbackdeadbanddegrees_;
  bool reversesipnpuffthrottlebrake_;
  bool throttlebrakeheadtiltenable_;
  bool usesteeringanglecontrol_;
  ::google::protobuf::int32 headleftrighlpforder_;
  double throttleheadtiltgain_;
  double brakeheadtiltgain_;
  double steeringdeadband_;
  double steeringcontrolgain_;
  double maxlrheadrotationdegrees_;
  double headleftrighlpfcutofffreqhz_;
  double steeringanglefeedback_kp_;
  double steeringanglefeedback_kd_;
  double steeringanglefeedback_ki_;
  double steeringbiasangledegrees_;
  double rcsteeringgain_;
  double bcigain_;
  friend void  protobuf_AddDesc_vision_5fmessages_2eproto();
  friend void protobuf_AssignDesc_vision_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_vision_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static VehicleControlParametersPBMsg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// VisionMessageWrapperPBMsg

// required string MsgName = 1;
inline bool VisionMessageWrapperPBMsg::has_msgname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VisionMessageWrapperPBMsg::set_has_msgname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VisionMessageWrapperPBMsg::clear_has_msgname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VisionMessageWrapperPBMsg::clear_msgname() {
  msgname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgname();
}
inline const ::std::string& VisionMessageWrapperPBMsg::msgname() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionMessageWrapperPBMsg.MsgName)
  return msgname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionMessageWrapperPBMsg::set_msgname(const ::std::string& value) {
  set_has_msgname();
  msgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.VisionMessageWrapperPBMsg.MsgName)
}
inline void VisionMessageWrapperPBMsg::set_msgname(const char* value) {
  set_has_msgname();
  msgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.VisionMessageWrapperPBMsg.MsgName)
}
inline void VisionMessageWrapperPBMsg::set_msgname(const char* value, size_t size) {
  set_has_msgname();
  msgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.VisionMessageWrapperPBMsg.MsgName)
}
inline ::std::string* VisionMessageWrapperPBMsg::mutable_msgname() {
  set_has_msgname();
  // @@protoc_insertion_point(field_mutable:vision_messages.VisionMessageWrapperPBMsg.MsgName)
  return msgname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VisionMessageWrapperPBMsg::release_msgname() {
  // @@protoc_insertion_point(field_release:vision_messages.VisionMessageWrapperPBMsg.MsgName)
  clear_has_msgname();
  return msgname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionMessageWrapperPBMsg::set_allocated_msgname(::std::string* msgname) {
  if (msgname != NULL) {
    set_has_msgname();
  } else {
    clear_has_msgname();
  }
  msgname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgname);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.VisionMessageWrapperPBMsg.MsgName)
}

// optional string MsgQualifier = 2;
inline bool VisionMessageWrapperPBMsg::has_msgqualifier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VisionMessageWrapperPBMsg::set_has_msgqualifier() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VisionMessageWrapperPBMsg::clear_has_msgqualifier() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VisionMessageWrapperPBMsg::clear_msgqualifier() {
  msgqualifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgqualifier();
}
inline const ::std::string& VisionMessageWrapperPBMsg::msgqualifier() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionMessageWrapperPBMsg.MsgQualifier)
  return msgqualifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionMessageWrapperPBMsg::set_msgqualifier(const ::std::string& value) {
  set_has_msgqualifier();
  msgqualifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.VisionMessageWrapperPBMsg.MsgQualifier)
}
inline void VisionMessageWrapperPBMsg::set_msgqualifier(const char* value) {
  set_has_msgqualifier();
  msgqualifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.VisionMessageWrapperPBMsg.MsgQualifier)
}
inline void VisionMessageWrapperPBMsg::set_msgqualifier(const char* value, size_t size) {
  set_has_msgqualifier();
  msgqualifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.VisionMessageWrapperPBMsg.MsgQualifier)
}
inline ::std::string* VisionMessageWrapperPBMsg::mutable_msgqualifier() {
  set_has_msgqualifier();
  // @@protoc_insertion_point(field_mutable:vision_messages.VisionMessageWrapperPBMsg.MsgQualifier)
  return msgqualifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VisionMessageWrapperPBMsg::release_msgqualifier() {
  // @@protoc_insertion_point(field_release:vision_messages.VisionMessageWrapperPBMsg.MsgQualifier)
  clear_has_msgqualifier();
  return msgqualifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionMessageWrapperPBMsg::set_allocated_msgqualifier(::std::string* msgqualifier) {
  if (msgqualifier != NULL) {
    set_has_msgqualifier();
  } else {
    clear_has_msgqualifier();
  }
  msgqualifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgqualifier);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.VisionMessageWrapperPBMsg.MsgQualifier)
}

// optional bytes MsgData = 3;
inline bool VisionMessageWrapperPBMsg::has_msgdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VisionMessageWrapperPBMsg::set_has_msgdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VisionMessageWrapperPBMsg::clear_has_msgdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VisionMessageWrapperPBMsg::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgdata();
}
inline const ::std::string& VisionMessageWrapperPBMsg::msgdata() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionMessageWrapperPBMsg.MsgData)
  return msgdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionMessageWrapperPBMsg::set_msgdata(const ::std::string& value) {
  set_has_msgdata();
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.VisionMessageWrapperPBMsg.MsgData)
}
inline void VisionMessageWrapperPBMsg::set_msgdata(const char* value) {
  set_has_msgdata();
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.VisionMessageWrapperPBMsg.MsgData)
}
inline void VisionMessageWrapperPBMsg::set_msgdata(const void* value, size_t size) {
  set_has_msgdata();
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.VisionMessageWrapperPBMsg.MsgData)
}
inline ::std::string* VisionMessageWrapperPBMsg::mutable_msgdata() {
  set_has_msgdata();
  // @@protoc_insertion_point(field_mutable:vision_messages.VisionMessageWrapperPBMsg.MsgData)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VisionMessageWrapperPBMsg::release_msgdata() {
  // @@protoc_insertion_point(field_release:vision_messages.VisionMessageWrapperPBMsg.MsgData)
  clear_has_msgdata();
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionMessageWrapperPBMsg::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    set_has_msgdata();
  } else {
    clear_has_msgdata();
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.VisionMessageWrapperPBMsg.MsgData)
}

// optional uint32 MsgDataSize = 4;
inline bool VisionMessageWrapperPBMsg::has_msgdatasize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VisionMessageWrapperPBMsg::set_has_msgdatasize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VisionMessageWrapperPBMsg::clear_has_msgdatasize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VisionMessageWrapperPBMsg::clear_msgdatasize() {
  msgdatasize_ = 0u;
  clear_has_msgdatasize();
}
inline ::google::protobuf::uint32 VisionMessageWrapperPBMsg::msgdatasize() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionMessageWrapperPBMsg.MsgDataSize)
  return msgdatasize_;
}
inline void VisionMessageWrapperPBMsg::set_msgdatasize(::google::protobuf::uint32 value) {
  set_has_msgdatasize();
  msgdatasize_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VisionMessageWrapperPBMsg.MsgDataSize)
}

// -------------------------------------------------------------------

// VisionCommandPBMsg

// required string Command = 1;
inline bool VisionCommandPBMsg::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VisionCommandPBMsg::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VisionCommandPBMsg::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VisionCommandPBMsg::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_command();
}
inline const ::std::string& VisionCommandPBMsg::command() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionCommandPBMsg.Command)
  return command_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionCommandPBMsg::set_command(const ::std::string& value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.VisionCommandPBMsg.Command)
}
inline void VisionCommandPBMsg::set_command(const char* value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.VisionCommandPBMsg.Command)
}
inline void VisionCommandPBMsg::set_command(const char* value, size_t size) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.VisionCommandPBMsg.Command)
}
inline ::std::string* VisionCommandPBMsg::mutable_command() {
  set_has_command();
  // @@protoc_insertion_point(field_mutable:vision_messages.VisionCommandPBMsg.Command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VisionCommandPBMsg::release_command() {
  // @@protoc_insertion_point(field_release:vision_messages.VisionCommandPBMsg.Command)
  clear_has_command();
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionCommandPBMsg::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    set_has_command();
  } else {
    clear_has_command();
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.VisionCommandPBMsg.Command)
}

// optional string CmdQualifier = 2;
inline bool VisionCommandPBMsg::has_cmdqualifier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VisionCommandPBMsg::set_has_cmdqualifier() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VisionCommandPBMsg::clear_has_cmdqualifier() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VisionCommandPBMsg::clear_cmdqualifier() {
  cmdqualifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmdqualifier();
}
inline const ::std::string& VisionCommandPBMsg::cmdqualifier() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionCommandPBMsg.CmdQualifier)
  return cmdqualifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionCommandPBMsg::set_cmdqualifier(const ::std::string& value) {
  set_has_cmdqualifier();
  cmdqualifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.VisionCommandPBMsg.CmdQualifier)
}
inline void VisionCommandPBMsg::set_cmdqualifier(const char* value) {
  set_has_cmdqualifier();
  cmdqualifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.VisionCommandPBMsg.CmdQualifier)
}
inline void VisionCommandPBMsg::set_cmdqualifier(const char* value, size_t size) {
  set_has_cmdqualifier();
  cmdqualifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.VisionCommandPBMsg.CmdQualifier)
}
inline ::std::string* VisionCommandPBMsg::mutable_cmdqualifier() {
  set_has_cmdqualifier();
  // @@protoc_insertion_point(field_mutable:vision_messages.VisionCommandPBMsg.CmdQualifier)
  return cmdqualifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VisionCommandPBMsg::release_cmdqualifier() {
  // @@protoc_insertion_point(field_release:vision_messages.VisionCommandPBMsg.CmdQualifier)
  clear_has_cmdqualifier();
  return cmdqualifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionCommandPBMsg::set_allocated_cmdqualifier(::std::string* cmdqualifier) {
  if (cmdqualifier != NULL) {
    set_has_cmdqualifier();
  } else {
    clear_has_cmdqualifier();
  }
  cmdqualifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmdqualifier);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.VisionCommandPBMsg.CmdQualifier)
}

// optional bytes CmdData = 3;
inline bool VisionCommandPBMsg::has_cmddata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VisionCommandPBMsg::set_has_cmddata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VisionCommandPBMsg::clear_has_cmddata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VisionCommandPBMsg::clear_cmddata() {
  cmddata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmddata();
}
inline const ::std::string& VisionCommandPBMsg::cmddata() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionCommandPBMsg.CmdData)
  return cmddata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionCommandPBMsg::set_cmddata(const ::std::string& value) {
  set_has_cmddata();
  cmddata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.VisionCommandPBMsg.CmdData)
}
inline void VisionCommandPBMsg::set_cmddata(const char* value) {
  set_has_cmddata();
  cmddata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.VisionCommandPBMsg.CmdData)
}
inline void VisionCommandPBMsg::set_cmddata(const void* value, size_t size) {
  set_has_cmddata();
  cmddata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.VisionCommandPBMsg.CmdData)
}
inline ::std::string* VisionCommandPBMsg::mutable_cmddata() {
  set_has_cmddata();
  // @@protoc_insertion_point(field_mutable:vision_messages.VisionCommandPBMsg.CmdData)
  return cmddata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VisionCommandPBMsg::release_cmddata() {
  // @@protoc_insertion_point(field_release:vision_messages.VisionCommandPBMsg.CmdData)
  clear_has_cmddata();
  return cmddata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionCommandPBMsg::set_allocated_cmddata(::std::string* cmddata) {
  if (cmddata != NULL) {
    set_has_cmddata();
  } else {
    clear_has_cmddata();
  }
  cmddata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmddata);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.VisionCommandPBMsg.CmdData)
}

// -------------------------------------------------------------------

// VisionResponsePBMsg

// optional .vision_messages.VisionResponsePBMsg.ResponseType_e CmdResponseType = 1;
inline bool VisionResponsePBMsg::has_cmdresponsetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VisionResponsePBMsg::set_has_cmdresponsetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VisionResponsePBMsg::clear_has_cmdresponsetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VisionResponsePBMsg::clear_cmdresponsetype() {
  cmdresponsetype_ = 0;
  clear_has_cmdresponsetype();
}
inline ::vision_messages::VisionResponsePBMsg_ResponseType_e VisionResponsePBMsg::cmdresponsetype() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionResponsePBMsg.CmdResponseType)
  return static_cast< ::vision_messages::VisionResponsePBMsg_ResponseType_e >(cmdresponsetype_);
}
inline void VisionResponsePBMsg::set_cmdresponsetype(::vision_messages::VisionResponsePBMsg_ResponseType_e value) {
  assert(::vision_messages::VisionResponsePBMsg_ResponseType_e_IsValid(value));
  set_has_cmdresponsetype();
  cmdresponsetype_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VisionResponsePBMsg.CmdResponseType)
}

// optional string CmdResponseMessage = 2;
inline bool VisionResponsePBMsg::has_cmdresponsemessage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VisionResponsePBMsg::set_has_cmdresponsemessage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VisionResponsePBMsg::clear_has_cmdresponsemessage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VisionResponsePBMsg::clear_cmdresponsemessage() {
  cmdresponsemessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmdresponsemessage();
}
inline const ::std::string& VisionResponsePBMsg::cmdresponsemessage() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionResponsePBMsg.CmdResponseMessage)
  return cmdresponsemessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionResponsePBMsg::set_cmdresponsemessage(const ::std::string& value) {
  set_has_cmdresponsemessage();
  cmdresponsemessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.VisionResponsePBMsg.CmdResponseMessage)
}
inline void VisionResponsePBMsg::set_cmdresponsemessage(const char* value) {
  set_has_cmdresponsemessage();
  cmdresponsemessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.VisionResponsePBMsg.CmdResponseMessage)
}
inline void VisionResponsePBMsg::set_cmdresponsemessage(const char* value, size_t size) {
  set_has_cmdresponsemessage();
  cmdresponsemessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.VisionResponsePBMsg.CmdResponseMessage)
}
inline ::std::string* VisionResponsePBMsg::mutable_cmdresponsemessage() {
  set_has_cmdresponsemessage();
  // @@protoc_insertion_point(field_mutable:vision_messages.VisionResponsePBMsg.CmdResponseMessage)
  return cmdresponsemessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VisionResponsePBMsg::release_cmdresponsemessage() {
  // @@protoc_insertion_point(field_release:vision_messages.VisionResponsePBMsg.CmdResponseMessage)
  clear_has_cmdresponsemessage();
  return cmdresponsemessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionResponsePBMsg::set_allocated_cmdresponsemessage(::std::string* cmdresponsemessage) {
  if (cmdresponsemessage != NULL) {
    set_has_cmdresponsemessage();
  } else {
    clear_has_cmdresponsemessage();
  }
  cmdresponsemessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmdresponsemessage);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.VisionResponsePBMsg.CmdResponseMessage)
}

// optional bytes CmdResponseData = 3;
inline bool VisionResponsePBMsg::has_cmdresponsedata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VisionResponsePBMsg::set_has_cmdresponsedata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VisionResponsePBMsg::clear_has_cmdresponsedata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VisionResponsePBMsg::clear_cmdresponsedata() {
  cmdresponsedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmdresponsedata();
}
inline const ::std::string& VisionResponsePBMsg::cmdresponsedata() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionResponsePBMsg.CmdResponseData)
  return cmdresponsedata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionResponsePBMsg::set_cmdresponsedata(const ::std::string& value) {
  set_has_cmdresponsedata();
  cmdresponsedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.VisionResponsePBMsg.CmdResponseData)
}
inline void VisionResponsePBMsg::set_cmdresponsedata(const char* value) {
  set_has_cmdresponsedata();
  cmdresponsedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.VisionResponsePBMsg.CmdResponseData)
}
inline void VisionResponsePBMsg::set_cmdresponsedata(const void* value, size_t size) {
  set_has_cmdresponsedata();
  cmdresponsedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.VisionResponsePBMsg.CmdResponseData)
}
inline ::std::string* VisionResponsePBMsg::mutable_cmdresponsedata() {
  set_has_cmdresponsedata();
  // @@protoc_insertion_point(field_mutable:vision_messages.VisionResponsePBMsg.CmdResponseData)
  return cmdresponsedata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VisionResponsePBMsg::release_cmdresponsedata() {
  // @@protoc_insertion_point(field_release:vision_messages.VisionResponsePBMsg.CmdResponseData)
  clear_has_cmdresponsedata();
  return cmdresponsedata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VisionResponsePBMsg::set_allocated_cmdresponsedata(::std::string* cmdresponsedata) {
  if (cmdresponsedata != NULL) {
    set_has_cmdresponsedata();
  } else {
    clear_has_cmdresponsedata();
  }
  cmdresponsedata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmdresponsedata);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.VisionResponsePBMsg.CmdResponseData)
}

// -------------------------------------------------------------------

// VehicleInertialStatePBMsg

// optional bool CoordinatesLatLonOrXY = 1;
inline bool VehicleInertialStatePBMsg::has_coordinateslatlonorxy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VehicleInertialStatePBMsg::set_has_coordinateslatlonorxy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VehicleInertialStatePBMsg::clear_has_coordinateslatlonorxy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VehicleInertialStatePBMsg::clear_coordinateslatlonorxy() {
  coordinateslatlonorxy_ = false;
  clear_has_coordinateslatlonorxy();
}
inline bool VehicleInertialStatePBMsg::coordinateslatlonorxy() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleInertialStatePBMsg.CoordinatesLatLonOrXY)
  return coordinateslatlonorxy_;
}
inline void VehicleInertialStatePBMsg::set_coordinateslatlonorxy(bool value) {
  set_has_coordinateslatlonorxy();
  coordinateslatlonorxy_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleInertialStatePBMsg.CoordinatesLatLonOrXY)
}

// optional double LatitudeRadOrY = 2;
inline bool VehicleInertialStatePBMsg::has_latituderadory() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VehicleInertialStatePBMsg::set_has_latituderadory() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VehicleInertialStatePBMsg::clear_has_latituderadory() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VehicleInertialStatePBMsg::clear_latituderadory() {
  latituderadory_ = 0;
  clear_has_latituderadory();
}
inline double VehicleInertialStatePBMsg::latituderadory() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleInertialStatePBMsg.LatitudeRadOrY)
  return latituderadory_;
}
inline void VehicleInertialStatePBMsg::set_latituderadory(double value) {
  set_has_latituderadory();
  latituderadory_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleInertialStatePBMsg.LatitudeRadOrY)
}

// optional double LongitudeRadOrX = 3;
inline bool VehicleInertialStatePBMsg::has_longituderadorx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VehicleInertialStatePBMsg::set_has_longituderadorx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VehicleInertialStatePBMsg::clear_has_longituderadorx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VehicleInertialStatePBMsg::clear_longituderadorx() {
  longituderadorx_ = 0;
  clear_has_longituderadorx();
}
inline double VehicleInertialStatePBMsg::longituderadorx() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleInertialStatePBMsg.LongitudeRadOrX)
  return longituderadorx_;
}
inline void VehicleInertialStatePBMsg::set_longituderadorx(double value) {
  set_has_longituderadorx();
  longituderadorx_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleInertialStatePBMsg.LongitudeRadOrX)
}

// optional double AltitudeMSL = 4;
inline bool VehicleInertialStatePBMsg::has_altitudemsl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VehicleInertialStatePBMsg::set_has_altitudemsl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VehicleInertialStatePBMsg::clear_has_altitudemsl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VehicleInertialStatePBMsg::clear_altitudemsl() {
  altitudemsl_ = 0;
  clear_has_altitudemsl();
}
inline double VehicleInertialStatePBMsg::altitudemsl() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleInertialStatePBMsg.AltitudeMSL)
  return altitudemsl_;
}
inline void VehicleInertialStatePBMsg::set_altitudemsl(double value) {
  set_has_altitudemsl();
  altitudemsl_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleInertialStatePBMsg.AltitudeMSL)
}

// optional double HeightAGL = 5;
inline bool VehicleInertialStatePBMsg::has_heightagl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VehicleInertialStatePBMsg::set_has_heightagl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VehicleInertialStatePBMsg::clear_has_heightagl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VehicleInertialStatePBMsg::clear_heightagl() {
  heightagl_ = 0;
  clear_has_heightagl();
}
inline double VehicleInertialStatePBMsg::heightagl() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleInertialStatePBMsg.HeightAGL)
  return heightagl_;
}
inline void VehicleInertialStatePBMsg::set_heightagl(double value) {
  set_has_heightagl();
  heightagl_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleInertialStatePBMsg.HeightAGL)
}

// optional double VelEastMpS = 6;
inline bool VehicleInertialStatePBMsg::has_veleastmps() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VehicleInertialStatePBMsg::set_has_veleastmps() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VehicleInertialStatePBMsg::clear_has_veleastmps() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VehicleInertialStatePBMsg::clear_veleastmps() {
  veleastmps_ = 0;
  clear_has_veleastmps();
}
inline double VehicleInertialStatePBMsg::veleastmps() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleInertialStatePBMsg.VelEastMpS)
  return veleastmps_;
}
inline void VehicleInertialStatePBMsg::set_veleastmps(double value) {
  set_has_veleastmps();
  veleastmps_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleInertialStatePBMsg.VelEastMpS)
}

// optional double VelNorthMpS = 7;
inline bool VehicleInertialStatePBMsg::has_velnorthmps() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VehicleInertialStatePBMsg::set_has_velnorthmps() {
  _has_bits_[0] |= 0x00000040u;
}
inline void VehicleInertialStatePBMsg::clear_has_velnorthmps() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void VehicleInertialStatePBMsg::clear_velnorthmps() {
  velnorthmps_ = 0;
  clear_has_velnorthmps();
}
inline double VehicleInertialStatePBMsg::velnorthmps() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleInertialStatePBMsg.VelNorthMpS)
  return velnorthmps_;
}
inline void VehicleInertialStatePBMsg::set_velnorthmps(double value) {
  set_has_velnorthmps();
  velnorthmps_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleInertialStatePBMsg.VelNorthMpS)
}

// optional double VelDownMpS = 8;
inline bool VehicleInertialStatePBMsg::has_veldownmps() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void VehicleInertialStatePBMsg::set_has_veldownmps() {
  _has_bits_[0] |= 0x00000080u;
}
inline void VehicleInertialStatePBMsg::clear_has_veldownmps() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void VehicleInertialStatePBMsg::clear_veldownmps() {
  veldownmps_ = 0;
  clear_has_veldownmps();
}
inline double VehicleInertialStatePBMsg::veldownmps() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleInertialStatePBMsg.VelDownMpS)
  return veldownmps_;
}
inline void VehicleInertialStatePBMsg::set_veldownmps(double value) {
  set_has_veldownmps();
  veldownmps_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleInertialStatePBMsg.VelDownMpS)
}

// optional double RollRad = 9;
inline bool VehicleInertialStatePBMsg::has_rollrad() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void VehicleInertialStatePBMsg::set_has_rollrad() {
  _has_bits_[0] |= 0x00000100u;
}
inline void VehicleInertialStatePBMsg::clear_has_rollrad() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void VehicleInertialStatePBMsg::clear_rollrad() {
  rollrad_ = 0;
  clear_has_rollrad();
}
inline double VehicleInertialStatePBMsg::rollrad() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleInertialStatePBMsg.RollRad)
  return rollrad_;
}
inline void VehicleInertialStatePBMsg::set_rollrad(double value) {
  set_has_rollrad();
  rollrad_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleInertialStatePBMsg.RollRad)
}

// optional double PitchRad = 10;
inline bool VehicleInertialStatePBMsg::has_pitchrad() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void VehicleInertialStatePBMsg::set_has_pitchrad() {
  _has_bits_[0] |= 0x00000200u;
}
inline void VehicleInertialStatePBMsg::clear_has_pitchrad() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void VehicleInertialStatePBMsg::clear_pitchrad() {
  pitchrad_ = 0;
  clear_has_pitchrad();
}
inline double VehicleInertialStatePBMsg::pitchrad() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleInertialStatePBMsg.PitchRad)
  return pitchrad_;
}
inline void VehicleInertialStatePBMsg::set_pitchrad(double value) {
  set_has_pitchrad();
  pitchrad_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleInertialStatePBMsg.PitchRad)
}

// optional double YawRad = 11;
inline bool VehicleInertialStatePBMsg::has_yawrad() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void VehicleInertialStatePBMsg::set_has_yawrad() {
  _has_bits_[0] |= 0x00000400u;
}
inline void VehicleInertialStatePBMsg::clear_has_yawrad() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void VehicleInertialStatePBMsg::clear_yawrad() {
  yawrad_ = 0;
  clear_has_yawrad();
}
inline double VehicleInertialStatePBMsg::yawrad() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleInertialStatePBMsg.YawRad)
  return yawrad_;
}
inline void VehicleInertialStatePBMsg::set_yawrad(double value) {
  set_has_yawrad();
  yawrad_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleInertialStatePBMsg.YawRad)
}

// optional double RollRateRadps = 12;
inline bool VehicleInertialStatePBMsg::has_rollrateradps() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void VehicleInertialStatePBMsg::set_has_rollrateradps() {
  _has_bits_[0] |= 0x00000800u;
}
inline void VehicleInertialStatePBMsg::clear_has_rollrateradps() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void VehicleInertialStatePBMsg::clear_rollrateradps() {
  rollrateradps_ = 0;
  clear_has_rollrateradps();
}
inline double VehicleInertialStatePBMsg::rollrateradps() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleInertialStatePBMsg.RollRateRadps)
  return rollrateradps_;
}
inline void VehicleInertialStatePBMsg::set_rollrateradps(double value) {
  set_has_rollrateradps();
  rollrateradps_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleInertialStatePBMsg.RollRateRadps)
}

// optional double PitchRateRadps = 13;
inline bool VehicleInertialStatePBMsg::has_pitchrateradps() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void VehicleInertialStatePBMsg::set_has_pitchrateradps() {
  _has_bits_[0] |= 0x00001000u;
}
inline void VehicleInertialStatePBMsg::clear_has_pitchrateradps() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void VehicleInertialStatePBMsg::clear_pitchrateradps() {
  pitchrateradps_ = 0;
  clear_has_pitchrateradps();
}
inline double VehicleInertialStatePBMsg::pitchrateradps() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleInertialStatePBMsg.PitchRateRadps)
  return pitchrateradps_;
}
inline void VehicleInertialStatePBMsg::set_pitchrateradps(double value) {
  set_has_pitchrateradps();
  pitchrateradps_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleInertialStatePBMsg.PitchRateRadps)
}

// optional double YawRateRadps = 14;
inline bool VehicleInertialStatePBMsg::has_yawrateradps() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void VehicleInertialStatePBMsg::set_has_yawrateradps() {
  _has_bits_[0] |= 0x00002000u;
}
inline void VehicleInertialStatePBMsg::clear_has_yawrateradps() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void VehicleInertialStatePBMsg::clear_yawrateradps() {
  yawrateradps_ = 0;
  clear_has_yawrateradps();
}
inline double VehicleInertialStatePBMsg::yawrateradps() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleInertialStatePBMsg.YawRateRadps)
  return yawrateradps_;
}
inline void VehicleInertialStatePBMsg::set_yawrateradps(double value) {
  set_has_yawrateradps();
  yawrateradps_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleInertialStatePBMsg.YawRateRadps)
}

// optional double gpsTimeStampSec = 15;
inline bool VehicleInertialStatePBMsg::has_gpstimestampsec() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void VehicleInertialStatePBMsg::set_has_gpstimestampsec() {
  _has_bits_[0] |= 0x00004000u;
}
inline void VehicleInertialStatePBMsg::clear_has_gpstimestampsec() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void VehicleInertialStatePBMsg::clear_gpstimestampsec() {
  gpstimestampsec_ = 0;
  clear_has_gpstimestampsec();
}
inline double VehicleInertialStatePBMsg::gpstimestampsec() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleInertialStatePBMsg.gpsTimeStampSec)
  return gpstimestampsec_;
}
inline void VehicleInertialStatePBMsg::set_gpstimestampsec(double value) {
  set_has_gpstimestampsec();
  gpstimestampsec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleInertialStatePBMsg.gpsTimeStampSec)
}

// -------------------------------------------------------------------

// TargetInfoPBMsg

// optional uint32 ImageNumber = 1;
inline bool TargetInfoPBMsg::has_imagenumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TargetInfoPBMsg::set_has_imagenumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TargetInfoPBMsg::clear_has_imagenumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TargetInfoPBMsg::clear_imagenumber() {
  imagenumber_ = 0u;
  clear_has_imagenumber();
}
inline ::google::protobuf::uint32 TargetInfoPBMsg::imagenumber() const {
  // @@protoc_insertion_point(field_get:vision_messages.TargetInfoPBMsg.ImageNumber)
  return imagenumber_;
}
inline void TargetInfoPBMsg::set_imagenumber(::google::protobuf::uint32 value) {
  set_has_imagenumber();
  imagenumber_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TargetInfoPBMsg.ImageNumber)
}

// optional .vision_messages.VehicleInertialStatePBMsg VehicleInertialStates = 2;
inline bool TargetInfoPBMsg::has_vehicleinertialstates() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TargetInfoPBMsg::set_has_vehicleinertialstates() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TargetInfoPBMsg::clear_has_vehicleinertialstates() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TargetInfoPBMsg::clear_vehicleinertialstates() {
  if (vehicleinertialstates_ != NULL) vehicleinertialstates_->::vision_messages::VehicleInertialStatePBMsg::Clear();
  clear_has_vehicleinertialstates();
}
inline const ::vision_messages::VehicleInertialStatePBMsg& TargetInfoPBMsg::vehicleinertialstates() const {
  // @@protoc_insertion_point(field_get:vision_messages.TargetInfoPBMsg.VehicleInertialStates)
  return vehicleinertialstates_ != NULL ? *vehicleinertialstates_ : *default_instance_->vehicleinertialstates_;
}
inline ::vision_messages::VehicleInertialStatePBMsg* TargetInfoPBMsg::mutable_vehicleinertialstates() {
  set_has_vehicleinertialstates();
  if (vehicleinertialstates_ == NULL) {
    vehicleinertialstates_ = new ::vision_messages::VehicleInertialStatePBMsg;
  }
  // @@protoc_insertion_point(field_mutable:vision_messages.TargetInfoPBMsg.VehicleInertialStates)
  return vehicleinertialstates_;
}
inline ::vision_messages::VehicleInertialStatePBMsg* TargetInfoPBMsg::release_vehicleinertialstates() {
  // @@protoc_insertion_point(field_release:vision_messages.TargetInfoPBMsg.VehicleInertialStates)
  clear_has_vehicleinertialstates();
  ::vision_messages::VehicleInertialStatePBMsg* temp = vehicleinertialstates_;
  vehicleinertialstates_ = NULL;
  return temp;
}
inline void TargetInfoPBMsg::set_allocated_vehicleinertialstates(::vision_messages::VehicleInertialStatePBMsg* vehicleinertialstates) {
  delete vehicleinertialstates_;
  vehicleinertialstates_ = vehicleinertialstates;
  if (vehicleinertialstates) {
    set_has_vehicleinertialstates();
  } else {
    clear_has_vehicleinertialstates();
  }
  // @@protoc_insertion_point(field_set_allocated:vision_messages.TargetInfoPBMsg.VehicleInertialStates)
}

// -------------------------------------------------------------------

// BroadcastPBMsg

// optional string message_string = 1;
inline bool BroadcastPBMsg::has_message_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastPBMsg::set_has_message_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastPBMsg::clear_has_message_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastPBMsg::clear_message_string() {
  message_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message_string();
}
inline const ::std::string& BroadcastPBMsg::message_string() const {
  // @@protoc_insertion_point(field_get:vision_messages.BroadcastPBMsg.message_string)
  return message_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BroadcastPBMsg::set_message_string(const ::std::string& value) {
  set_has_message_string();
  message_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.BroadcastPBMsg.message_string)
}
inline void BroadcastPBMsg::set_message_string(const char* value) {
  set_has_message_string();
  message_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.BroadcastPBMsg.message_string)
}
inline void BroadcastPBMsg::set_message_string(const char* value, size_t size) {
  set_has_message_string();
  message_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.BroadcastPBMsg.message_string)
}
inline ::std::string* BroadcastPBMsg::mutable_message_string() {
  set_has_message_string();
  // @@protoc_insertion_point(field_mutable:vision_messages.BroadcastPBMsg.message_string)
  return message_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BroadcastPBMsg::release_message_string() {
  // @@protoc_insertion_point(field_release:vision_messages.BroadcastPBMsg.message_string)
  clear_has_message_string();
  return message_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BroadcastPBMsg::set_allocated_message_string(::std::string* message_string) {
  if (message_string != NULL) {
    set_has_message_string();
  } else {
    clear_has_message_string();
  }
  message_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_string);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.BroadcastPBMsg.message_string)
}

// optional bool is_exception = 2;
inline bool BroadcastPBMsg::has_is_exception() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastPBMsg::set_has_is_exception() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastPBMsg::clear_has_is_exception() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastPBMsg::clear_is_exception() {
  is_exception_ = false;
  clear_has_is_exception();
}
inline bool BroadcastPBMsg::is_exception() const {
  // @@protoc_insertion_point(field_get:vision_messages.BroadcastPBMsg.is_exception)
  return is_exception_;
}
inline void BroadcastPBMsg::set_is_exception(bool value) {
  set_has_is_exception();
  is_exception_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.BroadcastPBMsg.is_exception)
}

// optional bytes report = 3;
inline bool BroadcastPBMsg::has_report() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BroadcastPBMsg::set_has_report() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BroadcastPBMsg::clear_has_report() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BroadcastPBMsg::clear_report() {
  report_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_report();
}
inline const ::std::string& BroadcastPBMsg::report() const {
  // @@protoc_insertion_point(field_get:vision_messages.BroadcastPBMsg.report)
  return report_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BroadcastPBMsg::set_report(const ::std::string& value) {
  set_has_report();
  report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.BroadcastPBMsg.report)
}
inline void BroadcastPBMsg::set_report(const char* value) {
  set_has_report();
  report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.BroadcastPBMsg.report)
}
inline void BroadcastPBMsg::set_report(const void* value, size_t size) {
  set_has_report();
  report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.BroadcastPBMsg.report)
}
inline ::std::string* BroadcastPBMsg::mutable_report() {
  set_has_report();
  // @@protoc_insertion_point(field_mutable:vision_messages.BroadcastPBMsg.report)
  return report_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BroadcastPBMsg::release_report() {
  // @@protoc_insertion_point(field_release:vision_messages.BroadcastPBMsg.report)
  clear_has_report();
  return report_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BroadcastPBMsg::set_allocated_report(::std::string* report) {
  if (report != NULL) {
    set_has_report();
  } else {
    clear_has_report();
  }
  report_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), report);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.BroadcastPBMsg.report)
}

// -------------------------------------------------------------------

// SimpleFilterVisionObjPBMsg

// optional string info = 1;
inline bool SimpleFilterVisionObjPBMsg::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimpleFilterVisionObjPBMsg::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimpleFilterVisionObjPBMsg::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimpleFilterVisionObjPBMsg::clear_info() {
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_info();
}
inline const ::std::string& SimpleFilterVisionObjPBMsg::info() const {
  // @@protoc_insertion_point(field_get:vision_messages.SimpleFilterVisionObjPBMsg.info)
  return info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimpleFilterVisionObjPBMsg::set_info(const ::std::string& value) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.SimpleFilterVisionObjPBMsg.info)
}
inline void SimpleFilterVisionObjPBMsg::set_info(const char* value) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.SimpleFilterVisionObjPBMsg.info)
}
inline void SimpleFilterVisionObjPBMsg::set_info(const char* value, size_t size) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.SimpleFilterVisionObjPBMsg.info)
}
inline ::std::string* SimpleFilterVisionObjPBMsg::mutable_info() {
  set_has_info();
  // @@protoc_insertion_point(field_mutable:vision_messages.SimpleFilterVisionObjPBMsg.info)
  return info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SimpleFilterVisionObjPBMsg::release_info() {
  // @@protoc_insertion_point(field_release:vision_messages.SimpleFilterVisionObjPBMsg.info)
  clear_has_info();
  return info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimpleFilterVisionObjPBMsg::set_allocated_info(::std::string* info) {
  if (info != NULL) {
    set_has_info();
  } else {
    clear_has_info();
  }
  info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.SimpleFilterVisionObjPBMsg.info)
}

// optional bytes image_jpeg = 2;
inline bool SimpleFilterVisionObjPBMsg::has_image_jpeg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SimpleFilterVisionObjPBMsg::set_has_image_jpeg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SimpleFilterVisionObjPBMsg::clear_has_image_jpeg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SimpleFilterVisionObjPBMsg::clear_image_jpeg() {
  image_jpeg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_image_jpeg();
}
inline const ::std::string& SimpleFilterVisionObjPBMsg::image_jpeg() const {
  // @@protoc_insertion_point(field_get:vision_messages.SimpleFilterVisionObjPBMsg.image_jpeg)
  return image_jpeg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimpleFilterVisionObjPBMsg::set_image_jpeg(const ::std::string& value) {
  set_has_image_jpeg();
  image_jpeg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.SimpleFilterVisionObjPBMsg.image_jpeg)
}
inline void SimpleFilterVisionObjPBMsg::set_image_jpeg(const char* value) {
  set_has_image_jpeg();
  image_jpeg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.SimpleFilterVisionObjPBMsg.image_jpeg)
}
inline void SimpleFilterVisionObjPBMsg::set_image_jpeg(const void* value, size_t size) {
  set_has_image_jpeg();
  image_jpeg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.SimpleFilterVisionObjPBMsg.image_jpeg)
}
inline ::std::string* SimpleFilterVisionObjPBMsg::mutable_image_jpeg() {
  set_has_image_jpeg();
  // @@protoc_insertion_point(field_mutable:vision_messages.SimpleFilterVisionObjPBMsg.image_jpeg)
  return image_jpeg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SimpleFilterVisionObjPBMsg::release_image_jpeg() {
  // @@protoc_insertion_point(field_release:vision_messages.SimpleFilterVisionObjPBMsg.image_jpeg)
  clear_has_image_jpeg();
  return image_jpeg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimpleFilterVisionObjPBMsg::set_allocated_image_jpeg(::std::string* image_jpeg) {
  if (image_jpeg != NULL) {
    set_has_image_jpeg();
  } else {
    clear_has_image_jpeg();
  }
  image_jpeg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_jpeg);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.SimpleFilterVisionObjPBMsg.image_jpeg)
}

// -------------------------------------------------------------------

// ManagerStatsPBMsg

// optional string ManagerName = 1;
inline bool ManagerStatsPBMsg::has_managername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManagerStatsPBMsg::set_has_managername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManagerStatsPBMsg::clear_has_managername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManagerStatsPBMsg::clear_managername() {
  managername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_managername();
}
inline const ::std::string& ManagerStatsPBMsg::managername() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.ManagerName)
  return managername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManagerStatsPBMsg::set_managername(const ::std::string& value) {
  set_has_managername();
  managername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.ManagerName)
}
inline void ManagerStatsPBMsg::set_managername(const char* value) {
  set_has_managername();
  managername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.ManagerStatsPBMsg.ManagerName)
}
inline void ManagerStatsPBMsg::set_managername(const char* value, size_t size) {
  set_has_managername();
  managername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.ManagerStatsPBMsg.ManagerName)
}
inline ::std::string* ManagerStatsPBMsg::mutable_managername() {
  set_has_managername();
  // @@protoc_insertion_point(field_mutable:vision_messages.ManagerStatsPBMsg.ManagerName)
  return managername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManagerStatsPBMsg::release_managername() {
  // @@protoc_insertion_point(field_release:vision_messages.ManagerStatsPBMsg.ManagerName)
  clear_has_managername();
  return managername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManagerStatsPBMsg::set_allocated_managername(::std::string* managername) {
  if (managername != NULL) {
    set_has_managername();
  } else {
    clear_has_managername();
  }
  managername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), managername);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.ManagerStatsPBMsg.ManagerName)
}

// optional sint32 RunningState = 2;
inline bool ManagerStatsPBMsg::has_runningstate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManagerStatsPBMsg::set_has_runningstate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManagerStatsPBMsg::clear_has_runningstate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManagerStatsPBMsg::clear_runningstate() {
  runningstate_ = 0;
  clear_has_runningstate();
}
inline ::google::protobuf::int32 ManagerStatsPBMsg::runningstate() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.RunningState)
  return runningstate_;
}
inline void ManagerStatsPBMsg::set_runningstate(::google::protobuf::int32 value) {
  set_has_runningstate();
  runningstate_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.RunningState)
}

// optional bool ErrorCondition = 3;
inline bool ManagerStatsPBMsg::has_errorcondition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManagerStatsPBMsg::set_has_errorcondition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManagerStatsPBMsg::clear_has_errorcondition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManagerStatsPBMsg::clear_errorcondition() {
  errorcondition_ = false;
  clear_has_errorcondition();
}
inline bool ManagerStatsPBMsg::errorcondition() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.ErrorCondition)
  return errorcondition_;
}
inline void ManagerStatsPBMsg::set_errorcondition(bool value) {
  set_has_errorcondition();
  errorcondition_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.ErrorCondition)
}

// optional sint32 ErrorCode = 4;
inline bool ManagerStatsPBMsg::has_errorcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManagerStatsPBMsg::set_has_errorcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManagerStatsPBMsg::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManagerStatsPBMsg::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 ManagerStatsPBMsg::errorcode() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.ErrorCode)
  return errorcode_;
}
inline void ManagerStatsPBMsg::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.ErrorCode)
}

// optional sint32 TotalNumberOfExecuteCycles = 5;
inline bool ManagerStatsPBMsg::has_totalnumberofexecutecycles() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ManagerStatsPBMsg::set_has_totalnumberofexecutecycles() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ManagerStatsPBMsg::clear_has_totalnumberofexecutecycles() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ManagerStatsPBMsg::clear_totalnumberofexecutecycles() {
  totalnumberofexecutecycles_ = 0;
  clear_has_totalnumberofexecutecycles();
}
inline ::google::protobuf::int32 ManagerStatsPBMsg::totalnumberofexecutecycles() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.TotalNumberOfExecuteCycles)
  return totalnumberofexecutecycles_;
}
inline void ManagerStatsPBMsg::set_totalnumberofexecutecycles(::google::protobuf::int32 value) {
  set_has_totalnumberofexecutecycles();
  totalnumberofexecutecycles_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.TotalNumberOfExecuteCycles)
}

// optional sint32 NumberOfExecuteCycles = 6;
inline bool ManagerStatsPBMsg::has_numberofexecutecycles() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ManagerStatsPBMsg::set_has_numberofexecutecycles() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ManagerStatsPBMsg::clear_has_numberofexecutecycles() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ManagerStatsPBMsg::clear_numberofexecutecycles() {
  numberofexecutecycles_ = 0;
  clear_has_numberofexecutecycles();
}
inline ::google::protobuf::int32 ManagerStatsPBMsg::numberofexecutecycles() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.NumberOfExecuteCycles)
  return numberofexecutecycles_;
}
inline void ManagerStatsPBMsg::set_numberofexecutecycles(::google::protobuf::int32 value) {
  set_has_numberofexecutecycles();
  numberofexecutecycles_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.NumberOfExecuteCycles)
}

// optional double TimeSinceLastStatsReset_Sec = 7;
inline bool ManagerStatsPBMsg::has_timesincelaststatsreset_sec() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ManagerStatsPBMsg::set_has_timesincelaststatsreset_sec() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ManagerStatsPBMsg::clear_has_timesincelaststatsreset_sec() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ManagerStatsPBMsg::clear_timesincelaststatsreset_sec() {
  timesincelaststatsreset_sec_ = 0;
  clear_has_timesincelaststatsreset_sec();
}
inline double ManagerStatsPBMsg::timesincelaststatsreset_sec() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.TimeSinceLastStatsReset_Sec)
  return timesincelaststatsreset_sec_;
}
inline void ManagerStatsPBMsg::set_timesincelaststatsreset_sec(double value) {
  set_has_timesincelaststatsreset_sec();
  timesincelaststatsreset_sec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.TimeSinceLastStatsReset_Sec)
}

// optional double MinExecuteUnitOfWorkTime_Sec = 8;
inline bool ManagerStatsPBMsg::has_minexecuteunitofworktime_sec() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ManagerStatsPBMsg::set_has_minexecuteunitofworktime_sec() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ManagerStatsPBMsg::clear_has_minexecuteunitofworktime_sec() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ManagerStatsPBMsg::clear_minexecuteunitofworktime_sec() {
  minexecuteunitofworktime_sec_ = 0;
  clear_has_minexecuteunitofworktime_sec();
}
inline double ManagerStatsPBMsg::minexecuteunitofworktime_sec() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.MinExecuteUnitOfWorkTime_Sec)
  return minexecuteunitofworktime_sec_;
}
inline void ManagerStatsPBMsg::set_minexecuteunitofworktime_sec(double value) {
  set_has_minexecuteunitofworktime_sec();
  minexecuteunitofworktime_sec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.MinExecuteUnitOfWorkTime_Sec)
}

// optional double MaxExecuteUnitOfWorkTime_Sec = 9;
inline bool ManagerStatsPBMsg::has_maxexecuteunitofworktime_sec() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ManagerStatsPBMsg::set_has_maxexecuteunitofworktime_sec() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ManagerStatsPBMsg::clear_has_maxexecuteunitofworktime_sec() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ManagerStatsPBMsg::clear_maxexecuteunitofworktime_sec() {
  maxexecuteunitofworktime_sec_ = 0;
  clear_has_maxexecuteunitofworktime_sec();
}
inline double ManagerStatsPBMsg::maxexecuteunitofworktime_sec() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.MaxExecuteUnitOfWorkTime_Sec)
  return maxexecuteunitofworktime_sec_;
}
inline void ManagerStatsPBMsg::set_maxexecuteunitofworktime_sec(double value) {
  set_has_maxexecuteunitofworktime_sec();
  maxexecuteunitofworktime_sec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.MaxExecuteUnitOfWorkTime_Sec)
}

// optional double AveExecuteUnitOfWorkTime_Sec = 10;
inline bool ManagerStatsPBMsg::has_aveexecuteunitofworktime_sec() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ManagerStatsPBMsg::set_has_aveexecuteunitofworktime_sec() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ManagerStatsPBMsg::clear_has_aveexecuteunitofworktime_sec() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ManagerStatsPBMsg::clear_aveexecuteunitofworktime_sec() {
  aveexecuteunitofworktime_sec_ = 0;
  clear_has_aveexecuteunitofworktime_sec();
}
inline double ManagerStatsPBMsg::aveexecuteunitofworktime_sec() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.AveExecuteUnitOfWorkTime_Sec)
  return aveexecuteunitofworktime_sec_;
}
inline void ManagerStatsPBMsg::set_aveexecuteunitofworktime_sec(double value) {
  set_has_aveexecuteunitofworktime_sec();
  aveexecuteunitofworktime_sec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.AveExecuteUnitOfWorkTime_Sec)
}

// optional double TotalExecuteUnitOfWorkTime_Sec = 11;
inline bool ManagerStatsPBMsg::has_totalexecuteunitofworktime_sec() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ManagerStatsPBMsg::set_has_totalexecuteunitofworktime_sec() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ManagerStatsPBMsg::clear_has_totalexecuteunitofworktime_sec() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ManagerStatsPBMsg::clear_totalexecuteunitofworktime_sec() {
  totalexecuteunitofworktime_sec_ = 0;
  clear_has_totalexecuteunitofworktime_sec();
}
inline double ManagerStatsPBMsg::totalexecuteunitofworktime_sec() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.TotalExecuteUnitOfWorkTime_Sec)
  return totalexecuteunitofworktime_sec_;
}
inline void ManagerStatsPBMsg::set_totalexecuteunitofworktime_sec(double value) {
  set_has_totalexecuteunitofworktime_sec();
  totalexecuteunitofworktime_sec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.TotalExecuteUnitOfWorkTime_Sec)
}

// optional double MinSleepTime_Sec = 12;
inline bool ManagerStatsPBMsg::has_minsleeptime_sec() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ManagerStatsPBMsg::set_has_minsleeptime_sec() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ManagerStatsPBMsg::clear_has_minsleeptime_sec() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ManagerStatsPBMsg::clear_minsleeptime_sec() {
  minsleeptime_sec_ = 0;
  clear_has_minsleeptime_sec();
}
inline double ManagerStatsPBMsg::minsleeptime_sec() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.MinSleepTime_Sec)
  return minsleeptime_sec_;
}
inline void ManagerStatsPBMsg::set_minsleeptime_sec(double value) {
  set_has_minsleeptime_sec();
  minsleeptime_sec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.MinSleepTime_Sec)
}

// optional double MaxSleepTime_Sec = 13;
inline bool ManagerStatsPBMsg::has_maxsleeptime_sec() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ManagerStatsPBMsg::set_has_maxsleeptime_sec() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ManagerStatsPBMsg::clear_has_maxsleeptime_sec() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ManagerStatsPBMsg::clear_maxsleeptime_sec() {
  maxsleeptime_sec_ = 0;
  clear_has_maxsleeptime_sec();
}
inline double ManagerStatsPBMsg::maxsleeptime_sec() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.MaxSleepTime_Sec)
  return maxsleeptime_sec_;
}
inline void ManagerStatsPBMsg::set_maxsleeptime_sec(double value) {
  set_has_maxsleeptime_sec();
  maxsleeptime_sec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.MaxSleepTime_Sec)
}

// optional double AveSleepTime_Sec = 14;
inline bool ManagerStatsPBMsg::has_avesleeptime_sec() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ManagerStatsPBMsg::set_has_avesleeptime_sec() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ManagerStatsPBMsg::clear_has_avesleeptime_sec() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ManagerStatsPBMsg::clear_avesleeptime_sec() {
  avesleeptime_sec_ = 0;
  clear_has_avesleeptime_sec();
}
inline double ManagerStatsPBMsg::avesleeptime_sec() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.AveSleepTime_Sec)
  return avesleeptime_sec_;
}
inline void ManagerStatsPBMsg::set_avesleeptime_sec(double value) {
  set_has_avesleeptime_sec();
  avesleeptime_sec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.AveSleepTime_Sec)
}

// optional double TotalSleepTime_Sec = 15;
inline bool ManagerStatsPBMsg::has_totalsleeptime_sec() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ManagerStatsPBMsg::set_has_totalsleeptime_sec() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ManagerStatsPBMsg::clear_has_totalsleeptime_sec() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ManagerStatsPBMsg::clear_totalsleeptime_sec() {
  totalsleeptime_sec_ = 0;
  clear_has_totalsleeptime_sec();
}
inline double ManagerStatsPBMsg::totalsleeptime_sec() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.TotalSleepTime_Sec)
  return totalsleeptime_sec_;
}
inline void ManagerStatsPBMsg::set_totalsleeptime_sec(double value) {
  set_has_totalsleeptime_sec();
  totalsleeptime_sec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.TotalSleepTime_Sec)
}

// optional sint32 NumberOfWakeUpCallsWhileAsleep = 16;
inline bool ManagerStatsPBMsg::has_numberofwakeupcallswhileasleep() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ManagerStatsPBMsg::set_has_numberofwakeupcallswhileasleep() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ManagerStatsPBMsg::clear_has_numberofwakeupcallswhileasleep() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ManagerStatsPBMsg::clear_numberofwakeupcallswhileasleep() {
  numberofwakeupcallswhileasleep_ = 0;
  clear_has_numberofwakeupcallswhileasleep();
}
inline ::google::protobuf::int32 ManagerStatsPBMsg::numberofwakeupcallswhileasleep() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.NumberOfWakeUpCallsWhileAsleep)
  return numberofwakeupcallswhileasleep_;
}
inline void ManagerStatsPBMsg::set_numberofwakeupcallswhileasleep(::google::protobuf::int32 value) {
  set_has_numberofwakeupcallswhileasleep();
  numberofwakeupcallswhileasleep_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.NumberOfWakeUpCallsWhileAsleep)
}

// optional sint32 NumberOfWakeUpCallsWhileAwake = 17;
inline bool ManagerStatsPBMsg::has_numberofwakeupcallswhileawake() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ManagerStatsPBMsg::set_has_numberofwakeupcallswhileawake() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ManagerStatsPBMsg::clear_has_numberofwakeupcallswhileawake() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ManagerStatsPBMsg::clear_numberofwakeupcallswhileawake() {
  numberofwakeupcallswhileawake_ = 0;
  clear_has_numberofwakeupcallswhileawake();
}
inline ::google::protobuf::int32 ManagerStatsPBMsg::numberofwakeupcallswhileawake() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerStatsPBMsg.NumberOfWakeUpCallsWhileAwake)
  return numberofwakeupcallswhileawake_;
}
inline void ManagerStatsPBMsg::set_numberofwakeupcallswhileawake(::google::protobuf::int32 value) {
  set_has_numberofwakeupcallswhileawake();
  numberofwakeupcallswhileawake_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerStatsPBMsg.NumberOfWakeUpCallsWhileAwake)
}

// -------------------------------------------------------------------

// ManagerControlPBMsg

// optional string ManagerName = 1;
inline bool ManagerControlPBMsg::has_managername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManagerControlPBMsg::set_has_managername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManagerControlPBMsg::clear_has_managername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManagerControlPBMsg::clear_managername() {
  managername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_managername();
}
inline const ::std::string& ManagerControlPBMsg::managername() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerControlPBMsg.ManagerName)
  return managername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManagerControlPBMsg::set_managername(const ::std::string& value) {
  set_has_managername();
  managername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.ManagerControlPBMsg.ManagerName)
}
inline void ManagerControlPBMsg::set_managername(const char* value) {
  set_has_managername();
  managername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.ManagerControlPBMsg.ManagerName)
}
inline void ManagerControlPBMsg::set_managername(const char* value, size_t size) {
  set_has_managername();
  managername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.ManagerControlPBMsg.ManagerName)
}
inline ::std::string* ManagerControlPBMsg::mutable_managername() {
  set_has_managername();
  // @@protoc_insertion_point(field_mutable:vision_messages.ManagerControlPBMsg.ManagerName)
  return managername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManagerControlPBMsg::release_managername() {
  // @@protoc_insertion_point(field_release:vision_messages.ManagerControlPBMsg.ManagerName)
  clear_has_managername();
  return managername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManagerControlPBMsg::set_allocated_managername(::std::string* managername) {
  if (managername != NULL) {
    set_has_managername();
  } else {
    clear_has_managername();
  }
  managername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), managername);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.ManagerControlPBMsg.ManagerName)
}

// optional bool ShutdownManager = 2;
inline bool ManagerControlPBMsg::has_shutdownmanager() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManagerControlPBMsg::set_has_shutdownmanager() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManagerControlPBMsg::clear_has_shutdownmanager() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManagerControlPBMsg::clear_shutdownmanager() {
  shutdownmanager_ = false;
  clear_has_shutdownmanager();
}
inline bool ManagerControlPBMsg::shutdownmanager() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerControlPBMsg.ShutdownManager)
  return shutdownmanager_;
}
inline void ManagerControlPBMsg::set_shutdownmanager(bool value) {
  set_has_shutdownmanager();
  shutdownmanager_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerControlPBMsg.ShutdownManager)
}

// optional bool ResetMgrStatsToggle = 3;
inline bool ManagerControlPBMsg::has_resetmgrstatstoggle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManagerControlPBMsg::set_has_resetmgrstatstoggle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManagerControlPBMsg::clear_has_resetmgrstatstoggle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManagerControlPBMsg::clear_resetmgrstatstoggle() {
  resetmgrstatstoggle_ = false;
  clear_has_resetmgrstatstoggle();
}
inline bool ManagerControlPBMsg::resetmgrstatstoggle() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerControlPBMsg.ResetMgrStatsToggle)
  return resetmgrstatstoggle_;
}
inline void ManagerControlPBMsg::set_resetmgrstatstoggle(bool value) {
  set_has_resetmgrstatstoggle();
  resetmgrstatstoggle_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerControlPBMsg.ResetMgrStatsToggle)
}

// optional double PublishMgrStatsTime_Sec = 4;
inline bool ManagerControlPBMsg::has_publishmgrstatstime_sec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManagerControlPBMsg::set_has_publishmgrstatstime_sec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManagerControlPBMsg::clear_has_publishmgrstatstime_sec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManagerControlPBMsg::clear_publishmgrstatstime_sec() {
  publishmgrstatstime_sec_ = 0;
  clear_has_publishmgrstatstime_sec();
}
inline double ManagerControlPBMsg::publishmgrstatstime_sec() const {
  // @@protoc_insertion_point(field_get:vision_messages.ManagerControlPBMsg.PublishMgrStatsTime_Sec)
  return publishmgrstatstime_sec_;
}
inline void ManagerControlPBMsg::set_publishmgrstatstime_sec(double value) {
  set_has_publishmgrstatstime_sec();
  publishmgrstatstime_sec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ManagerControlPBMsg.PublishMgrStatsTime_Sec)
}

// -------------------------------------------------------------------

// CameraSteeringPBMsg

// optional bool CameraSteeringModeSPOI = 1;
inline bool CameraSteeringPBMsg::has_camerasteeringmodespoi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CameraSteeringPBMsg::set_has_camerasteeringmodespoi() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CameraSteeringPBMsg::clear_has_camerasteeringmodespoi() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CameraSteeringPBMsg::clear_camerasteeringmodespoi() {
  camerasteeringmodespoi_ = false;
  clear_has_camerasteeringmodespoi();
}
inline bool CameraSteeringPBMsg::camerasteeringmodespoi() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraSteeringPBMsg.CameraSteeringModeSPOI)
  return camerasteeringmodespoi_;
}
inline void CameraSteeringPBMsg::set_camerasteeringmodespoi(bool value) {
  set_has_camerasteeringmodespoi();
  camerasteeringmodespoi_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraSteeringPBMsg.CameraSteeringModeSPOI)
}

// optional bool CoordinatesLatLonOrXY = 12;
inline bool CameraSteeringPBMsg::has_coordinateslatlonorxy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CameraSteeringPBMsg::set_has_coordinateslatlonorxy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CameraSteeringPBMsg::clear_has_coordinateslatlonorxy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CameraSteeringPBMsg::clear_coordinateslatlonorxy() {
  coordinateslatlonorxy_ = false;
  clear_has_coordinateslatlonorxy();
}
inline bool CameraSteeringPBMsg::coordinateslatlonorxy() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraSteeringPBMsg.CoordinatesLatLonOrXY)
  return coordinateslatlonorxy_;
}
inline void CameraSteeringPBMsg::set_coordinateslatlonorxy(bool value) {
  set_has_coordinateslatlonorxy();
  coordinateslatlonorxy_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraSteeringPBMsg.CoordinatesLatLonOrXY)
}

// optional double SpoiLatitudeRadOrY = 3;
inline bool CameraSteeringPBMsg::has_spoilatituderadory() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CameraSteeringPBMsg::set_has_spoilatituderadory() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CameraSteeringPBMsg::clear_has_spoilatituderadory() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CameraSteeringPBMsg::clear_spoilatituderadory() {
  spoilatituderadory_ = 0;
  clear_has_spoilatituderadory();
}
inline double CameraSteeringPBMsg::spoilatituderadory() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraSteeringPBMsg.SpoiLatitudeRadOrY)
  return spoilatituderadory_;
}
inline void CameraSteeringPBMsg::set_spoilatituderadory(double value) {
  set_has_spoilatituderadory();
  spoilatituderadory_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraSteeringPBMsg.SpoiLatitudeRadOrY)
}

// optional double SpoiLongitudeRadOrX = 4;
inline bool CameraSteeringPBMsg::has_spoilongituderadorx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CameraSteeringPBMsg::set_has_spoilongituderadorx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CameraSteeringPBMsg::clear_has_spoilongituderadorx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CameraSteeringPBMsg::clear_spoilongituderadorx() {
  spoilongituderadorx_ = 0;
  clear_has_spoilongituderadorx();
}
inline double CameraSteeringPBMsg::spoilongituderadorx() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraSteeringPBMsg.SpoiLongitudeRadOrX)
  return spoilongituderadorx_;
}
inline void CameraSteeringPBMsg::set_spoilongituderadorx(double value) {
  set_has_spoilongituderadorx();
  spoilongituderadorx_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraSteeringPBMsg.SpoiLongitudeRadOrX)
}

// optional double CameraAzimuthAngleRad = 5;
inline bool CameraSteeringPBMsg::has_cameraazimuthanglerad() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CameraSteeringPBMsg::set_has_cameraazimuthanglerad() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CameraSteeringPBMsg::clear_has_cameraazimuthanglerad() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CameraSteeringPBMsg::clear_cameraazimuthanglerad() {
  cameraazimuthanglerad_ = 0;
  clear_has_cameraazimuthanglerad();
}
inline double CameraSteeringPBMsg::cameraazimuthanglerad() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraSteeringPBMsg.CameraAzimuthAngleRad)
  return cameraazimuthanglerad_;
}
inline void CameraSteeringPBMsg::set_cameraazimuthanglerad(double value) {
  set_has_cameraazimuthanglerad();
  cameraazimuthanglerad_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraSteeringPBMsg.CameraAzimuthAngleRad)
}

// optional double CameraElevationAngleRad = 6;
inline bool CameraSteeringPBMsg::has_cameraelevationanglerad() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CameraSteeringPBMsg::set_has_cameraelevationanglerad() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CameraSteeringPBMsg::clear_has_cameraelevationanglerad() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CameraSteeringPBMsg::clear_cameraelevationanglerad() {
  cameraelevationanglerad_ = 0;
  clear_has_cameraelevationanglerad();
}
inline double CameraSteeringPBMsg::cameraelevationanglerad() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraSteeringPBMsg.CameraElevationAngleRad)
  return cameraelevationanglerad_;
}
inline void CameraSteeringPBMsg::set_cameraelevationanglerad(double value) {
  set_has_cameraelevationanglerad();
  cameraelevationanglerad_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraSteeringPBMsg.CameraElevationAngleRad)
}

// optional double CameraZoomPercent = 7;
inline bool CameraSteeringPBMsg::has_camerazoompercent() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CameraSteeringPBMsg::set_has_camerazoompercent() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CameraSteeringPBMsg::clear_has_camerazoompercent() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CameraSteeringPBMsg::clear_camerazoompercent() {
  camerazoompercent_ = 0;
  clear_has_camerazoompercent();
}
inline double CameraSteeringPBMsg::camerazoompercent() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraSteeringPBMsg.CameraZoomPercent)
  return camerazoompercent_;
}
inline void CameraSteeringPBMsg::set_camerazoompercent(double value) {
  set_has_camerazoompercent();
  camerazoompercent_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraSteeringPBMsg.CameraZoomPercent)
}

// -------------------------------------------------------------------

// ImageCompressionControlPBMsg

// optional bool EnableImageCompression = 1;
inline bool ImageCompressionControlPBMsg::has_enableimagecompression() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageCompressionControlPBMsg::set_has_enableimagecompression() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImageCompressionControlPBMsg::clear_has_enableimagecompression() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImageCompressionControlPBMsg::clear_enableimagecompression() {
  enableimagecompression_ = false;
  clear_has_enableimagecompression();
}
inline bool ImageCompressionControlPBMsg::enableimagecompression() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCompressionControlPBMsg.EnableImageCompression)
  return enableimagecompression_;
}
inline void ImageCompressionControlPBMsg::set_enableimagecompression(bool value) {
  set_has_enableimagecompression();
  enableimagecompression_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCompressionControlPBMsg.EnableImageCompression)
}

// optional bool TransmitCompressedImages = 2;
inline bool ImageCompressionControlPBMsg::has_transmitcompressedimages() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImageCompressionControlPBMsg::set_has_transmitcompressedimages() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImageCompressionControlPBMsg::clear_has_transmitcompressedimages() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImageCompressionControlPBMsg::clear_transmitcompressedimages() {
  transmitcompressedimages_ = false;
  clear_has_transmitcompressedimages();
}
inline bool ImageCompressionControlPBMsg::transmitcompressedimages() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCompressionControlPBMsg.TransmitCompressedImages)
  return transmitcompressedimages_;
}
inline void ImageCompressionControlPBMsg::set_transmitcompressedimages(bool value) {
  set_has_transmitcompressedimages();
  transmitcompressedimages_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCompressionControlPBMsg.TransmitCompressedImages)
}

// optional .vision_messages.ImageCompressionControlPBMsg.VisionImageCompressionType_e ImageComressionType = 3;
inline bool ImageCompressionControlPBMsg::has_imagecomressiontype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ImageCompressionControlPBMsg::set_has_imagecomressiontype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ImageCompressionControlPBMsg::clear_has_imagecomressiontype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ImageCompressionControlPBMsg::clear_imagecomressiontype() {
  imagecomressiontype_ = 0;
  clear_has_imagecomressiontype();
}
inline ::vision_messages::ImageCompressionControlPBMsg_VisionImageCompressionType_e ImageCompressionControlPBMsg::imagecomressiontype() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCompressionControlPBMsg.ImageComressionType)
  return static_cast< ::vision_messages::ImageCompressionControlPBMsg_VisionImageCompressionType_e >(imagecomressiontype_);
}
inline void ImageCompressionControlPBMsg::set_imagecomressiontype(::vision_messages::ImageCompressionControlPBMsg_VisionImageCompressionType_e value) {
  assert(::vision_messages::ImageCompressionControlPBMsg_VisionImageCompressionType_e_IsValid(value));
  set_has_imagecomressiontype();
  imagecomressiontype_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCompressionControlPBMsg.ImageComressionType)
}

// optional double ImageCompressionRatio = 4;
inline bool ImageCompressionControlPBMsg::has_imagecompressionratio() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ImageCompressionControlPBMsg::set_has_imagecompressionratio() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ImageCompressionControlPBMsg::clear_has_imagecompressionratio() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ImageCompressionControlPBMsg::clear_imagecompressionratio() {
  imagecompressionratio_ = 0;
  clear_has_imagecompressionratio();
}
inline double ImageCompressionControlPBMsg::imagecompressionratio() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCompressionControlPBMsg.ImageCompressionRatio)
  return imagecompressionratio_;
}
inline void ImageCompressionControlPBMsg::set_imagecompressionratio(double value) {
  set_has_imagecompressionratio();
  imagecompressionratio_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCompressionControlPBMsg.ImageCompressionRatio)
}

// optional double FrameRate = 5;
inline bool ImageCompressionControlPBMsg::has_framerate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ImageCompressionControlPBMsg::set_has_framerate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ImageCompressionControlPBMsg::clear_has_framerate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ImageCompressionControlPBMsg::clear_framerate() {
  framerate_ = 0;
  clear_has_framerate();
}
inline double ImageCompressionControlPBMsg::framerate() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCompressionControlPBMsg.FrameRate)
  return framerate_;
}
inline void ImageCompressionControlPBMsg::set_framerate(double value) {
  set_has_framerate();
  framerate_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCompressionControlPBMsg.FrameRate)
}

// -------------------------------------------------------------------

// ImageLoggingControlPBMsg

// optional bool EnableLogging = 1;
inline bool ImageLoggingControlPBMsg::has_enablelogging() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageLoggingControlPBMsg::set_has_enablelogging() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImageLoggingControlPBMsg::clear_has_enablelogging() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImageLoggingControlPBMsg::clear_enablelogging() {
  enablelogging_ = false;
  clear_has_enablelogging();
}
inline bool ImageLoggingControlPBMsg::enablelogging() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageLoggingControlPBMsg.EnableLogging)
  return enablelogging_;
}
inline void ImageLoggingControlPBMsg::set_enablelogging(bool value) {
  set_has_enablelogging();
  enablelogging_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageLoggingControlPBMsg.EnableLogging)
}

// optional .vision_messages.ImageLoggingControlPBMsg.VisionLoggingType_e LoggingType = 2;
inline bool ImageLoggingControlPBMsg::has_loggingtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImageLoggingControlPBMsg::set_has_loggingtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImageLoggingControlPBMsg::clear_has_loggingtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImageLoggingControlPBMsg::clear_loggingtype() {
  loggingtype_ = 0;
  clear_has_loggingtype();
}
inline ::vision_messages::ImageLoggingControlPBMsg_VisionLoggingType_e ImageLoggingControlPBMsg::loggingtype() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageLoggingControlPBMsg.LoggingType)
  return static_cast< ::vision_messages::ImageLoggingControlPBMsg_VisionLoggingType_e >(loggingtype_);
}
inline void ImageLoggingControlPBMsg::set_loggingtype(::vision_messages::ImageLoggingControlPBMsg_VisionLoggingType_e value) {
  assert(::vision_messages::ImageLoggingControlPBMsg_VisionLoggingType_e_IsValid(value));
  set_has_loggingtype();
  loggingtype_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageLoggingControlPBMsg.LoggingType)
}

// -------------------------------------------------------------------

// ImageLocationPBMsg

// optional uint32 ImageNumber = 1;
inline bool ImageLocationPBMsg::has_imagenumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageLocationPBMsg::set_has_imagenumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImageLocationPBMsg::clear_has_imagenumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImageLocationPBMsg::clear_imagenumber() {
  imagenumber_ = 0u;
  clear_has_imagenumber();
}
inline ::google::protobuf::uint32 ImageLocationPBMsg::imagenumber() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageLocationPBMsg.ImageNumber)
  return imagenumber_;
}
inline void ImageLocationPBMsg::set_imagenumber(::google::protobuf::uint32 value) {
  set_has_imagenumber();
  imagenumber_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageLocationPBMsg.ImageNumber)
}

// optional double ImageCenterLatitudeRadians = 2;
inline bool ImageLocationPBMsg::has_imagecenterlatituderadians() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImageLocationPBMsg::set_has_imagecenterlatituderadians() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImageLocationPBMsg::clear_has_imagecenterlatituderadians() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImageLocationPBMsg::clear_imagecenterlatituderadians() {
  imagecenterlatituderadians_ = 0;
  clear_has_imagecenterlatituderadians();
}
inline double ImageLocationPBMsg::imagecenterlatituderadians() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageLocationPBMsg.ImageCenterLatitudeRadians)
  return imagecenterlatituderadians_;
}
inline void ImageLocationPBMsg::set_imagecenterlatituderadians(double value) {
  set_has_imagecenterlatituderadians();
  imagecenterlatituderadians_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageLocationPBMsg.ImageCenterLatitudeRadians)
}

// optional double ImageCenterLongitudeRadians = 3;
inline bool ImageLocationPBMsg::has_imagecenterlongituderadians() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ImageLocationPBMsg::set_has_imagecenterlongituderadians() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ImageLocationPBMsg::clear_has_imagecenterlongituderadians() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ImageLocationPBMsg::clear_imagecenterlongituderadians() {
  imagecenterlongituderadians_ = 0;
  clear_has_imagecenterlongituderadians();
}
inline double ImageLocationPBMsg::imagecenterlongituderadians() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageLocationPBMsg.ImageCenterLongitudeRadians)
  return imagecenterlongituderadians_;
}
inline void ImageLocationPBMsg::set_imagecenterlongituderadians(double value) {
  set_has_imagecenterlongituderadians();
  imagecenterlongituderadians_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageLocationPBMsg.ImageCenterLongitudeRadians)
}

// repeated double TargetCornerLocations = 4;
inline int ImageLocationPBMsg::targetcornerlocations_size() const {
  return targetcornerlocations_.size();
}
inline void ImageLocationPBMsg::clear_targetcornerlocations() {
  targetcornerlocations_.Clear();
}
inline double ImageLocationPBMsg::targetcornerlocations(int index) const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageLocationPBMsg.TargetCornerLocations)
  return targetcornerlocations_.Get(index);
}
inline void ImageLocationPBMsg::set_targetcornerlocations(int index, double value) {
  targetcornerlocations_.Set(index, value);
  // @@protoc_insertion_point(field_set:vision_messages.ImageLocationPBMsg.TargetCornerLocations)
}
inline void ImageLocationPBMsg::add_targetcornerlocations(double value) {
  targetcornerlocations_.Add(value);
  // @@protoc_insertion_point(field_add:vision_messages.ImageLocationPBMsg.TargetCornerLocations)
}
inline const ::google::protobuf::RepeatedField< double >&
ImageLocationPBMsg::targetcornerlocations() const {
  // @@protoc_insertion_point(field_list:vision_messages.ImageLocationPBMsg.TargetCornerLocations)
  return targetcornerlocations_;
}
inline ::google::protobuf::RepeatedField< double >*
ImageLocationPBMsg::mutable_targetcornerlocations() {
  // @@protoc_insertion_point(field_mutable_list:vision_messages.ImageLocationPBMsg.TargetCornerLocations)
  return &targetcornerlocations_;
}

// optional bool TargetCornersLatLonOrXY = 5;
inline bool ImageLocationPBMsg::has_targetcornerslatlonorxy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ImageLocationPBMsg::set_has_targetcornerslatlonorxy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ImageLocationPBMsg::clear_has_targetcornerslatlonorxy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ImageLocationPBMsg::clear_targetcornerslatlonorxy() {
  targetcornerslatlonorxy_ = false;
  clear_has_targetcornerslatlonorxy();
}
inline bool ImageLocationPBMsg::targetcornerslatlonorxy() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageLocationPBMsg.TargetCornersLatLonOrXY)
  return targetcornerslatlonorxy_;
}
inline void ImageLocationPBMsg::set_targetcornerslatlonorxy(bool value) {
  set_has_targetcornerslatlonorxy();
  targetcornerslatlonorxy_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageLocationPBMsg.TargetCornersLatLonOrXY)
}

// -------------------------------------------------------------------

// GroundTargetLocationPBMsg

// optional uint32 TargetTypeCode = 1;
inline bool GroundTargetLocationPBMsg::has_targettypecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroundTargetLocationPBMsg::set_has_targettypecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroundTargetLocationPBMsg::clear_has_targettypecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroundTargetLocationPBMsg::clear_targettypecode() {
  targettypecode_ = 0u;
  clear_has_targettypecode();
}
inline ::google::protobuf::uint32 GroundTargetLocationPBMsg::targettypecode() const {
  // @@protoc_insertion_point(field_get:vision_messages.GroundTargetLocationPBMsg.TargetTypeCode)
  return targettypecode_;
}
inline void GroundTargetLocationPBMsg::set_targettypecode(::google::protobuf::uint32 value) {
  set_has_targettypecode();
  targettypecode_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GroundTargetLocationPBMsg.TargetTypeCode)
}

// optional uint32 TargetID = 2;
inline bool GroundTargetLocationPBMsg::has_targetid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroundTargetLocationPBMsg::set_has_targetid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroundTargetLocationPBMsg::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroundTargetLocationPBMsg::clear_targetid() {
  targetid_ = 0u;
  clear_has_targetid();
}
inline ::google::protobuf::uint32 GroundTargetLocationPBMsg::targetid() const {
  // @@protoc_insertion_point(field_get:vision_messages.GroundTargetLocationPBMsg.TargetID)
  return targetid_;
}
inline void GroundTargetLocationPBMsg::set_targetid(::google::protobuf::uint32 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GroundTargetLocationPBMsg.TargetID)
}

// optional double TargetLatitudeRadians = 3;
inline bool GroundTargetLocationPBMsg::has_targetlatituderadians() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroundTargetLocationPBMsg::set_has_targetlatituderadians() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroundTargetLocationPBMsg::clear_has_targetlatituderadians() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroundTargetLocationPBMsg::clear_targetlatituderadians() {
  targetlatituderadians_ = 0;
  clear_has_targetlatituderadians();
}
inline double GroundTargetLocationPBMsg::targetlatituderadians() const {
  // @@protoc_insertion_point(field_get:vision_messages.GroundTargetLocationPBMsg.TargetLatitudeRadians)
  return targetlatituderadians_;
}
inline void GroundTargetLocationPBMsg::set_targetlatituderadians(double value) {
  set_has_targetlatituderadians();
  targetlatituderadians_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GroundTargetLocationPBMsg.TargetLatitudeRadians)
}

// optional double TargetLongitudeRadians = 4;
inline bool GroundTargetLocationPBMsg::has_targetlongituderadians() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroundTargetLocationPBMsg::set_has_targetlongituderadians() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroundTargetLocationPBMsg::clear_has_targetlongituderadians() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroundTargetLocationPBMsg::clear_targetlongituderadians() {
  targetlongituderadians_ = 0;
  clear_has_targetlongituderadians();
}
inline double GroundTargetLocationPBMsg::targetlongituderadians() const {
  // @@protoc_insertion_point(field_get:vision_messages.GroundTargetLocationPBMsg.TargetLongitudeRadians)
  return targetlongituderadians_;
}
inline void GroundTargetLocationPBMsg::set_targetlongituderadians(double value) {
  set_has_targetlongituderadians();
  targetlongituderadians_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GroundTargetLocationPBMsg.TargetLongitudeRadians)
}

// optional double TargetAltitudeMSL = 5;
inline bool GroundTargetLocationPBMsg::has_targetaltitudemsl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroundTargetLocationPBMsg::set_has_targetaltitudemsl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroundTargetLocationPBMsg::clear_has_targetaltitudemsl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroundTargetLocationPBMsg::clear_targetaltitudemsl() {
  targetaltitudemsl_ = 0;
  clear_has_targetaltitudemsl();
}
inline double GroundTargetLocationPBMsg::targetaltitudemsl() const {
  // @@protoc_insertion_point(field_get:vision_messages.GroundTargetLocationPBMsg.TargetAltitudeMSL)
  return targetaltitudemsl_;
}
inline void GroundTargetLocationPBMsg::set_targetaltitudemsl(double value) {
  set_has_targetaltitudemsl();
  targetaltitudemsl_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GroundTargetLocationPBMsg.TargetAltitudeMSL)
}

// optional bool TargetAltitudeValid = 6;
inline bool GroundTargetLocationPBMsg::has_targetaltitudevalid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GroundTargetLocationPBMsg::set_has_targetaltitudevalid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GroundTargetLocationPBMsg::clear_has_targetaltitudevalid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GroundTargetLocationPBMsg::clear_targetaltitudevalid() {
  targetaltitudevalid_ = false;
  clear_has_targetaltitudevalid();
}
inline bool GroundTargetLocationPBMsg::targetaltitudevalid() const {
  // @@protoc_insertion_point(field_get:vision_messages.GroundTargetLocationPBMsg.TargetAltitudeValid)
  return targetaltitudevalid_;
}
inline void GroundTargetLocationPBMsg::set_targetaltitudevalid(bool value) {
  set_has_targetaltitudevalid();
  targetaltitudevalid_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GroundTargetLocationPBMsg.TargetAltitudeValid)
}

// optional double TargetAzimuthRadians = 7;
inline bool GroundTargetLocationPBMsg::has_targetazimuthradians() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GroundTargetLocationPBMsg::set_has_targetazimuthradians() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GroundTargetLocationPBMsg::clear_has_targetazimuthradians() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GroundTargetLocationPBMsg::clear_targetazimuthradians() {
  targetazimuthradians_ = 0;
  clear_has_targetazimuthradians();
}
inline double GroundTargetLocationPBMsg::targetazimuthradians() const {
  // @@protoc_insertion_point(field_get:vision_messages.GroundTargetLocationPBMsg.TargetAzimuthRadians)
  return targetazimuthradians_;
}
inline void GroundTargetLocationPBMsg::set_targetazimuthradians(double value) {
  set_has_targetazimuthradians();
  targetazimuthradians_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GroundTargetLocationPBMsg.TargetAzimuthRadians)
}

// optional double TargetElevationRadians = 8;
inline bool GroundTargetLocationPBMsg::has_targetelevationradians() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GroundTargetLocationPBMsg::set_has_targetelevationradians() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GroundTargetLocationPBMsg::clear_has_targetelevationradians() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GroundTargetLocationPBMsg::clear_targetelevationradians() {
  targetelevationradians_ = 0;
  clear_has_targetelevationradians();
}
inline double GroundTargetLocationPBMsg::targetelevationradians() const {
  // @@protoc_insertion_point(field_get:vision_messages.GroundTargetLocationPBMsg.TargetElevationRadians)
  return targetelevationradians_;
}
inline void GroundTargetLocationPBMsg::set_targetelevationradians(double value) {
  set_has_targetelevationradians();
  targetelevationradians_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GroundTargetLocationPBMsg.TargetElevationRadians)
}

// optional double TargetOrientationRadians = 9;
inline bool GroundTargetLocationPBMsg::has_targetorientationradians() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GroundTargetLocationPBMsg::set_has_targetorientationradians() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GroundTargetLocationPBMsg::clear_has_targetorientationradians() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GroundTargetLocationPBMsg::clear_targetorientationradians() {
  targetorientationradians_ = 0;
  clear_has_targetorientationradians();
}
inline double GroundTargetLocationPBMsg::targetorientationradians() const {
  // @@protoc_insertion_point(field_get:vision_messages.GroundTargetLocationPBMsg.TargetOrientationRadians)
  return targetorientationradians_;
}
inline void GroundTargetLocationPBMsg::set_targetorientationradians(double value) {
  set_has_targetorientationradians();
  targetorientationradians_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GroundTargetLocationPBMsg.TargetOrientationRadians)
}

// optional bool TargetAzimuthElevationOrientationValid = 10;
inline bool GroundTargetLocationPBMsg::has_targetazimuthelevationorientationvalid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GroundTargetLocationPBMsg::set_has_targetazimuthelevationorientationvalid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GroundTargetLocationPBMsg::clear_has_targetazimuthelevationorientationvalid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GroundTargetLocationPBMsg::clear_targetazimuthelevationorientationvalid() {
  targetazimuthelevationorientationvalid_ = false;
  clear_has_targetazimuthelevationorientationvalid();
}
inline bool GroundTargetLocationPBMsg::targetazimuthelevationorientationvalid() const {
  // @@protoc_insertion_point(field_get:vision_messages.GroundTargetLocationPBMsg.TargetAzimuthElevationOrientationValid)
  return targetazimuthelevationorientationvalid_;
}
inline void GroundTargetLocationPBMsg::set_targetazimuthelevationorientationvalid(bool value) {
  set_has_targetazimuthelevationorientationvalid();
  targetazimuthelevationorientationvalid_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GroundTargetLocationPBMsg.TargetAzimuthElevationOrientationValid)
}

// repeated double TargetCovarianceMatrix = 11;
inline int GroundTargetLocationPBMsg::targetcovariancematrix_size() const {
  return targetcovariancematrix_.size();
}
inline void GroundTargetLocationPBMsg::clear_targetcovariancematrix() {
  targetcovariancematrix_.Clear();
}
inline double GroundTargetLocationPBMsg::targetcovariancematrix(int index) const {
  // @@protoc_insertion_point(field_get:vision_messages.GroundTargetLocationPBMsg.TargetCovarianceMatrix)
  return targetcovariancematrix_.Get(index);
}
inline void GroundTargetLocationPBMsg::set_targetcovariancematrix(int index, double value) {
  targetcovariancematrix_.Set(index, value);
  // @@protoc_insertion_point(field_set:vision_messages.GroundTargetLocationPBMsg.TargetCovarianceMatrix)
}
inline void GroundTargetLocationPBMsg::add_targetcovariancematrix(double value) {
  targetcovariancematrix_.Add(value);
  // @@protoc_insertion_point(field_add:vision_messages.GroundTargetLocationPBMsg.TargetCovarianceMatrix)
}
inline const ::google::protobuf::RepeatedField< double >&
GroundTargetLocationPBMsg::targetcovariancematrix() const {
  // @@protoc_insertion_point(field_list:vision_messages.GroundTargetLocationPBMsg.TargetCovarianceMatrix)
  return targetcovariancematrix_;
}
inline ::google::protobuf::RepeatedField< double >*
GroundTargetLocationPBMsg::mutable_targetcovariancematrix() {
  // @@protoc_insertion_point(field_mutable_list:vision_messages.GroundTargetLocationPBMsg.TargetCovarianceMatrix)
  return &targetcovariancematrix_;
}

// optional bool TargetCovarianceValid = 12;
inline bool GroundTargetLocationPBMsg::has_targetcovariancevalid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GroundTargetLocationPBMsg::set_has_targetcovariancevalid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GroundTargetLocationPBMsg::clear_has_targetcovariancevalid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GroundTargetLocationPBMsg::clear_targetcovariancevalid() {
  targetcovariancevalid_ = false;
  clear_has_targetcovariancevalid();
}
inline bool GroundTargetLocationPBMsg::targetcovariancevalid() const {
  // @@protoc_insertion_point(field_get:vision_messages.GroundTargetLocationPBMsg.TargetCovarianceValid)
  return targetcovariancevalid_;
}
inline void GroundTargetLocationPBMsg::set_targetcovariancevalid(bool value) {
  set_has_targetcovariancevalid();
  targetcovariancevalid_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GroundTargetLocationPBMsg.TargetCovarianceValid)
}

// optional int32 TargetPixelLocation_x = 13;
inline bool GroundTargetLocationPBMsg::has_targetpixellocation_x() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GroundTargetLocationPBMsg::set_has_targetpixellocation_x() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GroundTargetLocationPBMsg::clear_has_targetpixellocation_x() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GroundTargetLocationPBMsg::clear_targetpixellocation_x() {
  targetpixellocation_x_ = 0;
  clear_has_targetpixellocation_x();
}
inline ::google::protobuf::int32 GroundTargetLocationPBMsg::targetpixellocation_x() const {
  // @@protoc_insertion_point(field_get:vision_messages.GroundTargetLocationPBMsg.TargetPixelLocation_x)
  return targetpixellocation_x_;
}
inline void GroundTargetLocationPBMsg::set_targetpixellocation_x(::google::protobuf::int32 value) {
  set_has_targetpixellocation_x();
  targetpixellocation_x_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GroundTargetLocationPBMsg.TargetPixelLocation_x)
}

// optional int32 TargetPixelLocation_y = 14;
inline bool GroundTargetLocationPBMsg::has_targetpixellocation_y() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GroundTargetLocationPBMsg::set_has_targetpixellocation_y() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GroundTargetLocationPBMsg::clear_has_targetpixellocation_y() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GroundTargetLocationPBMsg::clear_targetpixellocation_y() {
  targetpixellocation_y_ = 0;
  clear_has_targetpixellocation_y();
}
inline ::google::protobuf::int32 GroundTargetLocationPBMsg::targetpixellocation_y() const {
  // @@protoc_insertion_point(field_get:vision_messages.GroundTargetLocationPBMsg.TargetPixelLocation_y)
  return targetpixellocation_y_;
}
inline void GroundTargetLocationPBMsg::set_targetpixellocation_y(::google::protobuf::int32 value) {
  set_has_targetpixellocation_y();
  targetpixellocation_y_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GroundTargetLocationPBMsg.TargetPixelLocation_y)
}

// -------------------------------------------------------------------

// ImageProcTargetInfoResultsPBMsg

// optional .vision_messages.ImageLocationPBMsg ImageLocation = 1;
inline bool ImageProcTargetInfoResultsPBMsg::has_imagelocation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageProcTargetInfoResultsPBMsg::set_has_imagelocation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImageProcTargetInfoResultsPBMsg::clear_has_imagelocation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImageProcTargetInfoResultsPBMsg::clear_imagelocation() {
  if (imagelocation_ != NULL) imagelocation_->::vision_messages::ImageLocationPBMsg::Clear();
  clear_has_imagelocation();
}
inline const ::vision_messages::ImageLocationPBMsg& ImageProcTargetInfoResultsPBMsg::imagelocation() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageProcTargetInfoResultsPBMsg.ImageLocation)
  return imagelocation_ != NULL ? *imagelocation_ : *default_instance_->imagelocation_;
}
inline ::vision_messages::ImageLocationPBMsg* ImageProcTargetInfoResultsPBMsg::mutable_imagelocation() {
  set_has_imagelocation();
  if (imagelocation_ == NULL) {
    imagelocation_ = new ::vision_messages::ImageLocationPBMsg;
  }
  // @@protoc_insertion_point(field_mutable:vision_messages.ImageProcTargetInfoResultsPBMsg.ImageLocation)
  return imagelocation_;
}
inline ::vision_messages::ImageLocationPBMsg* ImageProcTargetInfoResultsPBMsg::release_imagelocation() {
  // @@protoc_insertion_point(field_release:vision_messages.ImageProcTargetInfoResultsPBMsg.ImageLocation)
  clear_has_imagelocation();
  ::vision_messages::ImageLocationPBMsg* temp = imagelocation_;
  imagelocation_ = NULL;
  return temp;
}
inline void ImageProcTargetInfoResultsPBMsg::set_allocated_imagelocation(::vision_messages::ImageLocationPBMsg* imagelocation) {
  delete imagelocation_;
  imagelocation_ = imagelocation;
  if (imagelocation) {
    set_has_imagelocation();
  } else {
    clear_has_imagelocation();
  }
  // @@protoc_insertion_point(field_set_allocated:vision_messages.ImageProcTargetInfoResultsPBMsg.ImageLocation)
}

// optional .vision_messages.VehicleInertialStatePBMsg VehicleInertialStates = 2;
inline bool ImageProcTargetInfoResultsPBMsg::has_vehicleinertialstates() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImageProcTargetInfoResultsPBMsg::set_has_vehicleinertialstates() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImageProcTargetInfoResultsPBMsg::clear_has_vehicleinertialstates() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImageProcTargetInfoResultsPBMsg::clear_vehicleinertialstates() {
  if (vehicleinertialstates_ != NULL) vehicleinertialstates_->::vision_messages::VehicleInertialStatePBMsg::Clear();
  clear_has_vehicleinertialstates();
}
inline const ::vision_messages::VehicleInertialStatePBMsg& ImageProcTargetInfoResultsPBMsg::vehicleinertialstates() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageProcTargetInfoResultsPBMsg.VehicleInertialStates)
  return vehicleinertialstates_ != NULL ? *vehicleinertialstates_ : *default_instance_->vehicleinertialstates_;
}
inline ::vision_messages::VehicleInertialStatePBMsg* ImageProcTargetInfoResultsPBMsg::mutable_vehicleinertialstates() {
  set_has_vehicleinertialstates();
  if (vehicleinertialstates_ == NULL) {
    vehicleinertialstates_ = new ::vision_messages::VehicleInertialStatePBMsg;
  }
  // @@protoc_insertion_point(field_mutable:vision_messages.ImageProcTargetInfoResultsPBMsg.VehicleInertialStates)
  return vehicleinertialstates_;
}
inline ::vision_messages::VehicleInertialStatePBMsg* ImageProcTargetInfoResultsPBMsg::release_vehicleinertialstates() {
  // @@protoc_insertion_point(field_release:vision_messages.ImageProcTargetInfoResultsPBMsg.VehicleInertialStates)
  clear_has_vehicleinertialstates();
  ::vision_messages::VehicleInertialStatePBMsg* temp = vehicleinertialstates_;
  vehicleinertialstates_ = NULL;
  return temp;
}
inline void ImageProcTargetInfoResultsPBMsg::set_allocated_vehicleinertialstates(::vision_messages::VehicleInertialStatePBMsg* vehicleinertialstates) {
  delete vehicleinertialstates_;
  vehicleinertialstates_ = vehicleinertialstates;
  if (vehicleinertialstates) {
    set_has_vehicleinertialstates();
  } else {
    clear_has_vehicleinertialstates();
  }
  // @@protoc_insertion_point(field_set_allocated:vision_messages.ImageProcTargetInfoResultsPBMsg.VehicleInertialStates)
}

// repeated .vision_messages.GroundTargetLocationPBMsg TargetLocations = 3;
inline int ImageProcTargetInfoResultsPBMsg::targetlocations_size() const {
  return targetlocations_.size();
}
inline void ImageProcTargetInfoResultsPBMsg::clear_targetlocations() {
  targetlocations_.Clear();
}
inline const ::vision_messages::GroundTargetLocationPBMsg& ImageProcTargetInfoResultsPBMsg::targetlocations(int index) const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageProcTargetInfoResultsPBMsg.TargetLocations)
  return targetlocations_.Get(index);
}
inline ::vision_messages::GroundTargetLocationPBMsg* ImageProcTargetInfoResultsPBMsg::mutable_targetlocations(int index) {
  // @@protoc_insertion_point(field_mutable:vision_messages.ImageProcTargetInfoResultsPBMsg.TargetLocations)
  return targetlocations_.Mutable(index);
}
inline ::vision_messages::GroundTargetLocationPBMsg* ImageProcTargetInfoResultsPBMsg::add_targetlocations() {
  // @@protoc_insertion_point(field_add:vision_messages.ImageProcTargetInfoResultsPBMsg.TargetLocations)
  return targetlocations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::vision_messages::GroundTargetLocationPBMsg >*
ImageProcTargetInfoResultsPBMsg::mutable_targetlocations() {
  // @@protoc_insertion_point(field_mutable_list:vision_messages.ImageProcTargetInfoResultsPBMsg.TargetLocations)
  return &targetlocations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::vision_messages::GroundTargetLocationPBMsg >&
ImageProcTargetInfoResultsPBMsg::targetlocations() const {
  // @@protoc_insertion_point(field_list:vision_messages.ImageProcTargetInfoResultsPBMsg.TargetLocations)
  return targetlocations_;
}

// -------------------------------------------------------------------

// TargetParametersPBMsg

// optional uint32 TargetTypeCode = 1;
inline bool TargetParametersPBMsg::has_targettypecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TargetParametersPBMsg::set_has_targettypecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TargetParametersPBMsg::clear_has_targettypecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TargetParametersPBMsg::clear_targettypecode() {
  targettypecode_ = 0u;
  clear_has_targettypecode();
}
inline ::google::protobuf::uint32 TargetParametersPBMsg::targettypecode() const {
  // @@protoc_insertion_point(field_get:vision_messages.TargetParametersPBMsg.TargetTypeCode)
  return targettypecode_;
}
inline void TargetParametersPBMsg::set_targettypecode(::google::protobuf::uint32 value) {
  set_has_targettypecode();
  targettypecode_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TargetParametersPBMsg.TargetTypeCode)
}

// optional bool IsTaticalTarget = 2;
inline bool TargetParametersPBMsg::has_istaticaltarget() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TargetParametersPBMsg::set_has_istaticaltarget() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TargetParametersPBMsg::clear_has_istaticaltarget() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TargetParametersPBMsg::clear_istaticaltarget() {
  istaticaltarget_ = false;
  clear_has_istaticaltarget();
}
inline bool TargetParametersPBMsg::istaticaltarget() const {
  // @@protoc_insertion_point(field_get:vision_messages.TargetParametersPBMsg.IsTaticalTarget)
  return istaticaltarget_;
}
inline void TargetParametersPBMsg::set_istaticaltarget(bool value) {
  set_has_istaticaltarget();
  istaticaltarget_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TargetParametersPBMsg.IsTaticalTarget)
}

// optional double TargetSizeOrWidth = 3;
inline bool TargetParametersPBMsg::has_targetsizeorwidth() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TargetParametersPBMsg::set_has_targetsizeorwidth() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TargetParametersPBMsg::clear_has_targetsizeorwidth() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TargetParametersPBMsg::clear_targetsizeorwidth() {
  targetsizeorwidth_ = 0;
  clear_has_targetsizeorwidth();
}
inline double TargetParametersPBMsg::targetsizeorwidth() const {
  // @@protoc_insertion_point(field_get:vision_messages.TargetParametersPBMsg.TargetSizeOrWidth)
  return targetsizeorwidth_;
}
inline void TargetParametersPBMsg::set_targetsizeorwidth(double value) {
  set_has_targetsizeorwidth();
  targetsizeorwidth_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TargetParametersPBMsg.TargetSizeOrWidth)
}

// optional double TargetPerimeterOrLenght = 4;
inline bool TargetParametersPBMsg::has_targetperimeterorlenght() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TargetParametersPBMsg::set_has_targetperimeterorlenght() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TargetParametersPBMsg::clear_has_targetperimeterorlenght() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TargetParametersPBMsg::clear_targetperimeterorlenght() {
  targetperimeterorlenght_ = 0;
  clear_has_targetperimeterorlenght();
}
inline double TargetParametersPBMsg::targetperimeterorlenght() const {
  // @@protoc_insertion_point(field_get:vision_messages.TargetParametersPBMsg.TargetPerimeterOrLenght)
  return targetperimeterorlenght_;
}
inline void TargetParametersPBMsg::set_targetperimeterorlenght(double value) {
  set_has_targetperimeterorlenght();
  targetperimeterorlenght_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TargetParametersPBMsg.TargetPerimeterOrLenght)
}

// optional double TargetIRHeatGradient = 5;
inline bool TargetParametersPBMsg::has_targetirheatgradient() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TargetParametersPBMsg::set_has_targetirheatgradient() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TargetParametersPBMsg::clear_has_targetirheatgradient() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TargetParametersPBMsg::clear_targetirheatgradient() {
  targetirheatgradient_ = 0;
  clear_has_targetirheatgradient();
}
inline double TargetParametersPBMsg::targetirheatgradient() const {
  // @@protoc_insertion_point(field_get:vision_messages.TargetParametersPBMsg.TargetIRHeatGradient)
  return targetirheatgradient_;
}
inline void TargetParametersPBMsg::set_targetirheatgradient(double value) {
  set_has_targetirheatgradient();
  targetirheatgradient_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TargetParametersPBMsg.TargetIRHeatGradient)
}

// optional double TargetIRSize = 6;
inline bool TargetParametersPBMsg::has_targetirsize() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TargetParametersPBMsg::set_has_targetirsize() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TargetParametersPBMsg::clear_has_targetirsize() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TargetParametersPBMsg::clear_targetirsize() {
  targetirsize_ = 0;
  clear_has_targetirsize();
}
inline double TargetParametersPBMsg::targetirsize() const {
  // @@protoc_insertion_point(field_get:vision_messages.TargetParametersPBMsg.TargetIRSize)
  return targetirsize_;
}
inline void TargetParametersPBMsg::set_targetirsize(double value) {
  set_has_targetirsize();
  targetirsize_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TargetParametersPBMsg.TargetIRSize)
}

// optional uint32 TargetRGBColorCode = 7;
inline bool TargetParametersPBMsg::has_targetrgbcolorcode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TargetParametersPBMsg::set_has_targetrgbcolorcode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TargetParametersPBMsg::clear_has_targetrgbcolorcode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TargetParametersPBMsg::clear_targetrgbcolorcode() {
  targetrgbcolorcode_ = 0u;
  clear_has_targetrgbcolorcode();
}
inline ::google::protobuf::uint32 TargetParametersPBMsg::targetrgbcolorcode() const {
  // @@protoc_insertion_point(field_get:vision_messages.TargetParametersPBMsg.TargetRGBColorCode)
  return targetrgbcolorcode_;
}
inline void TargetParametersPBMsg::set_targetrgbcolorcode(::google::protobuf::uint32 value) {
  set_has_targetrgbcolorcode();
  targetrgbcolorcode_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TargetParametersPBMsg.TargetRGBColorCode)
}

// -------------------------------------------------------------------

// TimeSyncPBMsg

// optional double TimeSyncOffsetSeconds = 1;
inline bool TimeSyncPBMsg::has_timesyncoffsetseconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeSyncPBMsg::set_has_timesyncoffsetseconds() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimeSyncPBMsg::clear_has_timesyncoffsetseconds() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimeSyncPBMsg::clear_timesyncoffsetseconds() {
  timesyncoffsetseconds_ = 0;
  clear_has_timesyncoffsetseconds();
}
inline double TimeSyncPBMsg::timesyncoffsetseconds() const {
  // @@protoc_insertion_point(field_get:vision_messages.TimeSyncPBMsg.TimeSyncOffsetSeconds)
  return timesyncoffsetseconds_;
}
inline void TimeSyncPBMsg::set_timesyncoffsetseconds(double value) {
  set_has_timesyncoffsetseconds();
  timesyncoffsetseconds_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TimeSyncPBMsg.TimeSyncOffsetSeconds)
}

// -------------------------------------------------------------------

// GeoCoordinateSystemSetupPBMsg

// optional .vision_messages.GeoCoordinateSystemSetupPBMsg.GeoCoordinateSystemConversionType_e GeoCoordinateSystemConversionType = 1;
inline bool GeoCoordinateSystemSetupPBMsg::has_geocoordinatesystemconversiontype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GeoCoordinateSystemSetupPBMsg::set_has_geocoordinatesystemconversiontype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GeoCoordinateSystemSetupPBMsg::clear_has_geocoordinatesystemconversiontype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GeoCoordinateSystemSetupPBMsg::clear_geocoordinatesystemconversiontype() {
  geocoordinatesystemconversiontype_ = 0;
  clear_has_geocoordinatesystemconversiontype();
}
inline ::vision_messages::GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e GeoCoordinateSystemSetupPBMsg::geocoordinatesystemconversiontype() const {
  // @@protoc_insertion_point(field_get:vision_messages.GeoCoordinateSystemSetupPBMsg.GeoCoordinateSystemConversionType)
  return static_cast< ::vision_messages::GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e >(geocoordinatesystemconversiontype_);
}
inline void GeoCoordinateSystemSetupPBMsg::set_geocoordinatesystemconversiontype(::vision_messages::GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e value) {
  assert(::vision_messages::GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_IsValid(value));
  set_has_geocoordinatesystemconversiontype();
  geocoordinatesystemconversiontype_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GeoCoordinateSystemSetupPBMsg.GeoCoordinateSystemConversionType)
}

// optional double CenterLatitudeDegrees = 2;
inline bool GeoCoordinateSystemSetupPBMsg::has_centerlatitudedegrees() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GeoCoordinateSystemSetupPBMsg::set_has_centerlatitudedegrees() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GeoCoordinateSystemSetupPBMsg::clear_has_centerlatitudedegrees() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GeoCoordinateSystemSetupPBMsg::clear_centerlatitudedegrees() {
  centerlatitudedegrees_ = 0;
  clear_has_centerlatitudedegrees();
}
inline double GeoCoordinateSystemSetupPBMsg::centerlatitudedegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.GeoCoordinateSystemSetupPBMsg.CenterLatitudeDegrees)
  return centerlatitudedegrees_;
}
inline void GeoCoordinateSystemSetupPBMsg::set_centerlatitudedegrees(double value) {
  set_has_centerlatitudedegrees();
  centerlatitudedegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GeoCoordinateSystemSetupPBMsg.CenterLatitudeDegrees)
}

// optional double CenterLongitudeDegrees = 3;
inline bool GeoCoordinateSystemSetupPBMsg::has_centerlongitudedegrees() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GeoCoordinateSystemSetupPBMsg::set_has_centerlongitudedegrees() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GeoCoordinateSystemSetupPBMsg::clear_has_centerlongitudedegrees() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GeoCoordinateSystemSetupPBMsg::clear_centerlongitudedegrees() {
  centerlongitudedegrees_ = 0;
  clear_has_centerlongitudedegrees();
}
inline double GeoCoordinateSystemSetupPBMsg::centerlongitudedegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.GeoCoordinateSystemSetupPBMsg.CenterLongitudeDegrees)
  return centerlongitudedegrees_;
}
inline void GeoCoordinateSystemSetupPBMsg::set_centerlongitudedegrees(double value) {
  set_has_centerlongitudedegrees();
  centerlongitudedegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GeoCoordinateSystemSetupPBMsg.CenterLongitudeDegrees)
}

// optional double GroundAltitudeMSL = 4;
inline bool GeoCoordinateSystemSetupPBMsg::has_groundaltitudemsl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GeoCoordinateSystemSetupPBMsg::set_has_groundaltitudemsl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GeoCoordinateSystemSetupPBMsg::clear_has_groundaltitudemsl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GeoCoordinateSystemSetupPBMsg::clear_groundaltitudemsl() {
  groundaltitudemsl_ = 0;
  clear_has_groundaltitudemsl();
}
inline double GeoCoordinateSystemSetupPBMsg::groundaltitudemsl() const {
  // @@protoc_insertion_point(field_get:vision_messages.GeoCoordinateSystemSetupPBMsg.GroundAltitudeMSL)
  return groundaltitudemsl_;
}
inline void GeoCoordinateSystemSetupPBMsg::set_groundaltitudemsl(double value) {
  set_has_groundaltitudemsl();
  groundaltitudemsl_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GeoCoordinateSystemSetupPBMsg.GroundAltitudeMSL)
}

// optional double DeltaLatitudeDegrees = 5;
inline bool GeoCoordinateSystemSetupPBMsg::has_deltalatitudedegrees() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GeoCoordinateSystemSetupPBMsg::set_has_deltalatitudedegrees() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GeoCoordinateSystemSetupPBMsg::clear_has_deltalatitudedegrees() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GeoCoordinateSystemSetupPBMsg::clear_deltalatitudedegrees() {
  deltalatitudedegrees_ = 0;
  clear_has_deltalatitudedegrees();
}
inline double GeoCoordinateSystemSetupPBMsg::deltalatitudedegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.GeoCoordinateSystemSetupPBMsg.DeltaLatitudeDegrees)
  return deltalatitudedegrees_;
}
inline void GeoCoordinateSystemSetupPBMsg::set_deltalatitudedegrees(double value) {
  set_has_deltalatitudedegrees();
  deltalatitudedegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GeoCoordinateSystemSetupPBMsg.DeltaLatitudeDegrees)
}

// optional double DeltaLongitudeDegrees = 6;
inline bool GeoCoordinateSystemSetupPBMsg::has_deltalongitudedegrees() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GeoCoordinateSystemSetupPBMsg::set_has_deltalongitudedegrees() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GeoCoordinateSystemSetupPBMsg::clear_has_deltalongitudedegrees() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GeoCoordinateSystemSetupPBMsg::clear_deltalongitudedegrees() {
  deltalongitudedegrees_ = 0;
  clear_has_deltalongitudedegrees();
}
inline double GeoCoordinateSystemSetupPBMsg::deltalongitudedegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.GeoCoordinateSystemSetupPBMsg.DeltaLongitudeDegrees)
  return deltalongitudedegrees_;
}
inline void GeoCoordinateSystemSetupPBMsg::set_deltalongitudedegrees(double value) {
  set_has_deltalongitudedegrees();
  deltalongitudedegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GeoCoordinateSystemSetupPBMsg.DeltaLongitudeDegrees)
}

// -------------------------------------------------------------------

// LatLonXYConversionPBMsg

// optional bool LatLonToXYConversion = 1;
inline bool LatLonXYConversionPBMsg::has_latlontoxyconversion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LatLonXYConversionPBMsg::set_has_latlontoxyconversion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LatLonXYConversionPBMsg::clear_has_latlontoxyconversion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LatLonXYConversionPBMsg::clear_latlontoxyconversion() {
  latlontoxyconversion_ = false;
  clear_has_latlontoxyconversion();
}
inline bool LatLonXYConversionPBMsg::latlontoxyconversion() const {
  // @@protoc_insertion_point(field_get:vision_messages.LatLonXYConversionPBMsg.LatLonToXYConversion)
  return latlontoxyconversion_;
}
inline void LatLonXYConversionPBMsg::set_latlontoxyconversion(bool value) {
  set_has_latlontoxyconversion();
  latlontoxyconversion_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.LatLonXYConversionPBMsg.LatLonToXYConversion)
}

// optional double LatitudeDegrees = 2;
inline bool LatLonXYConversionPBMsg::has_latitudedegrees() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LatLonXYConversionPBMsg::set_has_latitudedegrees() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LatLonXYConversionPBMsg::clear_has_latitudedegrees() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LatLonXYConversionPBMsg::clear_latitudedegrees() {
  latitudedegrees_ = 0;
  clear_has_latitudedegrees();
}
inline double LatLonXYConversionPBMsg::latitudedegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.LatLonXYConversionPBMsg.LatitudeDegrees)
  return latitudedegrees_;
}
inline void LatLonXYConversionPBMsg::set_latitudedegrees(double value) {
  set_has_latitudedegrees();
  latitudedegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.LatLonXYConversionPBMsg.LatitudeDegrees)
}

// optional double LongitudeDegrees = 3;
inline bool LatLonXYConversionPBMsg::has_longitudedegrees() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LatLonXYConversionPBMsg::set_has_longitudedegrees() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LatLonXYConversionPBMsg::clear_has_longitudedegrees() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LatLonXYConversionPBMsg::clear_longitudedegrees() {
  longitudedegrees_ = 0;
  clear_has_longitudedegrees();
}
inline double LatLonXYConversionPBMsg::longitudedegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.LatLonXYConversionPBMsg.LongitudeDegrees)
  return longitudedegrees_;
}
inline void LatLonXYConversionPBMsg::set_longitudedegrees(double value) {
  set_has_longitudedegrees();
  longitudedegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.LatLonXYConversionPBMsg.LongitudeDegrees)
}

// optional double X_PosMeters = 4;
inline bool LatLonXYConversionPBMsg::has_x_posmeters() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LatLonXYConversionPBMsg::set_has_x_posmeters() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LatLonXYConversionPBMsg::clear_has_x_posmeters() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LatLonXYConversionPBMsg::clear_x_posmeters() {
  x_posmeters_ = 0;
  clear_has_x_posmeters();
}
inline double LatLonXYConversionPBMsg::x_posmeters() const {
  // @@protoc_insertion_point(field_get:vision_messages.LatLonXYConversionPBMsg.X_PosMeters)
  return x_posmeters_;
}
inline void LatLonXYConversionPBMsg::set_x_posmeters(double value) {
  set_has_x_posmeters();
  x_posmeters_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.LatLonXYConversionPBMsg.X_PosMeters)
}

// optional double Y_PosMeters = 5;
inline bool LatLonXYConversionPBMsg::has_y_posmeters() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LatLonXYConversionPBMsg::set_has_y_posmeters() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LatLonXYConversionPBMsg::clear_has_y_posmeters() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LatLonXYConversionPBMsg::clear_y_posmeters() {
  y_posmeters_ = 0;
  clear_has_y_posmeters();
}
inline double LatLonXYConversionPBMsg::y_posmeters() const {
  // @@protoc_insertion_point(field_get:vision_messages.LatLonXYConversionPBMsg.Y_PosMeters)
  return y_posmeters_;
}
inline void LatLonXYConversionPBMsg::set_y_posmeters(double value) {
  set_has_y_posmeters();
  y_posmeters_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.LatLonXYConversionPBMsg.Y_PosMeters)
}

// -------------------------------------------------------------------

// ImageCaptureControlPBMsg

// optional bool ImageCaptureEnabled = 1;
inline bool ImageCaptureControlPBMsg::has_imagecaptureenabled() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageCaptureControlPBMsg::set_has_imagecaptureenabled() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImageCaptureControlPBMsg::clear_has_imagecaptureenabled() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImageCaptureControlPBMsg::clear_imagecaptureenabled() {
  imagecaptureenabled_ = false;
  clear_has_imagecaptureenabled();
}
inline bool ImageCaptureControlPBMsg::imagecaptureenabled() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureControlPBMsg.ImageCaptureEnabled)
  return imagecaptureenabled_;
}
inline void ImageCaptureControlPBMsg::set_imagecaptureenabled(bool value) {
  set_has_imagecaptureenabled();
  imagecaptureenabled_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureControlPBMsg.ImageCaptureEnabled)
}

// optional uint32 NumberOfImagesToCapture = 2;
inline bool ImageCaptureControlPBMsg::has_numberofimagestocapture() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImageCaptureControlPBMsg::set_has_numberofimagestocapture() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImageCaptureControlPBMsg::clear_has_numberofimagestocapture() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImageCaptureControlPBMsg::clear_numberofimagestocapture() {
  numberofimagestocapture_ = 0u;
  clear_has_numberofimagestocapture();
}
inline ::google::protobuf::uint32 ImageCaptureControlPBMsg::numberofimagestocapture() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureControlPBMsg.NumberOfImagesToCapture)
  return numberofimagestocapture_;
}
inline void ImageCaptureControlPBMsg::set_numberofimagestocapture(::google::protobuf::uint32 value) {
  set_has_numberofimagestocapture();
  numberofimagestocapture_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureControlPBMsg.NumberOfImagesToCapture)
}

// optional double DesiredFramesPerSecond = 3;
inline bool ImageCaptureControlPBMsg::has_desiredframespersecond() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ImageCaptureControlPBMsg::set_has_desiredframespersecond() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ImageCaptureControlPBMsg::clear_has_desiredframespersecond() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ImageCaptureControlPBMsg::clear_desiredframespersecond() {
  desiredframespersecond_ = 0;
  clear_has_desiredframespersecond();
}
inline double ImageCaptureControlPBMsg::desiredframespersecond() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureControlPBMsg.DesiredFramesPerSecond)
  return desiredframespersecond_;
}
inline void ImageCaptureControlPBMsg::set_desiredframespersecond(double value) {
  set_has_desiredframespersecond();
  desiredframespersecond_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureControlPBMsg.DesiredFramesPerSecond)
}

// optional uint32 DesiredImageWidth = 4;
inline bool ImageCaptureControlPBMsg::has_desiredimagewidth() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ImageCaptureControlPBMsg::set_has_desiredimagewidth() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ImageCaptureControlPBMsg::clear_has_desiredimagewidth() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ImageCaptureControlPBMsg::clear_desiredimagewidth() {
  desiredimagewidth_ = 0u;
  clear_has_desiredimagewidth();
}
inline ::google::protobuf::uint32 ImageCaptureControlPBMsg::desiredimagewidth() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureControlPBMsg.DesiredImageWidth)
  return desiredimagewidth_;
}
inline void ImageCaptureControlPBMsg::set_desiredimagewidth(::google::protobuf::uint32 value) {
  set_has_desiredimagewidth();
  desiredimagewidth_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureControlPBMsg.DesiredImageWidth)
}

// optional uint32 DesiredImageHeight = 5;
inline bool ImageCaptureControlPBMsg::has_desiredimageheight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ImageCaptureControlPBMsg::set_has_desiredimageheight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ImageCaptureControlPBMsg::clear_has_desiredimageheight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ImageCaptureControlPBMsg::clear_desiredimageheight() {
  desiredimageheight_ = 0u;
  clear_has_desiredimageheight();
}
inline ::google::protobuf::uint32 ImageCaptureControlPBMsg::desiredimageheight() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureControlPBMsg.DesiredImageHeight)
  return desiredimageheight_;
}
inline void ImageCaptureControlPBMsg::set_desiredimageheight(::google::protobuf::uint32 value) {
  set_has_desiredimageheight();
  desiredimageheight_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureControlPBMsg.DesiredImageHeight)
}

// optional .vision_messages.ImageCaptureSource_e ImageCaptureSource = 6;
inline bool ImageCaptureControlPBMsg::has_imagecapturesource() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ImageCaptureControlPBMsg::set_has_imagecapturesource() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ImageCaptureControlPBMsg::clear_has_imagecapturesource() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ImageCaptureControlPBMsg::clear_imagecapturesource() {
  imagecapturesource_ = 0;
  clear_has_imagecapturesource();
}
inline ::vision_messages::ImageCaptureSource_e ImageCaptureControlPBMsg::imagecapturesource() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSource)
  return static_cast< ::vision_messages::ImageCaptureSource_e >(imagecapturesource_);
}
inline void ImageCaptureControlPBMsg::set_imagecapturesource(::vision_messages::ImageCaptureSource_e value) {
  assert(::vision_messages::ImageCaptureSource_e_IsValid(value));
  set_has_imagecapturesource();
  imagecapturesource_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSource)
}

// optional .vision_messages.CPImageCaptureFormat_e ImageCaptureFormat = 7;
inline bool ImageCaptureControlPBMsg::has_imagecaptureformat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ImageCaptureControlPBMsg::set_has_imagecaptureformat() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ImageCaptureControlPBMsg::clear_has_imagecaptureformat() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ImageCaptureControlPBMsg::clear_imagecaptureformat() {
  imagecaptureformat_ = 0;
  clear_has_imagecaptureformat();
}
inline ::vision_messages::CPImageCaptureFormat_e ImageCaptureControlPBMsg::imagecaptureformat() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureControlPBMsg.ImageCaptureFormat)
  return static_cast< ::vision_messages::CPImageCaptureFormat_e >(imagecaptureformat_);
}
inline void ImageCaptureControlPBMsg::set_imagecaptureformat(::vision_messages::CPImageCaptureFormat_e value) {
  assert(::vision_messages::CPImageCaptureFormat_e_IsValid(value));
  set_has_imagecaptureformat();
  imagecaptureformat_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureControlPBMsg.ImageCaptureFormat)
}

// optional string ImageCaptureSourceConfigPri = 8;
inline bool ImageCaptureControlPBMsg::has_imagecapturesourceconfigpri() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ImageCaptureControlPBMsg::set_has_imagecapturesourceconfigpri() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ImageCaptureControlPBMsg::clear_has_imagecapturesourceconfigpri() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ImageCaptureControlPBMsg::clear_imagecapturesourceconfigpri() {
  imagecapturesourceconfigpri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imagecapturesourceconfigpri();
}
inline const ::std::string& ImageCaptureControlPBMsg::imagecapturesourceconfigpri() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSourceConfigPri)
  return imagecapturesourceconfigpri_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImageCaptureControlPBMsg::set_imagecapturesourceconfigpri(const ::std::string& value) {
  set_has_imagecapturesourceconfigpri();
  imagecapturesourceconfigpri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSourceConfigPri)
}
inline void ImageCaptureControlPBMsg::set_imagecapturesourceconfigpri(const char* value) {
  set_has_imagecapturesourceconfigpri();
  imagecapturesourceconfigpri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSourceConfigPri)
}
inline void ImageCaptureControlPBMsg::set_imagecapturesourceconfigpri(const char* value, size_t size) {
  set_has_imagecapturesourceconfigpri();
  imagecapturesourceconfigpri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSourceConfigPri)
}
inline ::std::string* ImageCaptureControlPBMsg::mutable_imagecapturesourceconfigpri() {
  set_has_imagecapturesourceconfigpri();
  // @@protoc_insertion_point(field_mutable:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSourceConfigPri)
  return imagecapturesourceconfigpri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImageCaptureControlPBMsg::release_imagecapturesourceconfigpri() {
  // @@protoc_insertion_point(field_release:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSourceConfigPri)
  clear_has_imagecapturesourceconfigpri();
  return imagecapturesourceconfigpri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImageCaptureControlPBMsg::set_allocated_imagecapturesourceconfigpri(::std::string* imagecapturesourceconfigpri) {
  if (imagecapturesourceconfigpri != NULL) {
    set_has_imagecapturesourceconfigpri();
  } else {
    clear_has_imagecapturesourceconfigpri();
  }
  imagecapturesourceconfigpri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imagecapturesourceconfigpri);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSourceConfigPri)
}

// optional string ImageCaptureSourceConfigSec = 9;
inline bool ImageCaptureControlPBMsg::has_imagecapturesourceconfigsec() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ImageCaptureControlPBMsg::set_has_imagecapturesourceconfigsec() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ImageCaptureControlPBMsg::clear_has_imagecapturesourceconfigsec() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ImageCaptureControlPBMsg::clear_imagecapturesourceconfigsec() {
  imagecapturesourceconfigsec_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imagecapturesourceconfigsec();
}
inline const ::std::string& ImageCaptureControlPBMsg::imagecapturesourceconfigsec() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSourceConfigSec)
  return imagecapturesourceconfigsec_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImageCaptureControlPBMsg::set_imagecapturesourceconfigsec(const ::std::string& value) {
  set_has_imagecapturesourceconfigsec();
  imagecapturesourceconfigsec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSourceConfigSec)
}
inline void ImageCaptureControlPBMsg::set_imagecapturesourceconfigsec(const char* value) {
  set_has_imagecapturesourceconfigsec();
  imagecapturesourceconfigsec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSourceConfigSec)
}
inline void ImageCaptureControlPBMsg::set_imagecapturesourceconfigsec(const char* value, size_t size) {
  set_has_imagecapturesourceconfigsec();
  imagecapturesourceconfigsec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSourceConfigSec)
}
inline ::std::string* ImageCaptureControlPBMsg::mutable_imagecapturesourceconfigsec() {
  set_has_imagecapturesourceconfigsec();
  // @@protoc_insertion_point(field_mutable:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSourceConfigSec)
  return imagecapturesourceconfigsec_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImageCaptureControlPBMsg::release_imagecapturesourceconfigsec() {
  // @@protoc_insertion_point(field_release:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSourceConfigSec)
  clear_has_imagecapturesourceconfigsec();
  return imagecapturesourceconfigsec_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImageCaptureControlPBMsg::set_allocated_imagecapturesourceconfigsec(::std::string* imagecapturesourceconfigsec) {
  if (imagecapturesourceconfigsec != NULL) {
    set_has_imagecapturesourceconfigsec();
  } else {
    clear_has_imagecapturesourceconfigsec();
  }
  imagecapturesourceconfigsec_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imagecapturesourceconfigsec);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.ImageCaptureControlPBMsg.ImageCaptureSourceConfigSec)
}

// optional bool ImageSourceLoopAround = 10;
inline bool ImageCaptureControlPBMsg::has_imagesourcelooparound() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ImageCaptureControlPBMsg::set_has_imagesourcelooparound() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ImageCaptureControlPBMsg::clear_has_imagesourcelooparound() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ImageCaptureControlPBMsg::clear_imagesourcelooparound() {
  imagesourcelooparound_ = false;
  clear_has_imagesourcelooparound();
}
inline bool ImageCaptureControlPBMsg::imagesourcelooparound() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureControlPBMsg.ImageSourceLoopAround)
  return imagesourcelooparound_;
}
inline void ImageCaptureControlPBMsg::set_imagesourcelooparound(bool value) {
  set_has_imagesourcelooparound();
  imagesourcelooparound_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureControlPBMsg.ImageSourceLoopAround)
}

// optional bool AutoFocusEnable = 11;
inline bool ImageCaptureControlPBMsg::has_autofocusenable() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ImageCaptureControlPBMsg::set_has_autofocusenable() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ImageCaptureControlPBMsg::clear_has_autofocusenable() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ImageCaptureControlPBMsg::clear_autofocusenable() {
  autofocusenable_ = false;
  clear_has_autofocusenable();
}
inline bool ImageCaptureControlPBMsg::autofocusenable() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureControlPBMsg.AutoFocusEnable)
  return autofocusenable_;
}
inline void ImageCaptureControlPBMsg::set_autofocusenable(bool value) {
  set_has_autofocusenable();
  autofocusenable_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureControlPBMsg.AutoFocusEnable)
}

// -------------------------------------------------------------------

// CameraParametersSetupPBMsg

// optional .vision_messages.CPImageCaptureFormat_e ImageCaptureFormat = 1;
inline bool CameraParametersSetupPBMsg::has_imagecaptureformat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_imagecaptureformat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CameraParametersSetupPBMsg::clear_has_imagecaptureformat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CameraParametersSetupPBMsg::clear_imagecaptureformat() {
  imagecaptureformat_ = 0;
  clear_has_imagecaptureformat();
}
inline ::vision_messages::CPImageCaptureFormat_e CameraParametersSetupPBMsg::imagecaptureformat() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.ImageCaptureFormat)
  return static_cast< ::vision_messages::CPImageCaptureFormat_e >(imagecaptureformat_);
}
inline void CameraParametersSetupPBMsg::set_imagecaptureformat(::vision_messages::CPImageCaptureFormat_e value) {
  assert(::vision_messages::CPImageCaptureFormat_e_IsValid(value));
  set_has_imagecaptureformat();
  imagecaptureformat_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.ImageCaptureFormat)
}

// optional uint32 Mode = 2;
inline bool CameraParametersSetupPBMsg::has_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CameraParametersSetupPBMsg::clear_has_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CameraParametersSetupPBMsg::clear_mode() {
  mode_ = 0u;
  clear_has_mode();
}
inline ::google::protobuf::uint32 CameraParametersSetupPBMsg::mode() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.Mode)
  return mode_;
}
inline void CameraParametersSetupPBMsg::set_mode(::google::protobuf::uint32 value) {
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.Mode)
}

// optional uint32 FrameWidth = 3;
inline bool CameraParametersSetupPBMsg::has_framewidth() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_framewidth() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CameraParametersSetupPBMsg::clear_has_framewidth() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CameraParametersSetupPBMsg::clear_framewidth() {
  framewidth_ = 0u;
  clear_has_framewidth();
}
inline ::google::protobuf::uint32 CameraParametersSetupPBMsg::framewidth() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.FrameWidth)
  return framewidth_;
}
inline void CameraParametersSetupPBMsg::set_framewidth(::google::protobuf::uint32 value) {
  set_has_framewidth();
  framewidth_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.FrameWidth)
}

// optional uint32 FrameHeight = 4;
inline bool CameraParametersSetupPBMsg::has_frameheight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_frameheight() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CameraParametersSetupPBMsg::clear_has_frameheight() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CameraParametersSetupPBMsg::clear_frameheight() {
  frameheight_ = 0u;
  clear_has_frameheight();
}
inline ::google::protobuf::uint32 CameraParametersSetupPBMsg::frameheight() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.FrameHeight)
  return frameheight_;
}
inline void CameraParametersSetupPBMsg::set_frameheight(::google::protobuf::uint32 value) {
  set_has_frameheight();
  frameheight_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.FrameHeight)
}

// optional double FrameRateFPS = 5;
inline bool CameraParametersSetupPBMsg::has_frameratefps() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_frameratefps() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CameraParametersSetupPBMsg::clear_has_frameratefps() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CameraParametersSetupPBMsg::clear_frameratefps() {
  frameratefps_ = 0;
  clear_has_frameratefps();
}
inline double CameraParametersSetupPBMsg::frameratefps() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.FrameRateFPS)
  return frameratefps_;
}
inline void CameraParametersSetupPBMsg::set_frameratefps(double value) {
  set_has_frameratefps();
  frameratefps_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.FrameRateFPS)
}

// optional bool Autofocus = 6;
inline bool CameraParametersSetupPBMsg::has_autofocus() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_autofocus() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CameraParametersSetupPBMsg::clear_has_autofocus() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CameraParametersSetupPBMsg::clear_autofocus() {
  autofocus_ = false;
  clear_has_autofocus();
}
inline bool CameraParametersSetupPBMsg::autofocus() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.Autofocus)
  return autofocus_;
}
inline void CameraParametersSetupPBMsg::set_autofocus(bool value) {
  set_has_autofocus();
  autofocus_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.Autofocus)
}

// optional double FocusValue = 7;
inline bool CameraParametersSetupPBMsg::has_focusvalue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_focusvalue() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CameraParametersSetupPBMsg::clear_has_focusvalue() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CameraParametersSetupPBMsg::clear_focusvalue() {
  focusvalue_ = 0;
  clear_has_focusvalue();
}
inline double CameraParametersSetupPBMsg::focusvalue() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.FocusValue)
  return focusvalue_;
}
inline void CameraParametersSetupPBMsg::set_focusvalue(double value) {
  set_has_focusvalue();
  focusvalue_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.FocusValue)
}

// optional double Brightness = 8;
inline bool CameraParametersSetupPBMsg::has_brightness() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_brightness() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CameraParametersSetupPBMsg::clear_has_brightness() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CameraParametersSetupPBMsg::clear_brightness() {
  brightness_ = 0;
  clear_has_brightness();
}
inline double CameraParametersSetupPBMsg::brightness() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.Brightness)
  return brightness_;
}
inline void CameraParametersSetupPBMsg::set_brightness(double value) {
  set_has_brightness();
  brightness_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.Brightness)
}

// optional double Contrast = 9;
inline bool CameraParametersSetupPBMsg::has_contrast() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_contrast() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CameraParametersSetupPBMsg::clear_has_contrast() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CameraParametersSetupPBMsg::clear_contrast() {
  contrast_ = 0;
  clear_has_contrast();
}
inline double CameraParametersSetupPBMsg::contrast() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.Contrast)
  return contrast_;
}
inline void CameraParametersSetupPBMsg::set_contrast(double value) {
  set_has_contrast();
  contrast_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.Contrast)
}

// optional double Saturation = 10;
inline bool CameraParametersSetupPBMsg::has_saturation() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_saturation() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CameraParametersSetupPBMsg::clear_has_saturation() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CameraParametersSetupPBMsg::clear_saturation() {
  saturation_ = 0;
  clear_has_saturation();
}
inline double CameraParametersSetupPBMsg::saturation() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.Saturation)
  return saturation_;
}
inline void CameraParametersSetupPBMsg::set_saturation(double value) {
  set_has_saturation();
  saturation_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.Saturation)
}

// optional double Hue = 11;
inline bool CameraParametersSetupPBMsg::has_hue() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_hue() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CameraParametersSetupPBMsg::clear_has_hue() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CameraParametersSetupPBMsg::clear_hue() {
  hue_ = 0;
  clear_has_hue();
}
inline double CameraParametersSetupPBMsg::hue() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.Hue)
  return hue_;
}
inline void CameraParametersSetupPBMsg::set_hue(double value) {
  set_has_hue();
  hue_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.Hue)
}

// optional double Gain = 12;
inline bool CameraParametersSetupPBMsg::has_gain() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_gain() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CameraParametersSetupPBMsg::clear_has_gain() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CameraParametersSetupPBMsg::clear_gain() {
  gain_ = 0;
  clear_has_gain();
}
inline double CameraParametersSetupPBMsg::gain() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.Gain)
  return gain_;
}
inline void CameraParametersSetupPBMsg::set_gain(double value) {
  set_has_gain();
  gain_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.Gain)
}

// optional double Exposure = 13;
inline bool CameraParametersSetupPBMsg::has_exposure() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_exposure() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CameraParametersSetupPBMsg::clear_has_exposure() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CameraParametersSetupPBMsg::clear_exposure() {
  exposure_ = 0;
  clear_has_exposure();
}
inline double CameraParametersSetupPBMsg::exposure() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.Exposure)
  return exposure_;
}
inline void CameraParametersSetupPBMsg::set_exposure(double value) {
  set_has_exposure();
  exposure_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.Exposure)
}

// optional double WhiteBallanceBlue = 14;
inline bool CameraParametersSetupPBMsg::has_whiteballanceblue() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_whiteballanceblue() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CameraParametersSetupPBMsg::clear_has_whiteballanceblue() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CameraParametersSetupPBMsg::clear_whiteballanceblue() {
  whiteballanceblue_ = 0;
  clear_has_whiteballanceblue();
}
inline double CameraParametersSetupPBMsg::whiteballanceblue() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.WhiteBallanceBlue)
  return whiteballanceblue_;
}
inline void CameraParametersSetupPBMsg::set_whiteballanceblue(double value) {
  set_has_whiteballanceblue();
  whiteballanceblue_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.WhiteBallanceBlue)
}

// optional double WhiteBallanceRed = 15;
inline bool CameraParametersSetupPBMsg::has_whiteballancered() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_whiteballancered() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CameraParametersSetupPBMsg::clear_has_whiteballancered() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CameraParametersSetupPBMsg::clear_whiteballancered() {
  whiteballancered_ = 0;
  clear_has_whiteballancered();
}
inline double CameraParametersSetupPBMsg::whiteballancered() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.WhiteBallanceRed)
  return whiteballancered_;
}
inline void CameraParametersSetupPBMsg::set_whiteballancered(double value) {
  set_has_whiteballancered();
  whiteballancered_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.WhiteBallanceRed)
}

// optional bool ExternalTrigger = 16;
inline bool CameraParametersSetupPBMsg::has_externaltrigger() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CameraParametersSetupPBMsg::set_has_externaltrigger() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CameraParametersSetupPBMsg::clear_has_externaltrigger() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CameraParametersSetupPBMsg::clear_externaltrigger() {
  externaltrigger_ = false;
  clear_has_externaltrigger();
}
inline bool CameraParametersSetupPBMsg::externaltrigger() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraParametersSetupPBMsg.ExternalTrigger)
  return externaltrigger_;
}
inline void CameraParametersSetupPBMsg::set_externaltrigger(bool value) {
  set_has_externaltrigger();
  externaltrigger_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraParametersSetupPBMsg.ExternalTrigger)
}

// -------------------------------------------------------------------

// StreamControlPBMsg

// optional bool StreamImagesEnabled = 1;
inline bool StreamControlPBMsg::has_streamimagesenabled() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StreamControlPBMsg::set_has_streamimagesenabled() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StreamControlPBMsg::clear_has_streamimagesenabled() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StreamControlPBMsg::clear_streamimagesenabled() {
  streamimagesenabled_ = false;
  clear_has_streamimagesenabled();
}
inline bool StreamControlPBMsg::streamimagesenabled() const {
  // @@protoc_insertion_point(field_get:vision_messages.StreamControlPBMsg.StreamImagesEnabled)
  return streamimagesenabled_;
}
inline void StreamControlPBMsg::set_streamimagesenabled(bool value) {
  set_has_streamimagesenabled();
  streamimagesenabled_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.StreamControlPBMsg.StreamImagesEnabled)
}

// optional double StreamImageFrameRate = 2;
inline bool StreamControlPBMsg::has_streamimageframerate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StreamControlPBMsg::set_has_streamimageframerate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StreamControlPBMsg::clear_has_streamimageframerate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StreamControlPBMsg::clear_streamimageframerate() {
  streamimageframerate_ = 0;
  clear_has_streamimageframerate();
}
inline double StreamControlPBMsg::streamimageframerate() const {
  // @@protoc_insertion_point(field_get:vision_messages.StreamControlPBMsg.StreamImageFrameRate)
  return streamimageframerate_;
}
inline void StreamControlPBMsg::set_streamimageframerate(double value) {
  set_has_streamimageframerate();
  streamimageframerate_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.StreamControlPBMsg.StreamImageFrameRate)
}

// optional uint32 ImageCompressionQuality = 3;
inline bool StreamControlPBMsg::has_imagecompressionquality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StreamControlPBMsg::set_has_imagecompressionquality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StreamControlPBMsg::clear_has_imagecompressionquality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StreamControlPBMsg::clear_imagecompressionquality() {
  imagecompressionquality_ = 0u;
  clear_has_imagecompressionquality();
}
inline ::google::protobuf::uint32 StreamControlPBMsg::imagecompressionquality() const {
  // @@protoc_insertion_point(field_get:vision_messages.StreamControlPBMsg.ImageCompressionQuality)
  return imagecompressionquality_;
}
inline void StreamControlPBMsg::set_imagecompressionquality(::google::protobuf::uint32 value) {
  set_has_imagecompressionquality();
  imagecompressionquality_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.StreamControlPBMsg.ImageCompressionQuality)
}

// optional double StreamImageScaleDownFactor = 4;
inline bool StreamControlPBMsg::has_streamimagescaledownfactor() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StreamControlPBMsg::set_has_streamimagescaledownfactor() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StreamControlPBMsg::clear_has_streamimagescaledownfactor() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StreamControlPBMsg::clear_streamimagescaledownfactor() {
  streamimagescaledownfactor_ = 0;
  clear_has_streamimagescaledownfactor();
}
inline double StreamControlPBMsg::streamimagescaledownfactor() const {
  // @@protoc_insertion_point(field_get:vision_messages.StreamControlPBMsg.StreamImageScaleDownFactor)
  return streamimagescaledownfactor_;
}
inline void StreamControlPBMsg::set_streamimagescaledownfactor(double value) {
  set_has_streamimagescaledownfactor();
  streamimagescaledownfactor_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.StreamControlPBMsg.StreamImageScaleDownFactor)
}

// -------------------------------------------------------------------

// ImageCaptureStatusPBMsg

// optional bool ImageCaptureEnabled = 1;
inline bool ImageCaptureStatusPBMsg::has_imagecaptureenabled() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageCaptureStatusPBMsg::set_has_imagecaptureenabled() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImageCaptureStatusPBMsg::clear_has_imagecaptureenabled() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImageCaptureStatusPBMsg::clear_imagecaptureenabled() {
  imagecaptureenabled_ = false;
  clear_has_imagecaptureenabled();
}
inline bool ImageCaptureStatusPBMsg::imagecaptureenabled() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureStatusPBMsg.ImageCaptureEnabled)
  return imagecaptureenabled_;
}
inline void ImageCaptureStatusPBMsg::set_imagecaptureenabled(bool value) {
  set_has_imagecaptureenabled();
  imagecaptureenabled_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureStatusPBMsg.ImageCaptureEnabled)
}

// optional bool ImageCaptureComplete = 2;
inline bool ImageCaptureStatusPBMsg::has_imagecapturecomplete() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImageCaptureStatusPBMsg::set_has_imagecapturecomplete() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImageCaptureStatusPBMsg::clear_has_imagecapturecomplete() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImageCaptureStatusPBMsg::clear_imagecapturecomplete() {
  imagecapturecomplete_ = false;
  clear_has_imagecapturecomplete();
}
inline bool ImageCaptureStatusPBMsg::imagecapturecomplete() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureStatusPBMsg.ImageCaptureComplete)
  return imagecapturecomplete_;
}
inline void ImageCaptureStatusPBMsg::set_imagecapturecomplete(bool value) {
  set_has_imagecapturecomplete();
  imagecapturecomplete_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureStatusPBMsg.ImageCaptureComplete)
}

// optional bool EndOfImages = 3;
inline bool ImageCaptureStatusPBMsg::has_endofimages() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ImageCaptureStatusPBMsg::set_has_endofimages() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ImageCaptureStatusPBMsg::clear_has_endofimages() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ImageCaptureStatusPBMsg::clear_endofimages() {
  endofimages_ = false;
  clear_has_endofimages();
}
inline bool ImageCaptureStatusPBMsg::endofimages() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureStatusPBMsg.EndOfImages)
  return endofimages_;
}
inline void ImageCaptureStatusPBMsg::set_endofimages(bool value) {
  set_has_endofimages();
  endofimages_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureStatusPBMsg.EndOfImages)
}

// optional uint32 TotalNumberOfImagesCaptured = 4;
inline bool ImageCaptureStatusPBMsg::has_totalnumberofimagescaptured() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ImageCaptureStatusPBMsg::set_has_totalnumberofimagescaptured() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ImageCaptureStatusPBMsg::clear_has_totalnumberofimagescaptured() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ImageCaptureStatusPBMsg::clear_totalnumberofimagescaptured() {
  totalnumberofimagescaptured_ = 0u;
  clear_has_totalnumberofimagescaptured();
}
inline ::google::protobuf::uint32 ImageCaptureStatusPBMsg::totalnumberofimagescaptured() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureStatusPBMsg.TotalNumberOfImagesCaptured)
  return totalnumberofimagescaptured_;
}
inline void ImageCaptureStatusPBMsg::set_totalnumberofimagescaptured(::google::protobuf::uint32 value) {
  set_has_totalnumberofimagescaptured();
  totalnumberofimagescaptured_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureStatusPBMsg.TotalNumberOfImagesCaptured)
}

// optional uint32 CurrentNumberOfImagesCaptured = 5;
inline bool ImageCaptureStatusPBMsg::has_currentnumberofimagescaptured() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ImageCaptureStatusPBMsg::set_has_currentnumberofimagescaptured() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ImageCaptureStatusPBMsg::clear_has_currentnumberofimagescaptured() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ImageCaptureStatusPBMsg::clear_currentnumberofimagescaptured() {
  currentnumberofimagescaptured_ = 0u;
  clear_has_currentnumberofimagescaptured();
}
inline ::google::protobuf::uint32 ImageCaptureStatusPBMsg::currentnumberofimagescaptured() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureStatusPBMsg.CurrentNumberOfImagesCaptured)
  return currentnumberofimagescaptured_;
}
inline void ImageCaptureStatusPBMsg::set_currentnumberofimagescaptured(::google::protobuf::uint32 value) {
  set_has_currentnumberofimagescaptured();
  currentnumberofimagescaptured_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureStatusPBMsg.CurrentNumberOfImagesCaptured)
}

// optional double AverageFramesPerSecond = 6;
inline bool ImageCaptureStatusPBMsg::has_averageframespersecond() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ImageCaptureStatusPBMsg::set_has_averageframespersecond() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ImageCaptureStatusPBMsg::clear_has_averageframespersecond() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ImageCaptureStatusPBMsg::clear_averageframespersecond() {
  averageframespersecond_ = 0;
  clear_has_averageframespersecond();
}
inline double ImageCaptureStatusPBMsg::averageframespersecond() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureStatusPBMsg.AverageFramesPerSecond)
  return averageframespersecond_;
}
inline void ImageCaptureStatusPBMsg::set_averageframespersecond(double value) {
  set_has_averageframespersecond();
  averageframespersecond_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureStatusPBMsg.AverageFramesPerSecond)
}

// optional .vision_messages.ImageCaptureSource_e ImageCaptureSource = 7;
inline bool ImageCaptureStatusPBMsg::has_imagecapturesource() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ImageCaptureStatusPBMsg::set_has_imagecapturesource() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ImageCaptureStatusPBMsg::clear_has_imagecapturesource() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ImageCaptureStatusPBMsg::clear_imagecapturesource() {
  imagecapturesource_ = 0;
  clear_has_imagecapturesource();
}
inline ::vision_messages::ImageCaptureSource_e ImageCaptureStatusPBMsg::imagecapturesource() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureStatusPBMsg.ImageCaptureSource)
  return static_cast< ::vision_messages::ImageCaptureSource_e >(imagecapturesource_);
}
inline void ImageCaptureStatusPBMsg::set_imagecapturesource(::vision_messages::ImageCaptureSource_e value) {
  assert(::vision_messages::ImageCaptureSource_e_IsValid(value));
  set_has_imagecapturesource();
  imagecapturesource_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureStatusPBMsg.ImageCaptureSource)
}

// optional .vision_messages.ImageCaptureError_e ErrorCode = 8;
inline bool ImageCaptureStatusPBMsg::has_errorcode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ImageCaptureStatusPBMsg::set_has_errorcode() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ImageCaptureStatusPBMsg::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ImageCaptureStatusPBMsg::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::vision_messages::ImageCaptureError_e ImageCaptureStatusPBMsg::errorcode() const {
  // @@protoc_insertion_point(field_get:vision_messages.ImageCaptureStatusPBMsg.ErrorCode)
  return static_cast< ::vision_messages::ImageCaptureError_e >(errorcode_);
}
inline void ImageCaptureStatusPBMsg::set_errorcode(::vision_messages::ImageCaptureError_e value) {
  assert(::vision_messages::ImageCaptureError_e_IsValid(value));
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ImageCaptureStatusPBMsg.ErrorCode)
}

// -------------------------------------------------------------------

// VisionProcessingControlPBMsg

// optional bool ImageCaptureEnabled = 1;
inline bool VisionProcessingControlPBMsg::has_imagecaptureenabled() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VisionProcessingControlPBMsg::set_has_imagecaptureenabled() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VisionProcessingControlPBMsg::clear_has_imagecaptureenabled() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VisionProcessingControlPBMsg::clear_imagecaptureenabled() {
  imagecaptureenabled_ = false;
  clear_has_imagecaptureenabled();
}
inline bool VisionProcessingControlPBMsg::imagecaptureenabled() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionProcessingControlPBMsg.ImageCaptureEnabled)
  return imagecaptureenabled_;
}
inline void VisionProcessingControlPBMsg::set_imagecaptureenabled(bool value) {
  set_has_imagecaptureenabled();
  imagecaptureenabled_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VisionProcessingControlPBMsg.ImageCaptureEnabled)
}

// optional sint32 NumberOfImagesToCapture = 2;
inline bool VisionProcessingControlPBMsg::has_numberofimagestocapture() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VisionProcessingControlPBMsg::set_has_numberofimagestocapture() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VisionProcessingControlPBMsg::clear_has_numberofimagestocapture() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VisionProcessingControlPBMsg::clear_numberofimagestocapture() {
  numberofimagestocapture_ = 0;
  clear_has_numberofimagestocapture();
}
inline ::google::protobuf::int32 VisionProcessingControlPBMsg::numberofimagestocapture() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionProcessingControlPBMsg.NumberOfImagesToCapture)
  return numberofimagestocapture_;
}
inline void VisionProcessingControlPBMsg::set_numberofimagestocapture(::google::protobuf::int32 value) {
  set_has_numberofimagestocapture();
  numberofimagestocapture_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VisionProcessingControlPBMsg.NumberOfImagesToCapture)
}

// optional double DesiredFramesPerSecond = 3;
inline bool VisionProcessingControlPBMsg::has_desiredframespersecond() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VisionProcessingControlPBMsg::set_has_desiredframespersecond() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VisionProcessingControlPBMsg::clear_has_desiredframespersecond() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VisionProcessingControlPBMsg::clear_desiredframespersecond() {
  desiredframespersecond_ = 0;
  clear_has_desiredframespersecond();
}
inline double VisionProcessingControlPBMsg::desiredframespersecond() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionProcessingControlPBMsg.DesiredFramesPerSecond)
  return desiredframespersecond_;
}
inline void VisionProcessingControlPBMsg::set_desiredframespersecond(double value) {
  set_has_desiredframespersecond();
  desiredframespersecond_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VisionProcessingControlPBMsg.DesiredFramesPerSecond)
}

// optional bool GPUProcessingEnabled = 4;
inline bool VisionProcessingControlPBMsg::has_gpuprocessingenabled() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VisionProcessingControlPBMsg::set_has_gpuprocessingenabled() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VisionProcessingControlPBMsg::clear_has_gpuprocessingenabled() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VisionProcessingControlPBMsg::clear_gpuprocessingenabled() {
  gpuprocessingenabled_ = false;
  clear_has_gpuprocessingenabled();
}
inline bool VisionProcessingControlPBMsg::gpuprocessingenabled() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionProcessingControlPBMsg.GPUProcessingEnabled)
  return gpuprocessingenabled_;
}
inline void VisionProcessingControlPBMsg::set_gpuprocessingenabled(bool value) {
  set_has_gpuprocessingenabled();
  gpuprocessingenabled_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VisionProcessingControlPBMsg.GPUProcessingEnabled)
}

// optional bool TargetImageProcessingEnabled = 5;
inline bool VisionProcessingControlPBMsg::has_targetimageprocessingenabled() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VisionProcessingControlPBMsg::set_has_targetimageprocessingenabled() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VisionProcessingControlPBMsg::clear_has_targetimageprocessingenabled() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VisionProcessingControlPBMsg::clear_targetimageprocessingenabled() {
  targetimageprocessingenabled_ = false;
  clear_has_targetimageprocessingenabled();
}
inline bool VisionProcessingControlPBMsg::targetimageprocessingenabled() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionProcessingControlPBMsg.TargetImageProcessingEnabled)
  return targetimageprocessingenabled_;
}
inline void VisionProcessingControlPBMsg::set_targetimageprocessingenabled(bool value) {
  set_has_targetimageprocessingenabled();
  targetimageprocessingenabled_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VisionProcessingControlPBMsg.TargetImageProcessingEnabled)
}

// optional .vision_messages.VisionProcessingControlPBMsg.VisionProcessingModeEnum VisionProcessingMode = 6;
inline bool VisionProcessingControlPBMsg::has_visionprocessingmode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VisionProcessingControlPBMsg::set_has_visionprocessingmode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VisionProcessingControlPBMsg::clear_has_visionprocessingmode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VisionProcessingControlPBMsg::clear_visionprocessingmode() {
  visionprocessingmode_ = 0;
  clear_has_visionprocessingmode();
}
inline ::vision_messages::VisionProcessingControlPBMsg_VisionProcessingModeEnum VisionProcessingControlPBMsg::visionprocessingmode() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionProcessingControlPBMsg.VisionProcessingMode)
  return static_cast< ::vision_messages::VisionProcessingControlPBMsg_VisionProcessingModeEnum >(visionprocessingmode_);
}
inline void VisionProcessingControlPBMsg::set_visionprocessingmode(::vision_messages::VisionProcessingControlPBMsg_VisionProcessingModeEnum value) {
  assert(::vision_messages::VisionProcessingControlPBMsg_VisionProcessingModeEnum_IsValid(value));
  set_has_visionprocessingmode();
  visionprocessingmode_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VisionProcessingControlPBMsg.VisionProcessingMode)
}

// optional .vision_messages.VisionProcessingControlPBMsg.TargetProcessingModeEnum TargetProcessingMode = 7;
inline bool VisionProcessingControlPBMsg::has_targetprocessingmode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VisionProcessingControlPBMsg::set_has_targetprocessingmode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void VisionProcessingControlPBMsg::clear_has_targetprocessingmode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void VisionProcessingControlPBMsg::clear_targetprocessingmode() {
  targetprocessingmode_ = 0;
  clear_has_targetprocessingmode();
}
inline ::vision_messages::VisionProcessingControlPBMsg_TargetProcessingModeEnum VisionProcessingControlPBMsg::targetprocessingmode() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionProcessingControlPBMsg.TargetProcessingMode)
  return static_cast< ::vision_messages::VisionProcessingControlPBMsg_TargetProcessingModeEnum >(targetprocessingmode_);
}
inline void VisionProcessingControlPBMsg::set_targetprocessingmode(::vision_messages::VisionProcessingControlPBMsg_TargetProcessingModeEnum value) {
  assert(::vision_messages::VisionProcessingControlPBMsg_TargetProcessingModeEnum_IsValid(value));
  set_has_targetprocessingmode();
  targetprocessingmode_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VisionProcessingControlPBMsg.TargetProcessingMode)
}

// optional bool GPSDeniedProcessingEnabled = 8;
inline bool VisionProcessingControlPBMsg::has_gpsdeniedprocessingenabled() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void VisionProcessingControlPBMsg::set_has_gpsdeniedprocessingenabled() {
  _has_bits_[0] |= 0x00000080u;
}
inline void VisionProcessingControlPBMsg::clear_has_gpsdeniedprocessingenabled() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void VisionProcessingControlPBMsg::clear_gpsdeniedprocessingenabled() {
  gpsdeniedprocessingenabled_ = false;
  clear_has_gpsdeniedprocessingenabled();
}
inline bool VisionProcessingControlPBMsg::gpsdeniedprocessingenabled() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionProcessingControlPBMsg.GPSDeniedProcessingEnabled)
  return gpsdeniedprocessingenabled_;
}
inline void VisionProcessingControlPBMsg::set_gpsdeniedprocessingenabled(bool value) {
  set_has_gpsdeniedprocessingenabled();
  gpsdeniedprocessingenabled_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VisionProcessingControlPBMsg.GPSDeniedProcessingEnabled)
}

// optional .vision_messages.VisionProcessingControlPBMsg.GPSDeniedProcessingModeEnum GPSDeniedProcessingMode = 9;
inline bool VisionProcessingControlPBMsg::has_gpsdeniedprocessingmode() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void VisionProcessingControlPBMsg::set_has_gpsdeniedprocessingmode() {
  _has_bits_[0] |= 0x00000100u;
}
inline void VisionProcessingControlPBMsg::clear_has_gpsdeniedprocessingmode() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void VisionProcessingControlPBMsg::clear_gpsdeniedprocessingmode() {
  gpsdeniedprocessingmode_ = 0;
  clear_has_gpsdeniedprocessingmode();
}
inline ::vision_messages::VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum VisionProcessingControlPBMsg::gpsdeniedprocessingmode() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionProcessingControlPBMsg.GPSDeniedProcessingMode)
  return static_cast< ::vision_messages::VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum >(gpsdeniedprocessingmode_);
}
inline void VisionProcessingControlPBMsg::set_gpsdeniedprocessingmode(::vision_messages::VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum value) {
  assert(::vision_messages::VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_IsValid(value));
  set_has_gpsdeniedprocessingmode();
  gpsdeniedprocessingmode_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VisionProcessingControlPBMsg.GPSDeniedProcessingMode)
}

// optional bool RecordImagesEnabled = 10;
inline bool VisionProcessingControlPBMsg::has_recordimagesenabled() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void VisionProcessingControlPBMsg::set_has_recordimagesenabled() {
  _has_bits_[0] |= 0x00000200u;
}
inline void VisionProcessingControlPBMsg::clear_has_recordimagesenabled() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void VisionProcessingControlPBMsg::clear_recordimagesenabled() {
  recordimagesenabled_ = false;
  clear_has_recordimagesenabled();
}
inline bool VisionProcessingControlPBMsg::recordimagesenabled() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionProcessingControlPBMsg.RecordImagesEnabled)
  return recordimagesenabled_;
}
inline void VisionProcessingControlPBMsg::set_recordimagesenabled(bool value) {
  set_has_recordimagesenabled();
  recordimagesenabled_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VisionProcessingControlPBMsg.RecordImagesEnabled)
}

// optional bool StreamImagesEnabled = 11;
inline bool VisionProcessingControlPBMsg::has_streamimagesenabled() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void VisionProcessingControlPBMsg::set_has_streamimagesenabled() {
  _has_bits_[0] |= 0x00000400u;
}
inline void VisionProcessingControlPBMsg::clear_has_streamimagesenabled() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void VisionProcessingControlPBMsg::clear_streamimagesenabled() {
  streamimagesenabled_ = false;
  clear_has_streamimagesenabled();
}
inline bool VisionProcessingControlPBMsg::streamimagesenabled() const {
  // @@protoc_insertion_point(field_get:vision_messages.VisionProcessingControlPBMsg.StreamImagesEnabled)
  return streamimagesenabled_;
}
inline void VisionProcessingControlPBMsg::set_streamimagesenabled(bool value) {
  set_has_streamimagesenabled();
  streamimagesenabled_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VisionProcessingControlPBMsg.StreamImagesEnabled)
}

// -------------------------------------------------------------------

// CameraCalControlPBMsg

// optional .vision_messages.CameraCalControlPBMsg.CameraCalibrationType_e CameraCalibrationType = 1;
inline bool CameraCalControlPBMsg::has_cameracalibrationtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CameraCalControlPBMsg::set_has_cameracalibrationtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CameraCalControlPBMsg::clear_has_cameracalibrationtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CameraCalControlPBMsg::clear_cameracalibrationtype() {
  cameracalibrationtype_ = 0;
  clear_has_cameracalibrationtype();
}
inline ::vision_messages::CameraCalControlPBMsg_CameraCalibrationType_e CameraCalControlPBMsg::cameracalibrationtype() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalControlPBMsg.CameraCalibrationType)
  return static_cast< ::vision_messages::CameraCalControlPBMsg_CameraCalibrationType_e >(cameracalibrationtype_);
}
inline void CameraCalControlPBMsg::set_cameracalibrationtype(::vision_messages::CameraCalControlPBMsg_CameraCalibrationType_e value) {
  assert(::vision_messages::CameraCalControlPBMsg_CameraCalibrationType_e_IsValid(value));
  set_has_cameracalibrationtype();
  cameracalibrationtype_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalControlPBMsg.CameraCalibrationType)
}

// optional .vision_messages.CameraCalControlPBMsg.CameraCalCmd_e CameraCalCmd = 2;
inline bool CameraCalControlPBMsg::has_cameracalcmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CameraCalControlPBMsg::set_has_cameracalcmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CameraCalControlPBMsg::clear_has_cameracalcmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CameraCalControlPBMsg::clear_cameracalcmd() {
  cameracalcmd_ = 0;
  clear_has_cameracalcmd();
}
inline ::vision_messages::CameraCalControlPBMsg_CameraCalCmd_e CameraCalControlPBMsg::cameracalcmd() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalControlPBMsg.CameraCalCmd)
  return static_cast< ::vision_messages::CameraCalControlPBMsg_CameraCalCmd_e >(cameracalcmd_);
}
inline void CameraCalControlPBMsg::set_cameracalcmd(::vision_messages::CameraCalControlPBMsg_CameraCalCmd_e value) {
  assert(::vision_messages::CameraCalControlPBMsg_CameraCalCmd_e_IsValid(value));
  set_has_cameracalcmd();
  cameracalcmd_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalControlPBMsg.CameraCalCmd)
}

// optional string CameraCalBaseFilename = 3;
inline bool CameraCalControlPBMsg::has_cameracalbasefilename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CameraCalControlPBMsg::set_has_cameracalbasefilename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CameraCalControlPBMsg::clear_has_cameracalbasefilename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CameraCalControlPBMsg::clear_cameracalbasefilename() {
  cameracalbasefilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cameracalbasefilename();
}
inline const ::std::string& CameraCalControlPBMsg::cameracalbasefilename() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalControlPBMsg.CameraCalBaseFilename)
  return cameracalbasefilename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CameraCalControlPBMsg::set_cameracalbasefilename(const ::std::string& value) {
  set_has_cameracalbasefilename();
  cameracalbasefilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalControlPBMsg.CameraCalBaseFilename)
}
inline void CameraCalControlPBMsg::set_cameracalbasefilename(const char* value) {
  set_has_cameracalbasefilename();
  cameracalbasefilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.CameraCalControlPBMsg.CameraCalBaseFilename)
}
inline void CameraCalControlPBMsg::set_cameracalbasefilename(const char* value, size_t size) {
  set_has_cameracalbasefilename();
  cameracalbasefilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.CameraCalControlPBMsg.CameraCalBaseFilename)
}
inline ::std::string* CameraCalControlPBMsg::mutable_cameracalbasefilename() {
  set_has_cameracalbasefilename();
  // @@protoc_insertion_point(field_mutable:vision_messages.CameraCalControlPBMsg.CameraCalBaseFilename)
  return cameracalbasefilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CameraCalControlPBMsg::release_cameracalbasefilename() {
  // @@protoc_insertion_point(field_release:vision_messages.CameraCalControlPBMsg.CameraCalBaseFilename)
  clear_has_cameracalbasefilename();
  return cameracalbasefilename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CameraCalControlPBMsg::set_allocated_cameracalbasefilename(::std::string* cameracalbasefilename) {
  if (cameracalbasefilename != NULL) {
    set_has_cameracalbasefilename();
  } else {
    clear_has_cameracalbasefilename();
  }
  cameracalbasefilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cameracalbasefilename);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.CameraCalControlPBMsg.CameraCalBaseFilename)
}

// optional int32 NumberOfRows = 4;
inline bool CameraCalControlPBMsg::has_numberofrows() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CameraCalControlPBMsg::set_has_numberofrows() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CameraCalControlPBMsg::clear_has_numberofrows() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CameraCalControlPBMsg::clear_numberofrows() {
  numberofrows_ = 0;
  clear_has_numberofrows();
}
inline ::google::protobuf::int32 CameraCalControlPBMsg::numberofrows() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalControlPBMsg.NumberOfRows)
  return numberofrows_;
}
inline void CameraCalControlPBMsg::set_numberofrows(::google::protobuf::int32 value) {
  set_has_numberofrows();
  numberofrows_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalControlPBMsg.NumberOfRows)
}

// optional int32 NumberOfCols = 5;
inline bool CameraCalControlPBMsg::has_numberofcols() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CameraCalControlPBMsg::set_has_numberofcols() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CameraCalControlPBMsg::clear_has_numberofcols() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CameraCalControlPBMsg::clear_numberofcols() {
  numberofcols_ = 0;
  clear_has_numberofcols();
}
inline ::google::protobuf::int32 CameraCalControlPBMsg::numberofcols() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalControlPBMsg.NumberOfCols)
  return numberofcols_;
}
inline void CameraCalControlPBMsg::set_numberofcols(::google::protobuf::int32 value) {
  set_has_numberofcols();
  numberofcols_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalControlPBMsg.NumberOfCols)
}

// optional double SquareSizeMilliMeters = 6;
inline bool CameraCalControlPBMsg::has_squaresizemillimeters() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CameraCalControlPBMsg::set_has_squaresizemillimeters() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CameraCalControlPBMsg::clear_has_squaresizemillimeters() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CameraCalControlPBMsg::clear_squaresizemillimeters() {
  squaresizemillimeters_ = 0;
  clear_has_squaresizemillimeters();
}
inline double CameraCalControlPBMsg::squaresizemillimeters() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalControlPBMsg.SquareSizeMilliMeters)
  return squaresizemillimeters_;
}
inline void CameraCalControlPBMsg::set_squaresizemillimeters(double value) {
  set_has_squaresizemillimeters();
  squaresizemillimeters_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalControlPBMsg.SquareSizeMilliMeters)
}

// optional double YawCorrectionDegrees = 7;
inline bool CameraCalControlPBMsg::has_yawcorrectiondegrees() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CameraCalControlPBMsg::set_has_yawcorrectiondegrees() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CameraCalControlPBMsg::clear_has_yawcorrectiondegrees() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CameraCalControlPBMsg::clear_yawcorrectiondegrees() {
  yawcorrectiondegrees_ = 0;
  clear_has_yawcorrectiondegrees();
}
inline double CameraCalControlPBMsg::yawcorrectiondegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalControlPBMsg.YawCorrectionDegrees)
  return yawcorrectiondegrees_;
}
inline void CameraCalControlPBMsg::set_yawcorrectiondegrees(double value) {
  set_has_yawcorrectiondegrees();
  yawcorrectiondegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalControlPBMsg.YawCorrectionDegrees)
}

// optional double PitchCorrectionDegrees = 8;
inline bool CameraCalControlPBMsg::has_pitchcorrectiondegrees() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CameraCalControlPBMsg::set_has_pitchcorrectiondegrees() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CameraCalControlPBMsg::clear_has_pitchcorrectiondegrees() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CameraCalControlPBMsg::clear_pitchcorrectiondegrees() {
  pitchcorrectiondegrees_ = 0;
  clear_has_pitchcorrectiondegrees();
}
inline double CameraCalControlPBMsg::pitchcorrectiondegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalControlPBMsg.PitchCorrectionDegrees)
  return pitchcorrectiondegrees_;
}
inline void CameraCalControlPBMsg::set_pitchcorrectiondegrees(double value) {
  set_has_pitchcorrectiondegrees();
  pitchcorrectiondegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalControlPBMsg.PitchCorrectionDegrees)
}

// optional double RollCorrectionDegrees = 9;
inline bool CameraCalControlPBMsg::has_rollcorrectiondegrees() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CameraCalControlPBMsg::set_has_rollcorrectiondegrees() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CameraCalControlPBMsg::clear_has_rollcorrectiondegrees() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CameraCalControlPBMsg::clear_rollcorrectiondegrees() {
  rollcorrectiondegrees_ = 0;
  clear_has_rollcorrectiondegrees();
}
inline double CameraCalControlPBMsg::rollcorrectiondegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalControlPBMsg.RollCorrectionDegrees)
  return rollcorrectiondegrees_;
}
inline void CameraCalControlPBMsg::set_rollcorrectiondegrees(double value) {
  set_has_rollcorrectiondegrees();
  rollcorrectiondegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalControlPBMsg.RollCorrectionDegrees)
}

// optional double DelXCorrectionCentiMeters = 10;
inline bool CameraCalControlPBMsg::has_delxcorrectioncentimeters() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CameraCalControlPBMsg::set_has_delxcorrectioncentimeters() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CameraCalControlPBMsg::clear_has_delxcorrectioncentimeters() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CameraCalControlPBMsg::clear_delxcorrectioncentimeters() {
  delxcorrectioncentimeters_ = 0;
  clear_has_delxcorrectioncentimeters();
}
inline double CameraCalControlPBMsg::delxcorrectioncentimeters() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalControlPBMsg.DelXCorrectionCentiMeters)
  return delxcorrectioncentimeters_;
}
inline void CameraCalControlPBMsg::set_delxcorrectioncentimeters(double value) {
  set_has_delxcorrectioncentimeters();
  delxcorrectioncentimeters_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalControlPBMsg.DelXCorrectionCentiMeters)
}

// optional double DelYCorrectionCentiMeters = 11;
inline bool CameraCalControlPBMsg::has_delycorrectioncentimeters() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CameraCalControlPBMsg::set_has_delycorrectioncentimeters() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CameraCalControlPBMsg::clear_has_delycorrectioncentimeters() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CameraCalControlPBMsg::clear_delycorrectioncentimeters() {
  delycorrectioncentimeters_ = 0;
  clear_has_delycorrectioncentimeters();
}
inline double CameraCalControlPBMsg::delycorrectioncentimeters() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalControlPBMsg.DelYCorrectionCentiMeters)
  return delycorrectioncentimeters_;
}
inline void CameraCalControlPBMsg::set_delycorrectioncentimeters(double value) {
  set_has_delycorrectioncentimeters();
  delycorrectioncentimeters_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalControlPBMsg.DelYCorrectionCentiMeters)
}

// optional double DelZCorrectionCentiMeters = 12;
inline bool CameraCalControlPBMsg::has_delzcorrectioncentimeters() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CameraCalControlPBMsg::set_has_delzcorrectioncentimeters() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CameraCalControlPBMsg::clear_has_delzcorrectioncentimeters() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CameraCalControlPBMsg::clear_delzcorrectioncentimeters() {
  delzcorrectioncentimeters_ = 0;
  clear_has_delzcorrectioncentimeters();
}
inline double CameraCalControlPBMsg::delzcorrectioncentimeters() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalControlPBMsg.DelZCorrectionCentiMeters)
  return delzcorrectioncentimeters_;
}
inline void CameraCalControlPBMsg::set_delzcorrectioncentimeters(double value) {
  set_has_delzcorrectioncentimeters();
  delzcorrectioncentimeters_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalControlPBMsg.DelZCorrectionCentiMeters)
}

// -------------------------------------------------------------------

// CameraCalStatusPBMsg

// optional .vision_messages.CameraCalStatusPBMsg.CameraCalState_e CameraCalState = 1;
inline bool CameraCalStatusPBMsg::has_cameracalstate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CameraCalStatusPBMsg::set_has_cameracalstate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CameraCalStatusPBMsg::clear_has_cameracalstate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CameraCalStatusPBMsg::clear_cameracalstate() {
  cameracalstate_ = 0;
  clear_has_cameracalstate();
}
inline ::vision_messages::CameraCalStatusPBMsg_CameraCalState_e CameraCalStatusPBMsg::cameracalstate() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalStatusPBMsg.CameraCalState)
  return static_cast< ::vision_messages::CameraCalStatusPBMsg_CameraCalState_e >(cameracalstate_);
}
inline void CameraCalStatusPBMsg::set_cameracalstate(::vision_messages::CameraCalStatusPBMsg_CameraCalState_e value) {
  assert(::vision_messages::CameraCalStatusPBMsg_CameraCalState_e_IsValid(value));
  set_has_cameracalstate();
  cameracalstate_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalStatusPBMsg.CameraCalState)
}

// optional int32 NumberOfImagesCaptured = 2;
inline bool CameraCalStatusPBMsg::has_numberofimagescaptured() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CameraCalStatusPBMsg::set_has_numberofimagescaptured() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CameraCalStatusPBMsg::clear_has_numberofimagescaptured() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CameraCalStatusPBMsg::clear_numberofimagescaptured() {
  numberofimagescaptured_ = 0;
  clear_has_numberofimagescaptured();
}
inline ::google::protobuf::int32 CameraCalStatusPBMsg::numberofimagescaptured() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalStatusPBMsg.NumberOfImagesCaptured)
  return numberofimagescaptured_;
}
inline void CameraCalStatusPBMsg::set_numberofimagescaptured(::google::protobuf::int32 value) {
  set_has_numberofimagescaptured();
  numberofimagescaptured_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalStatusPBMsg.NumberOfImagesCaptured)
}

// optional string CameraCalStatusMsg = 3;
inline bool CameraCalStatusPBMsg::has_cameracalstatusmsg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CameraCalStatusPBMsg::set_has_cameracalstatusmsg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CameraCalStatusPBMsg::clear_has_cameracalstatusmsg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CameraCalStatusPBMsg::clear_cameracalstatusmsg() {
  cameracalstatusmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cameracalstatusmsg();
}
inline const ::std::string& CameraCalStatusPBMsg::cameracalstatusmsg() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalStatusPBMsg.CameraCalStatusMsg)
  return cameracalstatusmsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CameraCalStatusPBMsg::set_cameracalstatusmsg(const ::std::string& value) {
  set_has_cameracalstatusmsg();
  cameracalstatusmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalStatusPBMsg.CameraCalStatusMsg)
}
inline void CameraCalStatusPBMsg::set_cameracalstatusmsg(const char* value) {
  set_has_cameracalstatusmsg();
  cameracalstatusmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.CameraCalStatusPBMsg.CameraCalStatusMsg)
}
inline void CameraCalStatusPBMsg::set_cameracalstatusmsg(const char* value, size_t size) {
  set_has_cameracalstatusmsg();
  cameracalstatusmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.CameraCalStatusPBMsg.CameraCalStatusMsg)
}
inline ::std::string* CameraCalStatusPBMsg::mutable_cameracalstatusmsg() {
  set_has_cameracalstatusmsg();
  // @@protoc_insertion_point(field_mutable:vision_messages.CameraCalStatusPBMsg.CameraCalStatusMsg)
  return cameracalstatusmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CameraCalStatusPBMsg::release_cameracalstatusmsg() {
  // @@protoc_insertion_point(field_release:vision_messages.CameraCalStatusPBMsg.CameraCalStatusMsg)
  clear_has_cameracalstatusmsg();
  return cameracalstatusmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CameraCalStatusPBMsg::set_allocated_cameracalstatusmsg(::std::string* cameracalstatusmsg) {
  if (cameracalstatusmsg != NULL) {
    set_has_cameracalstatusmsg();
  } else {
    clear_has_cameracalstatusmsg();
  }
  cameracalstatusmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cameracalstatusmsg);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.CameraCalStatusPBMsg.CameraCalStatusMsg)
}

// optional bool ImageOk = 4;
inline bool CameraCalStatusPBMsg::has_imageok() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CameraCalStatusPBMsg::set_has_imageok() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CameraCalStatusPBMsg::clear_has_imageok() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CameraCalStatusPBMsg::clear_imageok() {
  imageok_ = false;
  clear_has_imageok();
}
inline bool CameraCalStatusPBMsg::imageok() const {
  // @@protoc_insertion_point(field_get:vision_messages.CameraCalStatusPBMsg.ImageOk)
  return imageok_;
}
inline void CameraCalStatusPBMsg::set_imageok(bool value) {
  set_has_imageok();
  imageok_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.CameraCalStatusPBMsg.ImageOk)
}

// -------------------------------------------------------------------

// FeatureMatchProcCtrlPBMsg

// optional int32 FeatureMatchingProcCmd = 1;
inline bool FeatureMatchProcCtrlPBMsg::has_featurematchingproccmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_featurematchingproccmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_featurematchingproccmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_featurematchingproccmd() {
  featurematchingproccmd_ = 0;
  clear_has_featurematchingproccmd();
}
inline ::google::protobuf::int32 FeatureMatchProcCtrlPBMsg::featurematchingproccmd() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.FeatureMatchingProcCmd)
  return featurematchingproccmd_;
}
inline void FeatureMatchProcCtrlPBMsg::set_featurematchingproccmd(::google::protobuf::int32 value) {
  set_has_featurematchingproccmd();
  featurematchingproccmd_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.FeatureMatchingProcCmd)
}

// optional int32 FeatureExtractionTypeRoutine = 2;
inline bool FeatureMatchProcCtrlPBMsg::has_featureextractiontyperoutine() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_featureextractiontyperoutine() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_featureextractiontyperoutine() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_featureextractiontyperoutine() {
  featureextractiontyperoutine_ = 0;
  clear_has_featureextractiontyperoutine();
}
inline ::google::protobuf::int32 FeatureMatchProcCtrlPBMsg::featureextractiontyperoutine() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.FeatureExtractionTypeRoutine)
  return featureextractiontyperoutine_;
}
inline void FeatureMatchProcCtrlPBMsg::set_featureextractiontyperoutine(::google::protobuf::int32 value) {
  set_has_featureextractiontyperoutine();
  featureextractiontyperoutine_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.FeatureExtractionTypeRoutine)
}

// optional int32 FeatureMatchTypeRoutine = 3;
inline bool FeatureMatchProcCtrlPBMsg::has_featurematchtyperoutine() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_featurematchtyperoutine() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_featurematchtyperoutine() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_featurematchtyperoutine() {
  featurematchtyperoutine_ = 0;
  clear_has_featurematchtyperoutine();
}
inline ::google::protobuf::int32 FeatureMatchProcCtrlPBMsg::featurematchtyperoutine() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.FeatureMatchTypeRoutine)
  return featurematchtyperoutine_;
}
inline void FeatureMatchProcCtrlPBMsg::set_featurematchtyperoutine(::google::protobuf::int32 value) {
  set_has_featurematchtyperoutine();
  featurematchtyperoutine_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.FeatureMatchTypeRoutine)
}

// optional int32 FMImagePostProcessMethod = 4;
inline bool FeatureMatchProcCtrlPBMsg::has_fmimagepostprocessmethod() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_fmimagepostprocessmethod() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_fmimagepostprocessmethod() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_fmimagepostprocessmethod() {
  fmimagepostprocessmethod_ = 0;
  clear_has_fmimagepostprocessmethod();
}
inline ::google::protobuf::int32 FeatureMatchProcCtrlPBMsg::fmimagepostprocessmethod() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.FMImagePostProcessMethod)
  return fmimagepostprocessmethod_;
}
inline void FeatureMatchProcCtrlPBMsg::set_fmimagepostprocessmethod(::google::protobuf::int32 value) {
  set_has_fmimagepostprocessmethod();
  fmimagepostprocessmethod_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.FMImagePostProcessMethod)
}

// optional bool UseGPUProcessing = 5;
inline bool FeatureMatchProcCtrlPBMsg::has_usegpuprocessing() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_usegpuprocessing() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_usegpuprocessing() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_usegpuprocessing() {
  usegpuprocessing_ = false;
  clear_has_usegpuprocessing();
}
inline bool FeatureMatchProcCtrlPBMsg::usegpuprocessing() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.UseGPUProcessing)
  return usegpuprocessing_;
}
inline void FeatureMatchProcCtrlPBMsg::set_usegpuprocessing(bool value) {
  set_has_usegpuprocessing();
  usegpuprocessing_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.UseGPUProcessing)
}

// optional int32 ParamI_1 = 10;
inline bool FeatureMatchProcCtrlPBMsg::has_parami_1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_parami_1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_parami_1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_parami_1() {
  parami_1_ = 0;
  clear_has_parami_1();
}
inline ::google::protobuf::int32 FeatureMatchProcCtrlPBMsg::parami_1() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_1)
  return parami_1_;
}
inline void FeatureMatchProcCtrlPBMsg::set_parami_1(::google::protobuf::int32 value) {
  set_has_parami_1();
  parami_1_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_1)
}

// optional int32 ParamI_2 = 11;
inline bool FeatureMatchProcCtrlPBMsg::has_parami_2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_parami_2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_parami_2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_parami_2() {
  parami_2_ = 0;
  clear_has_parami_2();
}
inline ::google::protobuf::int32 FeatureMatchProcCtrlPBMsg::parami_2() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_2)
  return parami_2_;
}
inline void FeatureMatchProcCtrlPBMsg::set_parami_2(::google::protobuf::int32 value) {
  set_has_parami_2();
  parami_2_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_2)
}

// optional int32 ParamI_3 = 12;
inline bool FeatureMatchProcCtrlPBMsg::has_parami_3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_parami_3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_parami_3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_parami_3() {
  parami_3_ = 0;
  clear_has_parami_3();
}
inline ::google::protobuf::int32 FeatureMatchProcCtrlPBMsg::parami_3() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_3)
  return parami_3_;
}
inline void FeatureMatchProcCtrlPBMsg::set_parami_3(::google::protobuf::int32 value) {
  set_has_parami_3();
  parami_3_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_3)
}

// optional int32 ParamI_4 = 13;
inline bool FeatureMatchProcCtrlPBMsg::has_parami_4() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_parami_4() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_parami_4() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_parami_4() {
  parami_4_ = 0;
  clear_has_parami_4();
}
inline ::google::protobuf::int32 FeatureMatchProcCtrlPBMsg::parami_4() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_4)
  return parami_4_;
}
inline void FeatureMatchProcCtrlPBMsg::set_parami_4(::google::protobuf::int32 value) {
  set_has_parami_4();
  parami_4_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_4)
}

// optional int32 ParamI_5 = 14;
inline bool FeatureMatchProcCtrlPBMsg::has_parami_5() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_parami_5() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_parami_5() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_parami_5() {
  parami_5_ = 0;
  clear_has_parami_5();
}
inline ::google::protobuf::int32 FeatureMatchProcCtrlPBMsg::parami_5() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_5)
  return parami_5_;
}
inline void FeatureMatchProcCtrlPBMsg::set_parami_5(::google::protobuf::int32 value) {
  set_has_parami_5();
  parami_5_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_5)
}

// optional int32 ParamI_6 = 15;
inline bool FeatureMatchProcCtrlPBMsg::has_parami_6() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_parami_6() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_parami_6() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_parami_6() {
  parami_6_ = 0;
  clear_has_parami_6();
}
inline ::google::protobuf::int32 FeatureMatchProcCtrlPBMsg::parami_6() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_6)
  return parami_6_;
}
inline void FeatureMatchProcCtrlPBMsg::set_parami_6(::google::protobuf::int32 value) {
  set_has_parami_6();
  parami_6_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_6)
}

// optional int32 ParamI_7 = 16;
inline bool FeatureMatchProcCtrlPBMsg::has_parami_7() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_parami_7() {
  _has_bits_[0] |= 0x00000800u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_parami_7() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_parami_7() {
  parami_7_ = 0;
  clear_has_parami_7();
}
inline ::google::protobuf::int32 FeatureMatchProcCtrlPBMsg::parami_7() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_7)
  return parami_7_;
}
inline void FeatureMatchProcCtrlPBMsg::set_parami_7(::google::protobuf::int32 value) {
  set_has_parami_7();
  parami_7_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_7)
}

// optional int32 ParamI_8 = 17;
inline bool FeatureMatchProcCtrlPBMsg::has_parami_8() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_parami_8() {
  _has_bits_[0] |= 0x00001000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_parami_8() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_parami_8() {
  parami_8_ = 0;
  clear_has_parami_8();
}
inline ::google::protobuf::int32 FeatureMatchProcCtrlPBMsg::parami_8() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_8)
  return parami_8_;
}
inline void FeatureMatchProcCtrlPBMsg::set_parami_8(::google::protobuf::int32 value) {
  set_has_parami_8();
  parami_8_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_8)
}

// optional int32 ParamI_9 = 18;
inline bool FeatureMatchProcCtrlPBMsg::has_parami_9() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_parami_9() {
  _has_bits_[0] |= 0x00002000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_parami_9() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_parami_9() {
  parami_9_ = 0;
  clear_has_parami_9();
}
inline ::google::protobuf::int32 FeatureMatchProcCtrlPBMsg::parami_9() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_9)
  return parami_9_;
}
inline void FeatureMatchProcCtrlPBMsg::set_parami_9(::google::protobuf::int32 value) {
  set_has_parami_9();
  parami_9_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamI_9)
}

// optional double ParamF_10 = 20;
inline bool FeatureMatchProcCtrlPBMsg::has_paramf_10() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_paramf_10() {
  _has_bits_[0] |= 0x00004000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_paramf_10() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_paramf_10() {
  paramf_10_ = 0;
  clear_has_paramf_10();
}
inline double FeatureMatchProcCtrlPBMsg::paramf_10() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_10)
  return paramf_10_;
}
inline void FeatureMatchProcCtrlPBMsg::set_paramf_10(double value) {
  set_has_paramf_10();
  paramf_10_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_10)
}

// optional double ParamF_11 = 21;
inline bool FeatureMatchProcCtrlPBMsg::has_paramf_11() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_paramf_11() {
  _has_bits_[0] |= 0x00008000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_paramf_11() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_paramf_11() {
  paramf_11_ = 0;
  clear_has_paramf_11();
}
inline double FeatureMatchProcCtrlPBMsg::paramf_11() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_11)
  return paramf_11_;
}
inline void FeatureMatchProcCtrlPBMsg::set_paramf_11(double value) {
  set_has_paramf_11();
  paramf_11_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_11)
}

// optional double ParamF_12 = 22;
inline bool FeatureMatchProcCtrlPBMsg::has_paramf_12() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_paramf_12() {
  _has_bits_[0] |= 0x00010000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_paramf_12() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_paramf_12() {
  paramf_12_ = 0;
  clear_has_paramf_12();
}
inline double FeatureMatchProcCtrlPBMsg::paramf_12() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_12)
  return paramf_12_;
}
inline void FeatureMatchProcCtrlPBMsg::set_paramf_12(double value) {
  set_has_paramf_12();
  paramf_12_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_12)
}

// optional double ParamF_13 = 23;
inline bool FeatureMatchProcCtrlPBMsg::has_paramf_13() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_paramf_13() {
  _has_bits_[0] |= 0x00020000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_paramf_13() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_paramf_13() {
  paramf_13_ = 0;
  clear_has_paramf_13();
}
inline double FeatureMatchProcCtrlPBMsg::paramf_13() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_13)
  return paramf_13_;
}
inline void FeatureMatchProcCtrlPBMsg::set_paramf_13(double value) {
  set_has_paramf_13();
  paramf_13_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_13)
}

// optional double ParamF_14 = 24;
inline bool FeatureMatchProcCtrlPBMsg::has_paramf_14() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_paramf_14() {
  _has_bits_[0] |= 0x00040000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_paramf_14() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_paramf_14() {
  paramf_14_ = 0;
  clear_has_paramf_14();
}
inline double FeatureMatchProcCtrlPBMsg::paramf_14() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_14)
  return paramf_14_;
}
inline void FeatureMatchProcCtrlPBMsg::set_paramf_14(double value) {
  set_has_paramf_14();
  paramf_14_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_14)
}

// optional double ParamF_15 = 25;
inline bool FeatureMatchProcCtrlPBMsg::has_paramf_15() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_paramf_15() {
  _has_bits_[0] |= 0x00080000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_paramf_15() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_paramf_15() {
  paramf_15_ = 0;
  clear_has_paramf_15();
}
inline double FeatureMatchProcCtrlPBMsg::paramf_15() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_15)
  return paramf_15_;
}
inline void FeatureMatchProcCtrlPBMsg::set_paramf_15(double value) {
  set_has_paramf_15();
  paramf_15_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_15)
}

// optional double ParamF_16 = 26;
inline bool FeatureMatchProcCtrlPBMsg::has_paramf_16() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_paramf_16() {
  _has_bits_[0] |= 0x00100000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_paramf_16() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_paramf_16() {
  paramf_16_ = 0;
  clear_has_paramf_16();
}
inline double FeatureMatchProcCtrlPBMsg::paramf_16() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_16)
  return paramf_16_;
}
inline void FeatureMatchProcCtrlPBMsg::set_paramf_16(double value) {
  set_has_paramf_16();
  paramf_16_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_16)
}

// optional double ParamF_17 = 27;
inline bool FeatureMatchProcCtrlPBMsg::has_paramf_17() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_paramf_17() {
  _has_bits_[0] |= 0x00200000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_paramf_17() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_paramf_17() {
  paramf_17_ = 0;
  clear_has_paramf_17();
}
inline double FeatureMatchProcCtrlPBMsg::paramf_17() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_17)
  return paramf_17_;
}
inline void FeatureMatchProcCtrlPBMsg::set_paramf_17(double value) {
  set_has_paramf_17();
  paramf_17_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_17)
}

// optional double ParamF_18 = 28;
inline bool FeatureMatchProcCtrlPBMsg::has_paramf_18() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_paramf_18() {
  _has_bits_[0] |= 0x00400000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_paramf_18() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_paramf_18() {
  paramf_18_ = 0;
  clear_has_paramf_18();
}
inline double FeatureMatchProcCtrlPBMsg::paramf_18() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_18)
  return paramf_18_;
}
inline void FeatureMatchProcCtrlPBMsg::set_paramf_18(double value) {
  set_has_paramf_18();
  paramf_18_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_18)
}

// optional double ParamF_19 = 29;
inline bool FeatureMatchProcCtrlPBMsg::has_paramf_19() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void FeatureMatchProcCtrlPBMsg::set_has_paramf_19() {
  _has_bits_[0] |= 0x00800000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_has_paramf_19() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void FeatureMatchProcCtrlPBMsg::clear_paramf_19() {
  paramf_19_ = 0;
  clear_has_paramf_19();
}
inline double FeatureMatchProcCtrlPBMsg::paramf_19() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_19)
  return paramf_19_;
}
inline void FeatureMatchProcCtrlPBMsg::set_paramf_19(double value) {
  set_has_paramf_19();
  paramf_19_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcCtrlPBMsg.ParamF_19)
}

// -------------------------------------------------------------------

// FeatureMatchProcStatusPBMsg

// optional int32 FeatureMatchingState = 1;
inline bool FeatureMatchProcStatusPBMsg::has_featurematchingstate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_featurematchingstate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_featurematchingstate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FeatureMatchProcStatusPBMsg::clear_featurematchingstate() {
  featurematchingstate_ = 0;
  clear_has_featurematchingstate();
}
inline ::google::protobuf::int32 FeatureMatchProcStatusPBMsg::featurematchingstate() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.FeatureMatchingState)
  return featurematchingstate_;
}
inline void FeatureMatchProcStatusPBMsg::set_featurematchingstate(::google::protobuf::int32 value) {
  set_has_featurematchingstate();
  featurematchingstate_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.FeatureMatchingState)
}

// optional int32 FeatureExtractionTypeRoutine = 2;
inline bool FeatureMatchProcStatusPBMsg::has_featureextractiontyperoutine() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_featureextractiontyperoutine() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_featureextractiontyperoutine() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FeatureMatchProcStatusPBMsg::clear_featureextractiontyperoutine() {
  featureextractiontyperoutine_ = 0;
  clear_has_featureextractiontyperoutine();
}
inline ::google::protobuf::int32 FeatureMatchProcStatusPBMsg::featureextractiontyperoutine() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.FeatureExtractionTypeRoutine)
  return featureextractiontyperoutine_;
}
inline void FeatureMatchProcStatusPBMsg::set_featureextractiontyperoutine(::google::protobuf::int32 value) {
  set_has_featureextractiontyperoutine();
  featureextractiontyperoutine_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.FeatureExtractionTypeRoutine)
}

// optional int32 FeatureMatchTypeRoutine = 3;
inline bool FeatureMatchProcStatusPBMsg::has_featurematchtyperoutine() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_featurematchtyperoutine() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_featurematchtyperoutine() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FeatureMatchProcStatusPBMsg::clear_featurematchtyperoutine() {
  featurematchtyperoutine_ = 0;
  clear_has_featurematchtyperoutine();
}
inline ::google::protobuf::int32 FeatureMatchProcStatusPBMsg::featurematchtyperoutine() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.FeatureMatchTypeRoutine)
  return featurematchtyperoutine_;
}
inline void FeatureMatchProcStatusPBMsg::set_featurematchtyperoutine(::google::protobuf::int32 value) {
  set_has_featurematchtyperoutine();
  featurematchtyperoutine_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.FeatureMatchTypeRoutine)
}

// optional string StatusMessage = 4;
inline bool FeatureMatchProcStatusPBMsg::has_statusmessage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusmessage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusmessage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusmessage() {
  statusmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_statusmessage();
}
inline const ::std::string& FeatureMatchProcStatusPBMsg::statusmessage() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusMessage)
  return statusmessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FeatureMatchProcStatusPBMsg::set_statusmessage(const ::std::string& value) {
  set_has_statusmessage();
  statusmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusMessage)
}
inline void FeatureMatchProcStatusPBMsg::set_statusmessage(const char* value) {
  set_has_statusmessage();
  statusmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.FeatureMatchProcStatusPBMsg.StatusMessage)
}
inline void FeatureMatchProcStatusPBMsg::set_statusmessage(const char* value, size_t size) {
  set_has_statusmessage();
  statusmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.FeatureMatchProcStatusPBMsg.StatusMessage)
}
inline ::std::string* FeatureMatchProcStatusPBMsg::mutable_statusmessage() {
  set_has_statusmessage();
  // @@protoc_insertion_point(field_mutable:vision_messages.FeatureMatchProcStatusPBMsg.StatusMessage)
  return statusmessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FeatureMatchProcStatusPBMsg::release_statusmessage() {
  // @@protoc_insertion_point(field_release:vision_messages.FeatureMatchProcStatusPBMsg.StatusMessage)
  clear_has_statusmessage();
  return statusmessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FeatureMatchProcStatusPBMsg::set_allocated_statusmessage(::std::string* statusmessage) {
  if (statusmessage != NULL) {
    set_has_statusmessage();
  } else {
    clear_has_statusmessage();
  }
  statusmessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), statusmessage);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.FeatureMatchProcStatusPBMsg.StatusMessage)
}

// optional int32 NumberOfImagesCaptured = 5;
inline bool FeatureMatchProcStatusPBMsg::has_numberofimagescaptured() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_numberofimagescaptured() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_numberofimagescaptured() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FeatureMatchProcStatusPBMsg::clear_numberofimagescaptured() {
  numberofimagescaptured_ = 0;
  clear_has_numberofimagescaptured();
}
inline ::google::protobuf::int32 FeatureMatchProcStatusPBMsg::numberofimagescaptured() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.NumberOfImagesCaptured)
  return numberofimagescaptured_;
}
inline void FeatureMatchProcStatusPBMsg::set_numberofimagescaptured(::google::protobuf::int32 value) {
  set_has_numberofimagescaptured();
  numberofimagescaptured_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.NumberOfImagesCaptured)
}

// optional double ProcessTimer_1 = 6;
inline bool FeatureMatchProcStatusPBMsg::has_processtimer_1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_processtimer_1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_processtimer_1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FeatureMatchProcStatusPBMsg::clear_processtimer_1() {
  processtimer_1_ = 0;
  clear_has_processtimer_1();
}
inline double FeatureMatchProcStatusPBMsg::processtimer_1() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.ProcessTimer_1)
  return processtimer_1_;
}
inline void FeatureMatchProcStatusPBMsg::set_processtimer_1(double value) {
  set_has_processtimer_1();
  processtimer_1_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.ProcessTimer_1)
}

// optional double ProcessTimer_2 = 7;
inline bool FeatureMatchProcStatusPBMsg::has_processtimer_2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_processtimer_2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_processtimer_2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FeatureMatchProcStatusPBMsg::clear_processtimer_2() {
  processtimer_2_ = 0;
  clear_has_processtimer_2();
}
inline double FeatureMatchProcStatusPBMsg::processtimer_2() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.ProcessTimer_2)
  return processtimer_2_;
}
inline void FeatureMatchProcStatusPBMsg::set_processtimer_2(double value) {
  set_has_processtimer_2();
  processtimer_2_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.ProcessTimer_2)
}

// optional int32 StatusValI_1 = 10;
inline bool FeatureMatchProcStatusPBMsg::has_statusvali_1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvali_1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvali_1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvali_1() {
  statusvali_1_ = 0;
  clear_has_statusvali_1();
}
inline ::google::protobuf::int32 FeatureMatchProcStatusPBMsg::statusvali_1() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_1)
  return statusvali_1_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvali_1(::google::protobuf::int32 value) {
  set_has_statusvali_1();
  statusvali_1_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_1)
}

// optional int32 StatusValI_2 = 11;
inline bool FeatureMatchProcStatusPBMsg::has_statusvali_2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvali_2() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvali_2() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvali_2() {
  statusvali_2_ = 0;
  clear_has_statusvali_2();
}
inline ::google::protobuf::int32 FeatureMatchProcStatusPBMsg::statusvali_2() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_2)
  return statusvali_2_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvali_2(::google::protobuf::int32 value) {
  set_has_statusvali_2();
  statusvali_2_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_2)
}

// optional int32 StatusValI_3 = 12;
inline bool FeatureMatchProcStatusPBMsg::has_statusvali_3() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvali_3() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvali_3() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvali_3() {
  statusvali_3_ = 0;
  clear_has_statusvali_3();
}
inline ::google::protobuf::int32 FeatureMatchProcStatusPBMsg::statusvali_3() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_3)
  return statusvali_3_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvali_3(::google::protobuf::int32 value) {
  set_has_statusvali_3();
  statusvali_3_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_3)
}

// optional int32 StatusValI_4 = 13;
inline bool FeatureMatchProcStatusPBMsg::has_statusvali_4() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvali_4() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvali_4() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvali_4() {
  statusvali_4_ = 0;
  clear_has_statusvali_4();
}
inline ::google::protobuf::int32 FeatureMatchProcStatusPBMsg::statusvali_4() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_4)
  return statusvali_4_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvali_4(::google::protobuf::int32 value) {
  set_has_statusvali_4();
  statusvali_4_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_4)
}

// optional int32 StatusValI_5 = 14;
inline bool FeatureMatchProcStatusPBMsg::has_statusvali_5() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvali_5() {
  _has_bits_[0] |= 0x00000800u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvali_5() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvali_5() {
  statusvali_5_ = 0;
  clear_has_statusvali_5();
}
inline ::google::protobuf::int32 FeatureMatchProcStatusPBMsg::statusvali_5() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_5)
  return statusvali_5_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvali_5(::google::protobuf::int32 value) {
  set_has_statusvali_5();
  statusvali_5_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_5)
}

// optional int32 StatusValI_6 = 15;
inline bool FeatureMatchProcStatusPBMsg::has_statusvali_6() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvali_6() {
  _has_bits_[0] |= 0x00001000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvali_6() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvali_6() {
  statusvali_6_ = 0;
  clear_has_statusvali_6();
}
inline ::google::protobuf::int32 FeatureMatchProcStatusPBMsg::statusvali_6() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_6)
  return statusvali_6_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvali_6(::google::protobuf::int32 value) {
  set_has_statusvali_6();
  statusvali_6_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_6)
}

// optional int32 StatusValI_7 = 16;
inline bool FeatureMatchProcStatusPBMsg::has_statusvali_7() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvali_7() {
  _has_bits_[0] |= 0x00002000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvali_7() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvali_7() {
  statusvali_7_ = 0;
  clear_has_statusvali_7();
}
inline ::google::protobuf::int32 FeatureMatchProcStatusPBMsg::statusvali_7() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_7)
  return statusvali_7_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvali_7(::google::protobuf::int32 value) {
  set_has_statusvali_7();
  statusvali_7_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_7)
}

// optional int32 StatusValI_8 = 17;
inline bool FeatureMatchProcStatusPBMsg::has_statusvali_8() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvali_8() {
  _has_bits_[0] |= 0x00004000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvali_8() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvali_8() {
  statusvali_8_ = 0;
  clear_has_statusvali_8();
}
inline ::google::protobuf::int32 FeatureMatchProcStatusPBMsg::statusvali_8() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_8)
  return statusvali_8_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvali_8(::google::protobuf::int32 value) {
  set_has_statusvali_8();
  statusvali_8_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_8)
}

// optional int32 StatusValI_9 = 18;
inline bool FeatureMatchProcStatusPBMsg::has_statusvali_9() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvali_9() {
  _has_bits_[0] |= 0x00008000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvali_9() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvali_9() {
  statusvali_9_ = 0;
  clear_has_statusvali_9();
}
inline ::google::protobuf::int32 FeatureMatchProcStatusPBMsg::statusvali_9() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_9)
  return statusvali_9_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvali_9(::google::protobuf::int32 value) {
  set_has_statusvali_9();
  statusvali_9_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValI_9)
}

// optional double StatusValF_10 = 20;
inline bool FeatureMatchProcStatusPBMsg::has_statusvalf_10() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvalf_10() {
  _has_bits_[0] |= 0x00010000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvalf_10() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvalf_10() {
  statusvalf_10_ = 0;
  clear_has_statusvalf_10();
}
inline double FeatureMatchProcStatusPBMsg::statusvalf_10() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_10)
  return statusvalf_10_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvalf_10(double value) {
  set_has_statusvalf_10();
  statusvalf_10_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_10)
}

// optional double StatusValF_11 = 21;
inline bool FeatureMatchProcStatusPBMsg::has_statusvalf_11() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvalf_11() {
  _has_bits_[0] |= 0x00020000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvalf_11() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvalf_11() {
  statusvalf_11_ = 0;
  clear_has_statusvalf_11();
}
inline double FeatureMatchProcStatusPBMsg::statusvalf_11() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_11)
  return statusvalf_11_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvalf_11(double value) {
  set_has_statusvalf_11();
  statusvalf_11_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_11)
}

// optional double StatusValF_12 = 22;
inline bool FeatureMatchProcStatusPBMsg::has_statusvalf_12() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvalf_12() {
  _has_bits_[0] |= 0x00040000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvalf_12() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvalf_12() {
  statusvalf_12_ = 0;
  clear_has_statusvalf_12();
}
inline double FeatureMatchProcStatusPBMsg::statusvalf_12() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_12)
  return statusvalf_12_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvalf_12(double value) {
  set_has_statusvalf_12();
  statusvalf_12_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_12)
}

// optional double StatusValF_13 = 23;
inline bool FeatureMatchProcStatusPBMsg::has_statusvalf_13() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvalf_13() {
  _has_bits_[0] |= 0x00080000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvalf_13() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvalf_13() {
  statusvalf_13_ = 0;
  clear_has_statusvalf_13();
}
inline double FeatureMatchProcStatusPBMsg::statusvalf_13() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_13)
  return statusvalf_13_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvalf_13(double value) {
  set_has_statusvalf_13();
  statusvalf_13_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_13)
}

// optional double StatusValF_14 = 24;
inline bool FeatureMatchProcStatusPBMsg::has_statusvalf_14() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvalf_14() {
  _has_bits_[0] |= 0x00100000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvalf_14() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvalf_14() {
  statusvalf_14_ = 0;
  clear_has_statusvalf_14();
}
inline double FeatureMatchProcStatusPBMsg::statusvalf_14() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_14)
  return statusvalf_14_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvalf_14(double value) {
  set_has_statusvalf_14();
  statusvalf_14_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_14)
}

// optional double StatusValF_15 = 25;
inline bool FeatureMatchProcStatusPBMsg::has_statusvalf_15() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvalf_15() {
  _has_bits_[0] |= 0x00200000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvalf_15() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvalf_15() {
  statusvalf_15_ = 0;
  clear_has_statusvalf_15();
}
inline double FeatureMatchProcStatusPBMsg::statusvalf_15() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_15)
  return statusvalf_15_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvalf_15(double value) {
  set_has_statusvalf_15();
  statusvalf_15_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_15)
}

// optional double StatusValF_16 = 26;
inline bool FeatureMatchProcStatusPBMsg::has_statusvalf_16() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvalf_16() {
  _has_bits_[0] |= 0x00400000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvalf_16() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvalf_16() {
  statusvalf_16_ = 0;
  clear_has_statusvalf_16();
}
inline double FeatureMatchProcStatusPBMsg::statusvalf_16() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_16)
  return statusvalf_16_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvalf_16(double value) {
  set_has_statusvalf_16();
  statusvalf_16_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_16)
}

// optional double StatusValF_17 = 27;
inline bool FeatureMatchProcStatusPBMsg::has_statusvalf_17() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvalf_17() {
  _has_bits_[0] |= 0x00800000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvalf_17() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvalf_17() {
  statusvalf_17_ = 0;
  clear_has_statusvalf_17();
}
inline double FeatureMatchProcStatusPBMsg::statusvalf_17() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_17)
  return statusvalf_17_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvalf_17(double value) {
  set_has_statusvalf_17();
  statusvalf_17_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_17)
}

// optional double StatusValF_18 = 28;
inline bool FeatureMatchProcStatusPBMsg::has_statusvalf_18() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvalf_18() {
  _has_bits_[0] |= 0x01000000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvalf_18() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvalf_18() {
  statusvalf_18_ = 0;
  clear_has_statusvalf_18();
}
inline double FeatureMatchProcStatusPBMsg::statusvalf_18() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_18)
  return statusvalf_18_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvalf_18(double value) {
  set_has_statusvalf_18();
  statusvalf_18_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_18)
}

// optional double StatusValF_19 = 29;
inline bool FeatureMatchProcStatusPBMsg::has_statusvalf_19() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void FeatureMatchProcStatusPBMsg::set_has_statusvalf_19() {
  _has_bits_[0] |= 0x02000000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_has_statusvalf_19() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void FeatureMatchProcStatusPBMsg::clear_statusvalf_19() {
  statusvalf_19_ = 0;
  clear_has_statusvalf_19();
}
inline double FeatureMatchProcStatusPBMsg::statusvalf_19() const {
  // @@protoc_insertion_point(field_get:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_19)
  return statusvalf_19_;
}
inline void FeatureMatchProcStatusPBMsg::set_statusvalf_19(double value) {
  set_has_statusvalf_19();
  statusvalf_19_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.FeatureMatchProcStatusPBMsg.StatusValF_19)
}

// -------------------------------------------------------------------

// ListOfManagerNamesPBMsg

// optional int32 NumberOfManagers = 1;
inline bool ListOfManagerNamesPBMsg::has_numberofmanagers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ListOfManagerNamesPBMsg::set_has_numberofmanagers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ListOfManagerNamesPBMsg::clear_has_numberofmanagers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ListOfManagerNamesPBMsg::clear_numberofmanagers() {
  numberofmanagers_ = 0;
  clear_has_numberofmanagers();
}
inline ::google::protobuf::int32 ListOfManagerNamesPBMsg::numberofmanagers() const {
  // @@protoc_insertion_point(field_get:vision_messages.ListOfManagerNamesPBMsg.NumberOfManagers)
  return numberofmanagers_;
}
inline void ListOfManagerNamesPBMsg::set_numberofmanagers(::google::protobuf::int32 value) {
  set_has_numberofmanagers();
  numberofmanagers_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.ListOfManagerNamesPBMsg.NumberOfManagers)
}

// repeated string ListOfManagerNames = 2;
inline int ListOfManagerNamesPBMsg::listofmanagernames_size() const {
  return listofmanagernames_.size();
}
inline void ListOfManagerNamesPBMsg::clear_listofmanagernames() {
  listofmanagernames_.Clear();
}
inline const ::std::string& ListOfManagerNamesPBMsg::listofmanagernames(int index) const {
  // @@protoc_insertion_point(field_get:vision_messages.ListOfManagerNamesPBMsg.ListOfManagerNames)
  return listofmanagernames_.Get(index);
}
inline ::std::string* ListOfManagerNamesPBMsg::mutable_listofmanagernames(int index) {
  // @@protoc_insertion_point(field_mutable:vision_messages.ListOfManagerNamesPBMsg.ListOfManagerNames)
  return listofmanagernames_.Mutable(index);
}
inline void ListOfManagerNamesPBMsg::set_listofmanagernames(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:vision_messages.ListOfManagerNamesPBMsg.ListOfManagerNames)
  listofmanagernames_.Mutable(index)->assign(value);
}
inline void ListOfManagerNamesPBMsg::set_listofmanagernames(int index, const char* value) {
  listofmanagernames_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:vision_messages.ListOfManagerNamesPBMsg.ListOfManagerNames)
}
inline void ListOfManagerNamesPBMsg::set_listofmanagernames(int index, const char* value, size_t size) {
  listofmanagernames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:vision_messages.ListOfManagerNamesPBMsg.ListOfManagerNames)
}
inline ::std::string* ListOfManagerNamesPBMsg::add_listofmanagernames() {
  // @@protoc_insertion_point(field_add_mutable:vision_messages.ListOfManagerNamesPBMsg.ListOfManagerNames)
  return listofmanagernames_.Add();
}
inline void ListOfManagerNamesPBMsg::add_listofmanagernames(const ::std::string& value) {
  listofmanagernames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:vision_messages.ListOfManagerNamesPBMsg.ListOfManagerNames)
}
inline void ListOfManagerNamesPBMsg::add_listofmanagernames(const char* value) {
  listofmanagernames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:vision_messages.ListOfManagerNamesPBMsg.ListOfManagerNames)
}
inline void ListOfManagerNamesPBMsg::add_listofmanagernames(const char* value, size_t size) {
  listofmanagernames_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:vision_messages.ListOfManagerNamesPBMsg.ListOfManagerNames)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListOfManagerNamesPBMsg::listofmanagernames() const {
  // @@protoc_insertion_point(field_list:vision_messages.ListOfManagerNamesPBMsg.ListOfManagerNames)
  return listofmanagernames_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListOfManagerNamesPBMsg::mutable_listofmanagernames() {
  // @@protoc_insertion_point(field_mutable_list:vision_messages.ListOfManagerNamesPBMsg.ListOfManagerNames)
  return &listofmanagernames_;
}

// -------------------------------------------------------------------

// SteeringTorqueCtrlPBMsg

// optional double SteeringTorquePercent = 1;
inline bool SteeringTorqueCtrlPBMsg::has_steeringtorquepercent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SteeringTorqueCtrlPBMsg::set_has_steeringtorquepercent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SteeringTorqueCtrlPBMsg::clear_has_steeringtorquepercent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SteeringTorqueCtrlPBMsg::clear_steeringtorquepercent() {
  steeringtorquepercent_ = 0;
  clear_has_steeringtorquepercent();
}
inline double SteeringTorqueCtrlPBMsg::steeringtorquepercent() const {
  // @@protoc_insertion_point(field_get:vision_messages.SteeringTorqueCtrlPBMsg.SteeringTorquePercent)
  return steeringtorquepercent_;
}
inline void SteeringTorqueCtrlPBMsg::set_steeringtorquepercent(double value) {
  set_has_steeringtorquepercent();
  steeringtorquepercent_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.SteeringTorqueCtrlPBMsg.SteeringTorquePercent)
}

// optional uint32 SteeringTorqueMap = 2;
inline bool SteeringTorqueCtrlPBMsg::has_steeringtorquemap() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SteeringTorqueCtrlPBMsg::set_has_steeringtorquemap() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SteeringTorqueCtrlPBMsg::clear_has_steeringtorquemap() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SteeringTorqueCtrlPBMsg::clear_steeringtorquemap() {
  steeringtorquemap_ = 0u;
  clear_has_steeringtorquemap();
}
inline ::google::protobuf::uint32 SteeringTorqueCtrlPBMsg::steeringtorquemap() const {
  // @@protoc_insertion_point(field_get:vision_messages.SteeringTorqueCtrlPBMsg.SteeringTorqueMap)
  return steeringtorquemap_;
}
inline void SteeringTorqueCtrlPBMsg::set_steeringtorquemap(::google::protobuf::uint32 value) {
  set_has_steeringtorquemap();
  steeringtorquemap_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.SteeringTorqueCtrlPBMsg.SteeringTorqueMap)
}

// optional bool SteeringControlEnabled = 3;
inline bool SteeringTorqueCtrlPBMsg::has_steeringcontrolenabled() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SteeringTorqueCtrlPBMsg::set_has_steeringcontrolenabled() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SteeringTorqueCtrlPBMsg::clear_has_steeringcontrolenabled() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SteeringTorqueCtrlPBMsg::clear_steeringcontrolenabled() {
  steeringcontrolenabled_ = false;
  clear_has_steeringcontrolenabled();
}
inline bool SteeringTorqueCtrlPBMsg::steeringcontrolenabled() const {
  // @@protoc_insertion_point(field_get:vision_messages.SteeringTorqueCtrlPBMsg.SteeringControlEnabled)
  return steeringcontrolenabled_;
}
inline void SteeringTorqueCtrlPBMsg::set_steeringcontrolenabled(bool value) {
  set_has_steeringcontrolenabled();
  steeringcontrolenabled_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.SteeringTorqueCtrlPBMsg.SteeringControlEnabled)
}

// optional bool ManualExtControl = 4;
inline bool SteeringTorqueCtrlPBMsg::has_manualextcontrol() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SteeringTorqueCtrlPBMsg::set_has_manualextcontrol() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SteeringTorqueCtrlPBMsg::clear_has_manualextcontrol() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SteeringTorqueCtrlPBMsg::clear_manualextcontrol() {
  manualextcontrol_ = false;
  clear_has_manualextcontrol();
}
inline bool SteeringTorqueCtrlPBMsg::manualextcontrol() const {
  // @@protoc_insertion_point(field_get:vision_messages.SteeringTorqueCtrlPBMsg.ManualExtControl)
  return manualextcontrol_;
}
inline void SteeringTorqueCtrlPBMsg::set_manualextcontrol(bool value) {
  set_has_manualextcontrol();
  manualextcontrol_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.SteeringTorqueCtrlPBMsg.ManualExtControl)
}

// -------------------------------------------------------------------

// DceEPASteeringStatusPBMsg

// optional double MotorCurrentAmps = 1;
inline bool DceEPASteeringStatusPBMsg::has_motorcurrentamps() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DceEPASteeringStatusPBMsg::set_has_motorcurrentamps() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DceEPASteeringStatusPBMsg::clear_has_motorcurrentamps() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DceEPASteeringStatusPBMsg::clear_motorcurrentamps() {
  motorcurrentamps_ = 0;
  clear_has_motorcurrentamps();
}
inline double DceEPASteeringStatusPBMsg::motorcurrentamps() const {
  // @@protoc_insertion_point(field_get:vision_messages.DceEPASteeringStatusPBMsg.MotorCurrentAmps)
  return motorcurrentamps_;
}
inline void DceEPASteeringStatusPBMsg::set_motorcurrentamps(double value) {
  set_has_motorcurrentamps();
  motorcurrentamps_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.DceEPASteeringStatusPBMsg.MotorCurrentAmps)
}

// optional double PWMDutyCyclePercent = 2;
inline bool DceEPASteeringStatusPBMsg::has_pwmdutycyclepercent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DceEPASteeringStatusPBMsg::set_has_pwmdutycyclepercent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DceEPASteeringStatusPBMsg::clear_has_pwmdutycyclepercent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DceEPASteeringStatusPBMsg::clear_pwmdutycyclepercent() {
  pwmdutycyclepercent_ = 0;
  clear_has_pwmdutycyclepercent();
}
inline double DceEPASteeringStatusPBMsg::pwmdutycyclepercent() const {
  // @@protoc_insertion_point(field_get:vision_messages.DceEPASteeringStatusPBMsg.PWMDutyCyclePercent)
  return pwmdutycyclepercent_;
}
inline void DceEPASteeringStatusPBMsg::set_pwmdutycyclepercent(double value) {
  set_has_pwmdutycyclepercent();
  pwmdutycyclepercent_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.DceEPASteeringStatusPBMsg.PWMDutyCyclePercent)
}

// optional double MotorTorquePercent = 3;
inline bool DceEPASteeringStatusPBMsg::has_motortorquepercent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DceEPASteeringStatusPBMsg::set_has_motortorquepercent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DceEPASteeringStatusPBMsg::clear_has_motortorquepercent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DceEPASteeringStatusPBMsg::clear_motortorquepercent() {
  motortorquepercent_ = 0;
  clear_has_motortorquepercent();
}
inline double DceEPASteeringStatusPBMsg::motortorquepercent() const {
  // @@protoc_insertion_point(field_get:vision_messages.DceEPASteeringStatusPBMsg.MotorTorquePercent)
  return motortorquepercent_;
}
inline void DceEPASteeringStatusPBMsg::set_motortorquepercent(double value) {
  set_has_motortorquepercent();
  motortorquepercent_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.DceEPASteeringStatusPBMsg.MotorTorquePercent)
}

// optional double SupplyVoltage = 4;
inline bool DceEPASteeringStatusPBMsg::has_supplyvoltage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DceEPASteeringStatusPBMsg::set_has_supplyvoltage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DceEPASteeringStatusPBMsg::clear_has_supplyvoltage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DceEPASteeringStatusPBMsg::clear_supplyvoltage() {
  supplyvoltage_ = 0;
  clear_has_supplyvoltage();
}
inline double DceEPASteeringStatusPBMsg::supplyvoltage() const {
  // @@protoc_insertion_point(field_get:vision_messages.DceEPASteeringStatusPBMsg.SupplyVoltage)
  return supplyvoltage_;
}
inline void DceEPASteeringStatusPBMsg::set_supplyvoltage(double value) {
  set_has_supplyvoltage();
  supplyvoltage_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.DceEPASteeringStatusPBMsg.SupplyVoltage)
}

// optional double TempDegC = 5;
inline bool DceEPASteeringStatusPBMsg::has_tempdegc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DceEPASteeringStatusPBMsg::set_has_tempdegc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DceEPASteeringStatusPBMsg::clear_has_tempdegc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DceEPASteeringStatusPBMsg::clear_tempdegc() {
  tempdegc_ = 0;
  clear_has_tempdegc();
}
inline double DceEPASteeringStatusPBMsg::tempdegc() const {
  // @@protoc_insertion_point(field_get:vision_messages.DceEPASteeringStatusPBMsg.TempDegC)
  return tempdegc_;
}
inline void DceEPASteeringStatusPBMsg::set_tempdegc(double value) {
  set_has_tempdegc();
  tempdegc_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.DceEPASteeringStatusPBMsg.TempDegC)
}

// optional double SteeringAngleDeg = 6;
inline bool DceEPASteeringStatusPBMsg::has_steeringangledeg() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DceEPASteeringStatusPBMsg::set_has_steeringangledeg() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DceEPASteeringStatusPBMsg::clear_has_steeringangledeg() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DceEPASteeringStatusPBMsg::clear_steeringangledeg() {
  steeringangledeg_ = 0;
  clear_has_steeringangledeg();
}
inline double DceEPASteeringStatusPBMsg::steeringangledeg() const {
  // @@protoc_insertion_point(field_get:vision_messages.DceEPASteeringStatusPBMsg.SteeringAngleDeg)
  return steeringangledeg_;
}
inline void DceEPASteeringStatusPBMsg::set_steeringangledeg(double value) {
  set_has_steeringangledeg();
  steeringangledeg_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.DceEPASteeringStatusPBMsg.SteeringAngleDeg)
}

// optional int32 SteeringTorqueMapSetting = 7;
inline bool DceEPASteeringStatusPBMsg::has_steeringtorquemapsetting() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DceEPASteeringStatusPBMsg::set_has_steeringtorquemapsetting() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DceEPASteeringStatusPBMsg::clear_has_steeringtorquemapsetting() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DceEPASteeringStatusPBMsg::clear_steeringtorquemapsetting() {
  steeringtorquemapsetting_ = 0;
  clear_has_steeringtorquemapsetting();
}
inline ::google::protobuf::int32 DceEPASteeringStatusPBMsg::steeringtorquemapsetting() const {
  // @@protoc_insertion_point(field_get:vision_messages.DceEPASteeringStatusPBMsg.SteeringTorqueMapSetting)
  return steeringtorquemapsetting_;
}
inline void DceEPASteeringStatusPBMsg::set_steeringtorquemapsetting(::google::protobuf::int32 value) {
  set_has_steeringtorquemapsetting();
  steeringtorquemapsetting_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.DceEPASteeringStatusPBMsg.SteeringTorqueMapSetting)
}

// optional int32 SwitchPosition = 8;
inline bool DceEPASteeringStatusPBMsg::has_switchposition() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DceEPASteeringStatusPBMsg::set_has_switchposition() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DceEPASteeringStatusPBMsg::clear_has_switchposition() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DceEPASteeringStatusPBMsg::clear_switchposition() {
  switchposition_ = 0;
  clear_has_switchposition();
}
inline ::google::protobuf::int32 DceEPASteeringStatusPBMsg::switchposition() const {
  // @@protoc_insertion_point(field_get:vision_messages.DceEPASteeringStatusPBMsg.SwitchPosition)
  return switchposition_;
}
inline void DceEPASteeringStatusPBMsg::set_switchposition(::google::protobuf::int32 value) {
  set_has_switchposition();
  switchposition_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.DceEPASteeringStatusPBMsg.SwitchPosition)
}

// optional int32 TorqueA = 9;
inline bool DceEPASteeringStatusPBMsg::has_torquea() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DceEPASteeringStatusPBMsg::set_has_torquea() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DceEPASteeringStatusPBMsg::clear_has_torquea() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DceEPASteeringStatusPBMsg::clear_torquea() {
  torquea_ = 0;
  clear_has_torquea();
}
inline ::google::protobuf::int32 DceEPASteeringStatusPBMsg::torquea() const {
  // @@protoc_insertion_point(field_get:vision_messages.DceEPASteeringStatusPBMsg.TorqueA)
  return torquea_;
}
inline void DceEPASteeringStatusPBMsg::set_torquea(::google::protobuf::int32 value) {
  set_has_torquea();
  torquea_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.DceEPASteeringStatusPBMsg.TorqueA)
}

// optional int32 TorqueB = 10;
inline bool DceEPASteeringStatusPBMsg::has_torqueb() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DceEPASteeringStatusPBMsg::set_has_torqueb() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DceEPASteeringStatusPBMsg::clear_has_torqueb() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DceEPASteeringStatusPBMsg::clear_torqueb() {
  torqueb_ = 0;
  clear_has_torqueb();
}
inline ::google::protobuf::int32 DceEPASteeringStatusPBMsg::torqueb() const {
  // @@protoc_insertion_point(field_get:vision_messages.DceEPASteeringStatusPBMsg.TorqueB)
  return torqueb_;
}
inline void DceEPASteeringStatusPBMsg::set_torqueb(::google::protobuf::int32 value) {
  set_has_torqueb();
  torqueb_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.DceEPASteeringStatusPBMsg.TorqueB)
}

// optional int32 ErrorCode = 11;
inline bool DceEPASteeringStatusPBMsg::has_errorcode() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DceEPASteeringStatusPBMsg::set_has_errorcode() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DceEPASteeringStatusPBMsg::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DceEPASteeringStatusPBMsg::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 DceEPASteeringStatusPBMsg::errorcode() const {
  // @@protoc_insertion_point(field_get:vision_messages.DceEPASteeringStatusPBMsg.ErrorCode)
  return errorcode_;
}
inline void DceEPASteeringStatusPBMsg::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.DceEPASteeringStatusPBMsg.ErrorCode)
}

// optional int32 StatusFlags = 12;
inline bool DceEPASteeringStatusPBMsg::has_statusflags() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DceEPASteeringStatusPBMsg::set_has_statusflags() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DceEPASteeringStatusPBMsg::clear_has_statusflags() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DceEPASteeringStatusPBMsg::clear_statusflags() {
  statusflags_ = 0;
  clear_has_statusflags();
}
inline ::google::protobuf::int32 DceEPASteeringStatusPBMsg::statusflags() const {
  // @@protoc_insertion_point(field_get:vision_messages.DceEPASteeringStatusPBMsg.StatusFlags)
  return statusflags_;
}
inline void DceEPASteeringStatusPBMsg::set_statusflags(::google::protobuf::int32 value) {
  set_has_statusflags();
  statusflags_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.DceEPASteeringStatusPBMsg.StatusFlags)
}

// optional int32 LimitFlags = 13;
inline bool DceEPASteeringStatusPBMsg::has_limitflags() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DceEPASteeringStatusPBMsg::set_has_limitflags() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DceEPASteeringStatusPBMsg::clear_has_limitflags() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DceEPASteeringStatusPBMsg::clear_limitflags() {
  limitflags_ = 0;
  clear_has_limitflags();
}
inline ::google::protobuf::int32 DceEPASteeringStatusPBMsg::limitflags() const {
  // @@protoc_insertion_point(field_get:vision_messages.DceEPASteeringStatusPBMsg.LimitFlags)
  return limitflags_;
}
inline void DceEPASteeringStatusPBMsg::set_limitflags(::google::protobuf::int32 value) {
  set_has_limitflags();
  limitflags_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.DceEPASteeringStatusPBMsg.LimitFlags)
}

// optional bool ManualExtControl = 14;
inline bool DceEPASteeringStatusPBMsg::has_manualextcontrol() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DceEPASteeringStatusPBMsg::set_has_manualextcontrol() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DceEPASteeringStatusPBMsg::clear_has_manualextcontrol() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DceEPASteeringStatusPBMsg::clear_manualextcontrol() {
  manualextcontrol_ = false;
  clear_has_manualextcontrol();
}
inline bool DceEPASteeringStatusPBMsg::manualextcontrol() const {
  // @@protoc_insertion_point(field_get:vision_messages.DceEPASteeringStatusPBMsg.ManualExtControl)
  return manualextcontrol_;
}
inline void DceEPASteeringStatusPBMsg::set_manualextcontrol(bool value) {
  set_has_manualextcontrol();
  manualextcontrol_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.DceEPASteeringStatusPBMsg.ManualExtControl)
}

// -------------------------------------------------------------------

// LinearActuatorPositionCtrlPBMsg

// optional double PositionPercent = 1;
inline bool LinearActuatorPositionCtrlPBMsg::has_positionpercent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LinearActuatorPositionCtrlPBMsg::set_has_positionpercent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_has_positionpercent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_positionpercent() {
  positionpercent_ = 0;
  clear_has_positionpercent();
}
inline double LinearActuatorPositionCtrlPBMsg::positionpercent() const {
  // @@protoc_insertion_point(field_get:vision_messages.LinearActuatorPositionCtrlPBMsg.PositionPercent)
  return positionpercent_;
}
inline void LinearActuatorPositionCtrlPBMsg::set_positionpercent(double value) {
  set_has_positionpercent();
  positionpercent_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.LinearActuatorPositionCtrlPBMsg.PositionPercent)
}

// optional bool ClutchEnable = 2;
inline bool LinearActuatorPositionCtrlPBMsg::has_clutchenable() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LinearActuatorPositionCtrlPBMsg::set_has_clutchenable() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_has_clutchenable() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_clutchenable() {
  clutchenable_ = false;
  clear_has_clutchenable();
}
inline bool LinearActuatorPositionCtrlPBMsg::clutchenable() const {
  // @@protoc_insertion_point(field_get:vision_messages.LinearActuatorPositionCtrlPBMsg.ClutchEnable)
  return clutchenable_;
}
inline void LinearActuatorPositionCtrlPBMsg::set_clutchenable(bool value) {
  set_has_clutchenable();
  clutchenable_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.LinearActuatorPositionCtrlPBMsg.ClutchEnable)
}

// optional bool MotorEnable = 3;
inline bool LinearActuatorPositionCtrlPBMsg::has_motorenable() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LinearActuatorPositionCtrlPBMsg::set_has_motorenable() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_has_motorenable() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_motorenable() {
  motorenable_ = false;
  clear_has_motorenable();
}
inline bool LinearActuatorPositionCtrlPBMsg::motorenable() const {
  // @@protoc_insertion_point(field_get:vision_messages.LinearActuatorPositionCtrlPBMsg.MotorEnable)
  return motorenable_;
}
inline void LinearActuatorPositionCtrlPBMsg::set_motorenable(bool value) {
  set_has_motorenable();
  motorenable_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.LinearActuatorPositionCtrlPBMsg.MotorEnable)
}

// optional bool ManualExtControl = 4;
inline bool LinearActuatorPositionCtrlPBMsg::has_manualextcontrol() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LinearActuatorPositionCtrlPBMsg::set_has_manualextcontrol() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_has_manualextcontrol() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_manualextcontrol() {
  manualextcontrol_ = false;
  clear_has_manualextcontrol();
}
inline bool LinearActuatorPositionCtrlPBMsg::manualextcontrol() const {
  // @@protoc_insertion_point(field_get:vision_messages.LinearActuatorPositionCtrlPBMsg.ManualExtControl)
  return manualextcontrol_;
}
inline void LinearActuatorPositionCtrlPBMsg::set_manualextcontrol(bool value) {
  set_has_manualextcontrol();
  manualextcontrol_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.LinearActuatorPositionCtrlPBMsg.ManualExtControl)
}

// optional double MotorCurrentAmps = 5;
inline bool LinearActuatorPositionCtrlPBMsg::has_motorcurrentamps() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LinearActuatorPositionCtrlPBMsg::set_has_motorcurrentamps() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_has_motorcurrentamps() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_motorcurrentamps() {
  motorcurrentamps_ = 0;
  clear_has_motorcurrentamps();
}
inline double LinearActuatorPositionCtrlPBMsg::motorcurrentamps() const {
  // @@protoc_insertion_point(field_get:vision_messages.LinearActuatorPositionCtrlPBMsg.MotorCurrentAmps)
  return motorcurrentamps_;
}
inline void LinearActuatorPositionCtrlPBMsg::set_motorcurrentamps(double value) {
  set_has_motorcurrentamps();
  motorcurrentamps_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.LinearActuatorPositionCtrlPBMsg.MotorCurrentAmps)
}

// optional double TempDegC = 6;
inline bool LinearActuatorPositionCtrlPBMsg::has_tempdegc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LinearActuatorPositionCtrlPBMsg::set_has_tempdegc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_has_tempdegc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_tempdegc() {
  tempdegc_ = 0;
  clear_has_tempdegc();
}
inline double LinearActuatorPositionCtrlPBMsg::tempdegc() const {
  // @@protoc_insertion_point(field_get:vision_messages.LinearActuatorPositionCtrlPBMsg.TempDegC)
  return tempdegc_;
}
inline void LinearActuatorPositionCtrlPBMsg::set_tempdegc(double value) {
  set_has_tempdegc();
  tempdegc_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.LinearActuatorPositionCtrlPBMsg.TempDegC)
}

// optional int32 ErrorFlags = 7;
inline bool LinearActuatorPositionCtrlPBMsg::has_errorflags() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LinearActuatorPositionCtrlPBMsg::set_has_errorflags() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_has_errorflags() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_errorflags() {
  errorflags_ = 0;
  clear_has_errorflags();
}
inline ::google::protobuf::int32 LinearActuatorPositionCtrlPBMsg::errorflags() const {
  // @@protoc_insertion_point(field_get:vision_messages.LinearActuatorPositionCtrlPBMsg.ErrorFlags)
  return errorflags_;
}
inline void LinearActuatorPositionCtrlPBMsg::set_errorflags(::google::protobuf::int32 value) {
  set_has_errorflags();
  errorflags_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.LinearActuatorPositionCtrlPBMsg.ErrorFlags)
}

// optional bool ActuatorSetupMode = 8;
inline bool LinearActuatorPositionCtrlPBMsg::has_actuatorsetupmode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LinearActuatorPositionCtrlPBMsg::set_has_actuatorsetupmode() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_has_actuatorsetupmode() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LinearActuatorPositionCtrlPBMsg::clear_actuatorsetupmode() {
  actuatorsetupmode_ = false;
  clear_has_actuatorsetupmode();
}
inline bool LinearActuatorPositionCtrlPBMsg::actuatorsetupmode() const {
  // @@protoc_insertion_point(field_get:vision_messages.LinearActuatorPositionCtrlPBMsg.ActuatorSetupMode)
  return actuatorsetupmode_;
}
inline void LinearActuatorPositionCtrlPBMsg::set_actuatorsetupmode(bool value) {
  set_has_actuatorsetupmode();
  actuatorsetupmode_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.LinearActuatorPositionCtrlPBMsg.ActuatorSetupMode)
}

// -------------------------------------------------------------------

// KarTechLinearActuatorParamsPBMsg

// optional double MinPositionInches = 1;
inline bool KarTechLinearActuatorParamsPBMsg::has_minpositioninches() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KarTechLinearActuatorParamsPBMsg::set_has_minpositioninches() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_has_minpositioninches() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_minpositioninches() {
  minpositioninches_ = 0;
  clear_has_minpositioninches();
}
inline double KarTechLinearActuatorParamsPBMsg::minpositioninches() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorParamsPBMsg.MinPositionInches)
  return minpositioninches_;
}
inline void KarTechLinearActuatorParamsPBMsg::set_minpositioninches(double value) {
  set_has_minpositioninches();
  minpositioninches_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorParamsPBMsg.MinPositionInches)
}

// optional double MaxPositionInches = 2;
inline bool KarTechLinearActuatorParamsPBMsg::has_maxpositioninches() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KarTechLinearActuatorParamsPBMsg::set_has_maxpositioninches() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_has_maxpositioninches() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_maxpositioninches() {
  maxpositioninches_ = 0;
  clear_has_maxpositioninches();
}
inline double KarTechLinearActuatorParamsPBMsg::maxpositioninches() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorParamsPBMsg.MaxPositionInches)
  return maxpositioninches_;
}
inline void KarTechLinearActuatorParamsPBMsg::set_maxpositioninches(double value) {
  set_has_maxpositioninches();
  maxpositioninches_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorParamsPBMsg.MaxPositionInches)
}

// optional double MotorMaxCurrentLimitAmps = 3;
inline bool KarTechLinearActuatorParamsPBMsg::has_motormaxcurrentlimitamps() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KarTechLinearActuatorParamsPBMsg::set_has_motormaxcurrentlimitamps() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_has_motormaxcurrentlimitamps() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_motormaxcurrentlimitamps() {
  motormaxcurrentlimitamps_ = 0;
  clear_has_motormaxcurrentlimitamps();
}
inline double KarTechLinearActuatorParamsPBMsg::motormaxcurrentlimitamps() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorParamsPBMsg.MotorMaxCurrentLimitAmps)
  return motormaxcurrentlimitamps_;
}
inline void KarTechLinearActuatorParamsPBMsg::set_motormaxcurrentlimitamps(double value) {
  set_has_motormaxcurrentlimitamps();
  motormaxcurrentlimitamps_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorParamsPBMsg.MotorMaxCurrentLimitAmps)
}

// optional double FeedbackCtrl_ErrDeadbandInces = 4;
inline bool KarTechLinearActuatorParamsPBMsg::has_feedbackctrl_errdeadbandinces() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void KarTechLinearActuatorParamsPBMsg::set_has_feedbackctrl_errdeadbandinces() {
  _has_bits_[0] |= 0x00000008u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_has_feedbackctrl_errdeadbandinces() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_feedbackctrl_errdeadbandinces() {
  feedbackctrl_errdeadbandinces_ = 0;
  clear_has_feedbackctrl_errdeadbandinces();
}
inline double KarTechLinearActuatorParamsPBMsg::feedbackctrl_errdeadbandinces() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorParamsPBMsg.FeedbackCtrl_ErrDeadbandInces)
  return feedbackctrl_errdeadbandinces_;
}
inline void KarTechLinearActuatorParamsPBMsg::set_feedbackctrl_errdeadbandinces(double value) {
  set_has_feedbackctrl_errdeadbandinces();
  feedbackctrl_errdeadbandinces_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorParamsPBMsg.FeedbackCtrl_ErrDeadbandInces)
}

// optional uint32 FeedbackCtrl_KP = 5;
inline bool KarTechLinearActuatorParamsPBMsg::has_feedbackctrl_kp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void KarTechLinearActuatorParamsPBMsg::set_has_feedbackctrl_kp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_has_feedbackctrl_kp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_feedbackctrl_kp() {
  feedbackctrl_kp_ = 0u;
  clear_has_feedbackctrl_kp();
}
inline ::google::protobuf::uint32 KarTechLinearActuatorParamsPBMsg::feedbackctrl_kp() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorParamsPBMsg.FeedbackCtrl_KP)
  return feedbackctrl_kp_;
}
inline void KarTechLinearActuatorParamsPBMsg::set_feedbackctrl_kp(::google::protobuf::uint32 value) {
  set_has_feedbackctrl_kp();
  feedbackctrl_kp_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorParamsPBMsg.FeedbackCtrl_KP)
}

// optional uint32 FeedbackCtrl_KI = 6;
inline bool KarTechLinearActuatorParamsPBMsg::has_feedbackctrl_ki() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void KarTechLinearActuatorParamsPBMsg::set_has_feedbackctrl_ki() {
  _has_bits_[0] |= 0x00000020u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_has_feedbackctrl_ki() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_feedbackctrl_ki() {
  feedbackctrl_ki_ = 0u;
  clear_has_feedbackctrl_ki();
}
inline ::google::protobuf::uint32 KarTechLinearActuatorParamsPBMsg::feedbackctrl_ki() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorParamsPBMsg.FeedbackCtrl_KI)
  return feedbackctrl_ki_;
}
inline void KarTechLinearActuatorParamsPBMsg::set_feedbackctrl_ki(::google::protobuf::uint32 value) {
  set_has_feedbackctrl_ki();
  feedbackctrl_ki_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorParamsPBMsg.FeedbackCtrl_KI)
}

// optional uint32 FeedbackCtrl_KD = 7;
inline bool KarTechLinearActuatorParamsPBMsg::has_feedbackctrl_kd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void KarTechLinearActuatorParamsPBMsg::set_has_feedbackctrl_kd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_has_feedbackctrl_kd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_feedbackctrl_kd() {
  feedbackctrl_kd_ = 0u;
  clear_has_feedbackctrl_kd();
}
inline ::google::protobuf::uint32 KarTechLinearActuatorParamsPBMsg::feedbackctrl_kd() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorParamsPBMsg.FeedbackCtrl_KD)
  return feedbackctrl_kd_;
}
inline void KarTechLinearActuatorParamsPBMsg::set_feedbackctrl_kd(::google::protobuf::uint32 value) {
  set_has_feedbackctrl_kd();
  feedbackctrl_kd_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorParamsPBMsg.FeedbackCtrl_KD)
}

// optional uint32 FeedbackCtrl_CLFreq = 8;
inline bool KarTechLinearActuatorParamsPBMsg::has_feedbackctrl_clfreq() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void KarTechLinearActuatorParamsPBMsg::set_has_feedbackctrl_clfreq() {
  _has_bits_[0] |= 0x00000080u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_has_feedbackctrl_clfreq() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_feedbackctrl_clfreq() {
  feedbackctrl_clfreq_ = 0u;
  clear_has_feedbackctrl_clfreq();
}
inline ::google::protobuf::uint32 KarTechLinearActuatorParamsPBMsg::feedbackctrl_clfreq() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorParamsPBMsg.FeedbackCtrl_CLFreq)
  return feedbackctrl_clfreq_;
}
inline void KarTechLinearActuatorParamsPBMsg::set_feedbackctrl_clfreq(::google::protobuf::uint32 value) {
  set_has_feedbackctrl_clfreq();
  feedbackctrl_clfreq_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorParamsPBMsg.FeedbackCtrl_CLFreq)
}

// optional uint32 Motor_MinPWM = 9;
inline bool KarTechLinearActuatorParamsPBMsg::has_motor_minpwm() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void KarTechLinearActuatorParamsPBMsg::set_has_motor_minpwm() {
  _has_bits_[0] |= 0x00000100u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_has_motor_minpwm() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_motor_minpwm() {
  motor_minpwm_ = 0u;
  clear_has_motor_minpwm();
}
inline ::google::protobuf::uint32 KarTechLinearActuatorParamsPBMsg::motor_minpwm() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorParamsPBMsg.Motor_MinPWM)
  return motor_minpwm_;
}
inline void KarTechLinearActuatorParamsPBMsg::set_motor_minpwm(::google::protobuf::uint32 value) {
  set_has_motor_minpwm();
  motor_minpwm_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorParamsPBMsg.Motor_MinPWM)
}

// optional uint32 Motor_MaxPWM = 10;
inline bool KarTechLinearActuatorParamsPBMsg::has_motor_maxpwm() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void KarTechLinearActuatorParamsPBMsg::set_has_motor_maxpwm() {
  _has_bits_[0] |= 0x00000200u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_has_motor_maxpwm() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_motor_maxpwm() {
  motor_maxpwm_ = 0u;
  clear_has_motor_maxpwm();
}
inline ::google::protobuf::uint32 KarTechLinearActuatorParamsPBMsg::motor_maxpwm() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorParamsPBMsg.Motor_MaxPWM)
  return motor_maxpwm_;
}
inline void KarTechLinearActuatorParamsPBMsg::set_motor_maxpwm(::google::protobuf::uint32 value) {
  set_has_motor_maxpwm();
  motor_maxpwm_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorParamsPBMsg.Motor_MaxPWM)
}

// optional uint32 Motor_pwmFreq = 11;
inline bool KarTechLinearActuatorParamsPBMsg::has_motor_pwmfreq() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void KarTechLinearActuatorParamsPBMsg::set_has_motor_pwmfreq() {
  _has_bits_[0] |= 0x00000400u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_has_motor_pwmfreq() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_motor_pwmfreq() {
  motor_pwmfreq_ = 0u;
  clear_has_motor_pwmfreq();
}
inline ::google::protobuf::uint32 KarTechLinearActuatorParamsPBMsg::motor_pwmfreq() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorParamsPBMsg.Motor_pwmFreq)
  return motor_pwmfreq_;
}
inline void KarTechLinearActuatorParamsPBMsg::set_motor_pwmfreq(::google::protobuf::uint32 value) {
  set_has_motor_pwmfreq();
  motor_pwmfreq_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorParamsPBMsg.Motor_pwmFreq)
}

// optional uint32 PositionReachedErrorTimeMSec = 12;
inline bool KarTechLinearActuatorParamsPBMsg::has_positionreachederrortimemsec() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void KarTechLinearActuatorParamsPBMsg::set_has_positionreachederrortimemsec() {
  _has_bits_[0] |= 0x00000800u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_has_positionreachederrortimemsec() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void KarTechLinearActuatorParamsPBMsg::clear_positionreachederrortimemsec() {
  positionreachederrortimemsec_ = 0u;
  clear_has_positionreachederrortimemsec();
}
inline ::google::protobuf::uint32 KarTechLinearActuatorParamsPBMsg::positionreachederrortimemsec() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorParamsPBMsg.PositionReachedErrorTimeMSec)
  return positionreachederrortimemsec_;
}
inline void KarTechLinearActuatorParamsPBMsg::set_positionreachederrortimemsec(::google::protobuf::uint32 value) {
  set_has_positionreachederrortimemsec();
  positionreachederrortimemsec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorParamsPBMsg.PositionReachedErrorTimeMSec)
}

// -------------------------------------------------------------------

// KarTechLinearActuatorSetupPBMsg

// optional bool ResetOutputs = 1;
inline bool KarTechLinearActuatorSetupPBMsg::has_resetoutputs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KarTechLinearActuatorSetupPBMsg::set_has_resetoutputs() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KarTechLinearActuatorSetupPBMsg::clear_has_resetoutputs() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KarTechLinearActuatorSetupPBMsg::clear_resetoutputs() {
  resetoutputs_ = false;
  clear_has_resetoutputs();
}
inline bool KarTechLinearActuatorSetupPBMsg::resetoutputs() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorSetupPBMsg.ResetOutputs)
  return resetoutputs_;
}
inline void KarTechLinearActuatorSetupPBMsg::set_resetoutputs(bool value) {
  set_has_resetoutputs();
  resetoutputs_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorSetupPBMsg.ResetOutputs)
}

// optional bool ResetHardwareCfgs = 2;
inline bool KarTechLinearActuatorSetupPBMsg::has_resethardwarecfgs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KarTechLinearActuatorSetupPBMsg::set_has_resethardwarecfgs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KarTechLinearActuatorSetupPBMsg::clear_has_resethardwarecfgs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KarTechLinearActuatorSetupPBMsg::clear_resethardwarecfgs() {
  resethardwarecfgs_ = false;
  clear_has_resethardwarecfgs();
}
inline bool KarTechLinearActuatorSetupPBMsg::resethardwarecfgs() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorSetupPBMsg.ResetHardwareCfgs)
  return resethardwarecfgs_;
}
inline void KarTechLinearActuatorSetupPBMsg::set_resethardwarecfgs(bool value) {
  set_has_resethardwarecfgs();
  resethardwarecfgs_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorSetupPBMsg.ResetHardwareCfgs)
}

// optional bool ResetUserCfgs = 3;
inline bool KarTechLinearActuatorSetupPBMsg::has_resetusercfgs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KarTechLinearActuatorSetupPBMsg::set_has_resetusercfgs() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KarTechLinearActuatorSetupPBMsg::clear_has_resetusercfgs() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KarTechLinearActuatorSetupPBMsg::clear_resetusercfgs() {
  resetusercfgs_ = false;
  clear_has_resetusercfgs();
}
inline bool KarTechLinearActuatorSetupPBMsg::resetusercfgs() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorSetupPBMsg.ResetUserCfgs)
  return resetusercfgs_;
}
inline void KarTechLinearActuatorSetupPBMsg::set_resetusercfgs(bool value) {
  set_has_resetusercfgs();
  resetusercfgs_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorSetupPBMsg.ResetUserCfgs)
}

// optional bool ResetAll = 4;
inline bool KarTechLinearActuatorSetupPBMsg::has_resetall() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void KarTechLinearActuatorSetupPBMsg::set_has_resetall() {
  _has_bits_[0] |= 0x00000008u;
}
inline void KarTechLinearActuatorSetupPBMsg::clear_has_resetall() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void KarTechLinearActuatorSetupPBMsg::clear_resetall() {
  resetall_ = false;
  clear_has_resetall();
}
inline bool KarTechLinearActuatorSetupPBMsg::resetall() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorSetupPBMsg.ResetAll)
  return resetall_;
}
inline void KarTechLinearActuatorSetupPBMsg::set_resetall(bool value) {
  set_has_resetall();
  resetall_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorSetupPBMsg.ResetAll)
}

// optional bool AutoZeroCal = 5;
inline bool KarTechLinearActuatorSetupPBMsg::has_autozerocal() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void KarTechLinearActuatorSetupPBMsg::set_has_autozerocal() {
  _has_bits_[0] |= 0x00000010u;
}
inline void KarTechLinearActuatorSetupPBMsg::clear_has_autozerocal() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void KarTechLinearActuatorSetupPBMsg::clear_autozerocal() {
  autozerocal_ = false;
  clear_has_autozerocal();
}
inline bool KarTechLinearActuatorSetupPBMsg::autozerocal() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorSetupPBMsg.AutoZeroCal)
  return autozerocal_;
}
inline void KarTechLinearActuatorSetupPBMsg::set_autozerocal(bool value) {
  set_has_autozerocal();
  autozerocal_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorSetupPBMsg.AutoZeroCal)
}

// optional bool SetCanCommandResponsIDs = 6;
inline bool KarTechLinearActuatorSetupPBMsg::has_setcancommandresponsids() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void KarTechLinearActuatorSetupPBMsg::set_has_setcancommandresponsids() {
  _has_bits_[0] |= 0x00000020u;
}
inline void KarTechLinearActuatorSetupPBMsg::clear_has_setcancommandresponsids() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void KarTechLinearActuatorSetupPBMsg::clear_setcancommandresponsids() {
  setcancommandresponsids_ = false;
  clear_has_setcancommandresponsids();
}
inline bool KarTechLinearActuatorSetupPBMsg::setcancommandresponsids() const {
  // @@protoc_insertion_point(field_get:vision_messages.KarTechLinearActuatorSetupPBMsg.SetCanCommandResponsIDs)
  return setcancommandresponsids_;
}
inline void KarTechLinearActuatorSetupPBMsg::set_setcancommandresponsids(bool value) {
  set_has_setcancommandresponsids();
  setcancommandresponsids_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.KarTechLinearActuatorSetupPBMsg.SetCanCommandResponsIDs)
}

// -------------------------------------------------------------------

// HeadOrientationPBMsg

// optional double HeadRollDegrees = 1;
inline bool HeadOrientationPBMsg::has_headrolldegrees() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeadOrientationPBMsg::set_has_headrolldegrees() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeadOrientationPBMsg::clear_has_headrolldegrees() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeadOrientationPBMsg::clear_headrolldegrees() {
  headrolldegrees_ = 0;
  clear_has_headrolldegrees();
}
inline double HeadOrientationPBMsg::headrolldegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadOrientationPBMsg.HeadRollDegrees)
  return headrolldegrees_;
}
inline void HeadOrientationPBMsg::set_headrolldegrees(double value) {
  set_has_headrolldegrees();
  headrolldegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadOrientationPBMsg.HeadRollDegrees)
}

// optional double HeadPitchDegrees = 2;
inline bool HeadOrientationPBMsg::has_headpitchdegrees() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeadOrientationPBMsg::set_has_headpitchdegrees() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeadOrientationPBMsg::clear_has_headpitchdegrees() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeadOrientationPBMsg::clear_headpitchdegrees() {
  headpitchdegrees_ = 0;
  clear_has_headpitchdegrees();
}
inline double HeadOrientationPBMsg::headpitchdegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadOrientationPBMsg.HeadPitchDegrees)
  return headpitchdegrees_;
}
inline void HeadOrientationPBMsg::set_headpitchdegrees(double value) {
  set_has_headpitchdegrees();
  headpitchdegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadOrientationPBMsg.HeadPitchDegrees)
}

// optional double HeadYawDegrees = 3;
inline bool HeadOrientationPBMsg::has_headyawdegrees() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeadOrientationPBMsg::set_has_headyawdegrees() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeadOrientationPBMsg::clear_has_headyawdegrees() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeadOrientationPBMsg::clear_headyawdegrees() {
  headyawdegrees_ = 0;
  clear_has_headyawdegrees();
}
inline double HeadOrientationPBMsg::headyawdegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadOrientationPBMsg.HeadYawDegrees)
  return headyawdegrees_;
}
inline void HeadOrientationPBMsg::set_headyawdegrees(double value) {
  set_has_headyawdegrees();
  headyawdegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadOrientationPBMsg.HeadYawDegrees)
}

// optional double CovarianceNorm = 4;
inline bool HeadOrientationPBMsg::has_covariancenorm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeadOrientationPBMsg::set_has_covariancenorm() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeadOrientationPBMsg::clear_has_covariancenorm() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeadOrientationPBMsg::clear_covariancenorm() {
  covariancenorm_ = 0;
  clear_has_covariancenorm();
}
inline double HeadOrientationPBMsg::covariancenorm() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadOrientationPBMsg.CovarianceNorm)
  return covariancenorm_;
}
inline void HeadOrientationPBMsg::set_covariancenorm(double value) {
  set_has_covariancenorm();
  covariancenorm_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadOrientationPBMsg.CovarianceNorm)
}

// -------------------------------------------------------------------

// SipAndPuffPBMsg

// optional double SipAndPuffPecent = 1;
inline bool SipAndPuffPBMsg::has_sipandpuffpecent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SipAndPuffPBMsg::set_has_sipandpuffpecent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SipAndPuffPBMsg::clear_has_sipandpuffpecent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SipAndPuffPBMsg::clear_sipandpuffpecent() {
  sipandpuffpecent_ = 0;
  clear_has_sipandpuffpecent();
}
inline double SipAndPuffPBMsg::sipandpuffpecent() const {
  // @@protoc_insertion_point(field_get:vision_messages.SipAndPuffPBMsg.SipAndPuffPecent)
  return sipandpuffpecent_;
}
inline void SipAndPuffPBMsg::set_sipandpuffpecent(double value) {
  set_has_sipandpuffpecent();
  sipandpuffpecent_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.SipAndPuffPBMsg.SipAndPuffPecent)
}

// optional double SipAndPuffIntegralPercent = 2;
inline bool SipAndPuffPBMsg::has_sipandpuffintegralpercent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SipAndPuffPBMsg::set_has_sipandpuffintegralpercent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SipAndPuffPBMsg::clear_has_sipandpuffintegralpercent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SipAndPuffPBMsg::clear_sipandpuffintegralpercent() {
  sipandpuffintegralpercent_ = 0;
  clear_has_sipandpuffintegralpercent();
}
inline double SipAndPuffPBMsg::sipandpuffintegralpercent() const {
  // @@protoc_insertion_point(field_get:vision_messages.SipAndPuffPBMsg.SipAndPuffIntegralPercent)
  return sipandpuffintegralpercent_;
}
inline void SipAndPuffPBMsg::set_sipandpuffintegralpercent(double value) {
  set_has_sipandpuffintegralpercent();
  sipandpuffintegralpercent_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.SipAndPuffPBMsg.SipAndPuffIntegralPercent)
}

// -------------------------------------------------------------------

// IMUCommandResponsePBMsg

// optional bool IMURemoteCtrlEnable = 1;
inline bool IMUCommandResponsePBMsg::has_imuremotectrlenable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMUCommandResponsePBMsg::set_has_imuremotectrlenable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMUCommandResponsePBMsg::clear_has_imuremotectrlenable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMUCommandResponsePBMsg::clear_imuremotectrlenable() {
  imuremotectrlenable_ = false;
  clear_has_imuremotectrlenable();
}
inline bool IMUCommandResponsePBMsg::imuremotectrlenable() const {
  // @@protoc_insertion_point(field_get:vision_messages.IMUCommandResponsePBMsg.IMURemoteCtrlEnable)
  return imuremotectrlenable_;
}
inline void IMUCommandResponsePBMsg::set_imuremotectrlenable(bool value) {
  set_has_imuremotectrlenable();
  imuremotectrlenable_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.IMUCommandResponsePBMsg.IMURemoteCtrlEnable)
}

// optional string CmdRspMsg = 2;
inline bool IMUCommandResponsePBMsg::has_cmdrspmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMUCommandResponsePBMsg::set_has_cmdrspmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMUCommandResponsePBMsg::clear_has_cmdrspmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMUCommandResponsePBMsg::clear_cmdrspmsg() {
  cmdrspmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmdrspmsg();
}
inline const ::std::string& IMUCommandResponsePBMsg::cmdrspmsg() const {
  // @@protoc_insertion_point(field_get:vision_messages.IMUCommandResponsePBMsg.CmdRspMsg)
  return cmdrspmsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMUCommandResponsePBMsg::set_cmdrspmsg(const ::std::string& value) {
  set_has_cmdrspmsg();
  cmdrspmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.IMUCommandResponsePBMsg.CmdRspMsg)
}
inline void IMUCommandResponsePBMsg::set_cmdrspmsg(const char* value) {
  set_has_cmdrspmsg();
  cmdrspmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.IMUCommandResponsePBMsg.CmdRspMsg)
}
inline void IMUCommandResponsePBMsg::set_cmdrspmsg(const char* value, size_t size) {
  set_has_cmdrspmsg();
  cmdrspmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.IMUCommandResponsePBMsg.CmdRspMsg)
}
inline ::std::string* IMUCommandResponsePBMsg::mutable_cmdrspmsg() {
  set_has_cmdrspmsg();
  // @@protoc_insertion_point(field_mutable:vision_messages.IMUCommandResponsePBMsg.CmdRspMsg)
  return cmdrspmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMUCommandResponsePBMsg::release_cmdrspmsg() {
  // @@protoc_insertion_point(field_release:vision_messages.IMUCommandResponsePBMsg.CmdRspMsg)
  clear_has_cmdrspmsg();
  return cmdrspmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMUCommandResponsePBMsg::set_allocated_cmdrspmsg(::std::string* cmdrspmsg) {
  if (cmdrspmsg != NULL) {
    set_has_cmdrspmsg();
  } else {
    clear_has_cmdrspmsg();
  }
  cmdrspmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmdrspmsg);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.IMUCommandResponsePBMsg.CmdRspMsg)
}

// -------------------------------------------------------------------

// PlaybackControlPBMsg

// optional string DataLogDirectory = 1;
inline bool PlaybackControlPBMsg::has_datalogdirectory() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlaybackControlPBMsg::set_has_datalogdirectory() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlaybackControlPBMsg::clear_has_datalogdirectory() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlaybackControlPBMsg::clear_datalogdirectory() {
  datalogdirectory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_datalogdirectory();
}
inline const ::std::string& PlaybackControlPBMsg::datalogdirectory() const {
  // @@protoc_insertion_point(field_get:vision_messages.PlaybackControlPBMsg.DataLogDirectory)
  return datalogdirectory_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlaybackControlPBMsg::set_datalogdirectory(const ::std::string& value) {
  set_has_datalogdirectory();
  datalogdirectory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vision_messages.PlaybackControlPBMsg.DataLogDirectory)
}
inline void PlaybackControlPBMsg::set_datalogdirectory(const char* value) {
  set_has_datalogdirectory();
  datalogdirectory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vision_messages.PlaybackControlPBMsg.DataLogDirectory)
}
inline void PlaybackControlPBMsg::set_datalogdirectory(const char* value, size_t size) {
  set_has_datalogdirectory();
  datalogdirectory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vision_messages.PlaybackControlPBMsg.DataLogDirectory)
}
inline ::std::string* PlaybackControlPBMsg::mutable_datalogdirectory() {
  set_has_datalogdirectory();
  // @@protoc_insertion_point(field_mutable:vision_messages.PlaybackControlPBMsg.DataLogDirectory)
  return datalogdirectory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlaybackControlPBMsg::release_datalogdirectory() {
  // @@protoc_insertion_point(field_release:vision_messages.PlaybackControlPBMsg.DataLogDirectory)
  clear_has_datalogdirectory();
  return datalogdirectory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlaybackControlPBMsg::set_allocated_datalogdirectory(::std::string* datalogdirectory) {
  if (datalogdirectory != NULL) {
    set_has_datalogdirectory();
  } else {
    clear_has_datalogdirectory();
  }
  datalogdirectory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datalogdirectory);
  // @@protoc_insertion_point(field_set_allocated:vision_messages.PlaybackControlPBMsg.DataLogDirectory)
}

// optional bool EnablePlayback = 2;
inline bool PlaybackControlPBMsg::has_enableplayback() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlaybackControlPBMsg::set_has_enableplayback() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlaybackControlPBMsg::clear_has_enableplayback() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlaybackControlPBMsg::clear_enableplayback() {
  enableplayback_ = false;
  clear_has_enableplayback();
}
inline bool PlaybackControlPBMsg::enableplayback() const {
  // @@protoc_insertion_point(field_get:vision_messages.PlaybackControlPBMsg.EnablePlayback)
  return enableplayback_;
}
inline void PlaybackControlPBMsg::set_enableplayback(bool value) {
  set_has_enableplayback();
  enableplayback_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.PlaybackControlPBMsg.EnablePlayback)
}

// optional bool LoopBackToStartOfDataRecords = 3;
inline bool PlaybackControlPBMsg::has_loopbacktostartofdatarecords() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlaybackControlPBMsg::set_has_loopbacktostartofdatarecords() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlaybackControlPBMsg::clear_has_loopbacktostartofdatarecords() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlaybackControlPBMsg::clear_loopbacktostartofdatarecords() {
  loopbacktostartofdatarecords_ = false;
  clear_has_loopbacktostartofdatarecords();
}
inline bool PlaybackControlPBMsg::loopbacktostartofdatarecords() const {
  // @@protoc_insertion_point(field_get:vision_messages.PlaybackControlPBMsg.LoopBackToStartOfDataRecords)
  return loopbacktostartofdatarecords_;
}
inline void PlaybackControlPBMsg::set_loopbacktostartofdatarecords(bool value) {
  set_has_loopbacktostartofdatarecords();
  loopbacktostartofdatarecords_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.PlaybackControlPBMsg.LoopBackToStartOfDataRecords)
}

// optional bool StartPlayback = 4;
inline bool PlaybackControlPBMsg::has_startplayback() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlaybackControlPBMsg::set_has_startplayback() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlaybackControlPBMsg::clear_has_startplayback() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlaybackControlPBMsg::clear_startplayback() {
  startplayback_ = false;
  clear_has_startplayback();
}
inline bool PlaybackControlPBMsg::startplayback() const {
  // @@protoc_insertion_point(field_get:vision_messages.PlaybackControlPBMsg.StartPlayback)
  return startplayback_;
}
inline void PlaybackControlPBMsg::set_startplayback(bool value) {
  set_has_startplayback();
  startplayback_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.PlaybackControlPBMsg.StartPlayback)
}

// optional bool TimeSyncPlayback = 5;
inline bool PlaybackControlPBMsg::has_timesyncplayback() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlaybackControlPBMsg::set_has_timesyncplayback() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlaybackControlPBMsg::clear_has_timesyncplayback() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlaybackControlPBMsg::clear_timesyncplayback() {
  timesyncplayback_ = false;
  clear_has_timesyncplayback();
}
inline bool PlaybackControlPBMsg::timesyncplayback() const {
  // @@protoc_insertion_point(field_get:vision_messages.PlaybackControlPBMsg.TimeSyncPlayback)
  return timesyncplayback_;
}
inline void PlaybackControlPBMsg::set_timesyncplayback(bool value) {
  set_has_timesyncplayback();
  timesyncplayback_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.PlaybackControlPBMsg.TimeSyncPlayback)
}

// optional bool ResetPlayback = 6;
inline bool PlaybackControlPBMsg::has_resetplayback() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlaybackControlPBMsg::set_has_resetplayback() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlaybackControlPBMsg::clear_has_resetplayback() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlaybackControlPBMsg::clear_resetplayback() {
  resetplayback_ = false;
  clear_has_resetplayback();
}
inline bool PlaybackControlPBMsg::resetplayback() const {
  // @@protoc_insertion_point(field_get:vision_messages.PlaybackControlPBMsg.ResetPlayback)
  return resetplayback_;
}
inline void PlaybackControlPBMsg::set_resetplayback(bool value) {
  set_has_resetplayback();
  resetplayback_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.PlaybackControlPBMsg.ResetPlayback)
}

// optional double PlayForTimeSeconds = 7;
inline bool PlaybackControlPBMsg::has_playfortimeseconds() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlaybackControlPBMsg::set_has_playfortimeseconds() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlaybackControlPBMsg::clear_has_playfortimeseconds() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlaybackControlPBMsg::clear_playfortimeseconds() {
  playfortimeseconds_ = 0;
  clear_has_playfortimeseconds();
}
inline double PlaybackControlPBMsg::playfortimeseconds() const {
  // @@protoc_insertion_point(field_get:vision_messages.PlaybackControlPBMsg.PlayForTimeSeconds)
  return playfortimeseconds_;
}
inline void PlaybackControlPBMsg::set_playfortimeseconds(double value) {
  set_has_playfortimeseconds();
  playfortimeseconds_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.PlaybackControlPBMsg.PlayForTimeSeconds)
}

// -------------------------------------------------------------------

// HeadTrackingControlPBMsg

// optional int32 Canny_low = 1;
inline bool HeadTrackingControlPBMsg::has_canny_low() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeadTrackingControlPBMsg::set_has_canny_low() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeadTrackingControlPBMsg::clear_has_canny_low() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeadTrackingControlPBMsg::clear_canny_low() {
  canny_low_ = 0;
  clear_has_canny_low();
}
inline ::google::protobuf::int32 HeadTrackingControlPBMsg::canny_low() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadTrackingControlPBMsg.Canny_low)
  return canny_low_;
}
inline void HeadTrackingControlPBMsg::set_canny_low(::google::protobuf::int32 value) {
  set_has_canny_low();
  canny_low_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadTrackingControlPBMsg.Canny_low)
}

// optional int32 Canny_high = 2;
inline bool HeadTrackingControlPBMsg::has_canny_high() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeadTrackingControlPBMsg::set_has_canny_high() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeadTrackingControlPBMsg::clear_has_canny_high() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeadTrackingControlPBMsg::clear_canny_high() {
  canny_high_ = 0;
  clear_has_canny_high();
}
inline ::google::protobuf::int32 HeadTrackingControlPBMsg::canny_high() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadTrackingControlPBMsg.Canny_high)
  return canny_high_;
}
inline void HeadTrackingControlPBMsg::set_canny_high(::google::protobuf::int32 value) {
  set_has_canny_high();
  canny_high_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadTrackingControlPBMsg.Canny_high)
}

// optional int32 GlyphAreaPixels_min = 3;
inline bool HeadTrackingControlPBMsg::has_glyphareapixels_min() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeadTrackingControlPBMsg::set_has_glyphareapixels_min() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeadTrackingControlPBMsg::clear_has_glyphareapixels_min() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeadTrackingControlPBMsg::clear_glyphareapixels_min() {
  glyphareapixels_min_ = 0;
  clear_has_glyphareapixels_min();
}
inline ::google::protobuf::int32 HeadTrackingControlPBMsg::glyphareapixels_min() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadTrackingControlPBMsg.GlyphAreaPixels_min)
  return glyphareapixels_min_;
}
inline void HeadTrackingControlPBMsg::set_glyphareapixels_min(::google::protobuf::int32 value) {
  set_has_glyphareapixels_min();
  glyphareapixels_min_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadTrackingControlPBMsg.GlyphAreaPixels_min)
}

// optional int32 GlyphAreaPixels_max = 4;
inline bool HeadTrackingControlPBMsg::has_glyphareapixels_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeadTrackingControlPBMsg::set_has_glyphareapixels_max() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeadTrackingControlPBMsg::clear_has_glyphareapixels_max() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeadTrackingControlPBMsg::clear_glyphareapixels_max() {
  glyphareapixels_max_ = 0;
  clear_has_glyphareapixels_max();
}
inline ::google::protobuf::int32 HeadTrackingControlPBMsg::glyphareapixels_max() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadTrackingControlPBMsg.GlyphAreaPixels_max)
  return glyphareapixels_max_;
}
inline void HeadTrackingControlPBMsg::set_glyphareapixels_max(::google::protobuf::int32 value) {
  set_has_glyphareapixels_max();
  glyphareapixels_max_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadTrackingControlPBMsg.GlyphAreaPixels_max)
}

// optional int32 NumberOfIterations = 5;
inline bool HeadTrackingControlPBMsg::has_numberofiterations() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HeadTrackingControlPBMsg::set_has_numberofiterations() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HeadTrackingControlPBMsg::clear_has_numberofiterations() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HeadTrackingControlPBMsg::clear_numberofiterations() {
  numberofiterations_ = 0;
  clear_has_numberofiterations();
}
inline ::google::protobuf::int32 HeadTrackingControlPBMsg::numberofiterations() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadTrackingControlPBMsg.NumberOfIterations)
  return numberofiterations_;
}
inline void HeadTrackingControlPBMsg::set_numberofiterations(::google::protobuf::int32 value) {
  set_has_numberofiterations();
  numberofiterations_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadTrackingControlPBMsg.NumberOfIterations)
}

// optional double ReprojectionErrorDistance = 6;
inline bool HeadTrackingControlPBMsg::has_reprojectionerrordistance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HeadTrackingControlPBMsg::set_has_reprojectionerrordistance() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HeadTrackingControlPBMsg::clear_has_reprojectionerrordistance() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HeadTrackingControlPBMsg::clear_reprojectionerrordistance() {
  reprojectionerrordistance_ = 0;
  clear_has_reprojectionerrordistance();
}
inline double HeadTrackingControlPBMsg::reprojectionerrordistance() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadTrackingControlPBMsg.ReprojectionErrorDistance)
  return reprojectionerrordistance_;
}
inline void HeadTrackingControlPBMsg::set_reprojectionerrordistance(double value) {
  set_has_reprojectionerrordistance();
  reprojectionerrordistance_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadTrackingControlPBMsg.ReprojectionErrorDistance)
}

// optional double ConfidencePercent = 7;
inline bool HeadTrackingControlPBMsg::has_confidencepercent() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HeadTrackingControlPBMsg::set_has_confidencepercent() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HeadTrackingControlPBMsg::clear_has_confidencepercent() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HeadTrackingControlPBMsg::clear_confidencepercent() {
  confidencepercent_ = 0;
  clear_has_confidencepercent();
}
inline double HeadTrackingControlPBMsg::confidencepercent() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadTrackingControlPBMsg.ConfidencePercent)
  return confidencepercent_;
}
inline void HeadTrackingControlPBMsg::set_confidencepercent(double value) {
  set_has_confidencepercent();
  confidencepercent_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadTrackingControlPBMsg.ConfidencePercent)
}

// optional uint32 HeadTrackingImageDisplayType = 8;
inline bool HeadTrackingControlPBMsg::has_headtrackingimagedisplaytype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HeadTrackingControlPBMsg::set_has_headtrackingimagedisplaytype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HeadTrackingControlPBMsg::clear_has_headtrackingimagedisplaytype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HeadTrackingControlPBMsg::clear_headtrackingimagedisplaytype() {
  headtrackingimagedisplaytype_ = 0u;
  clear_has_headtrackingimagedisplaytype();
}
inline ::google::protobuf::uint32 HeadTrackingControlPBMsg::headtrackingimagedisplaytype() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadTrackingControlPBMsg.HeadTrackingImageDisplayType)
  return headtrackingimagedisplaytype_;
}
inline void HeadTrackingControlPBMsg::set_headtrackingimagedisplaytype(::google::protobuf::uint32 value) {
  set_has_headtrackingimagedisplaytype();
  headtrackingimagedisplaytype_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadTrackingControlPBMsg.HeadTrackingImageDisplayType)
}

// optional uint32 GlyphModelIndex = 9;
inline bool HeadTrackingControlPBMsg::has_glyphmodelindex() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HeadTrackingControlPBMsg::set_has_glyphmodelindex() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HeadTrackingControlPBMsg::clear_has_glyphmodelindex() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HeadTrackingControlPBMsg::clear_glyphmodelindex() {
  glyphmodelindex_ = 0u;
  clear_has_glyphmodelindex();
}
inline ::google::protobuf::uint32 HeadTrackingControlPBMsg::glyphmodelindex() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadTrackingControlPBMsg.GlyphModelIndex)
  return glyphmodelindex_;
}
inline void HeadTrackingControlPBMsg::set_glyphmodelindex(::google::protobuf::uint32 value) {
  set_has_glyphmodelindex();
  glyphmodelindex_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadTrackingControlPBMsg.GlyphModelIndex)
}

// -------------------------------------------------------------------

// TrackHeadOrientationPBMsg

// optional double HeadOrientationQuaternion_W = 1;
inline bool TrackHeadOrientationPBMsg::has_headorientationquaternion_w() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrackHeadOrientationPBMsg::set_has_headorientationquaternion_w() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrackHeadOrientationPBMsg::clear_has_headorientationquaternion_w() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrackHeadOrientationPBMsg::clear_headorientationquaternion_w() {
  headorientationquaternion_w_ = 0;
  clear_has_headorientationquaternion_w();
}
inline double TrackHeadOrientationPBMsg::headorientationquaternion_w() const {
  // @@protoc_insertion_point(field_get:vision_messages.TrackHeadOrientationPBMsg.HeadOrientationQuaternion_W)
  return headorientationquaternion_w_;
}
inline void TrackHeadOrientationPBMsg::set_headorientationquaternion_w(double value) {
  set_has_headorientationquaternion_w();
  headorientationquaternion_w_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TrackHeadOrientationPBMsg.HeadOrientationQuaternion_W)
}

// optional double HeadOrientationQuaternion_X = 2;
inline bool TrackHeadOrientationPBMsg::has_headorientationquaternion_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrackHeadOrientationPBMsg::set_has_headorientationquaternion_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrackHeadOrientationPBMsg::clear_has_headorientationquaternion_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrackHeadOrientationPBMsg::clear_headorientationquaternion_x() {
  headorientationquaternion_x_ = 0;
  clear_has_headorientationquaternion_x();
}
inline double TrackHeadOrientationPBMsg::headorientationquaternion_x() const {
  // @@protoc_insertion_point(field_get:vision_messages.TrackHeadOrientationPBMsg.HeadOrientationQuaternion_X)
  return headorientationquaternion_x_;
}
inline void TrackHeadOrientationPBMsg::set_headorientationquaternion_x(double value) {
  set_has_headorientationquaternion_x();
  headorientationquaternion_x_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TrackHeadOrientationPBMsg.HeadOrientationQuaternion_X)
}

// optional double HeadOrientationQuaternion_Y = 3;
inline bool TrackHeadOrientationPBMsg::has_headorientationquaternion_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TrackHeadOrientationPBMsg::set_has_headorientationquaternion_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TrackHeadOrientationPBMsg::clear_has_headorientationquaternion_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TrackHeadOrientationPBMsg::clear_headorientationquaternion_y() {
  headorientationquaternion_y_ = 0;
  clear_has_headorientationquaternion_y();
}
inline double TrackHeadOrientationPBMsg::headorientationquaternion_y() const {
  // @@protoc_insertion_point(field_get:vision_messages.TrackHeadOrientationPBMsg.HeadOrientationQuaternion_Y)
  return headorientationquaternion_y_;
}
inline void TrackHeadOrientationPBMsg::set_headorientationquaternion_y(double value) {
  set_has_headorientationquaternion_y();
  headorientationquaternion_y_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TrackHeadOrientationPBMsg.HeadOrientationQuaternion_Y)
}

// optional double HeadOrientationQuaternion_Z = 4;
inline bool TrackHeadOrientationPBMsg::has_headorientationquaternion_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TrackHeadOrientationPBMsg::set_has_headorientationquaternion_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TrackHeadOrientationPBMsg::clear_has_headorientationquaternion_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TrackHeadOrientationPBMsg::clear_headorientationquaternion_z() {
  headorientationquaternion_z_ = 0;
  clear_has_headorientationquaternion_z();
}
inline double TrackHeadOrientationPBMsg::headorientationquaternion_z() const {
  // @@protoc_insertion_point(field_get:vision_messages.TrackHeadOrientationPBMsg.HeadOrientationQuaternion_Z)
  return headorientationquaternion_z_;
}
inline void TrackHeadOrientationPBMsg::set_headorientationquaternion_z(double value) {
  set_has_headorientationquaternion_z();
  headorientationquaternion_z_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TrackHeadOrientationPBMsg.HeadOrientationQuaternion_Z)
}

// optional double HeadTranslationVec_X = 5;
inline bool TrackHeadOrientationPBMsg::has_headtranslationvec_x() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TrackHeadOrientationPBMsg::set_has_headtranslationvec_x() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TrackHeadOrientationPBMsg::clear_has_headtranslationvec_x() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TrackHeadOrientationPBMsg::clear_headtranslationvec_x() {
  headtranslationvec_x_ = 0;
  clear_has_headtranslationvec_x();
}
inline double TrackHeadOrientationPBMsg::headtranslationvec_x() const {
  // @@protoc_insertion_point(field_get:vision_messages.TrackHeadOrientationPBMsg.HeadTranslationVec_X)
  return headtranslationvec_x_;
}
inline void TrackHeadOrientationPBMsg::set_headtranslationvec_x(double value) {
  set_has_headtranslationvec_x();
  headtranslationvec_x_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TrackHeadOrientationPBMsg.HeadTranslationVec_X)
}

// optional double HeadTranslationVec_Y = 6;
inline bool TrackHeadOrientationPBMsg::has_headtranslationvec_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TrackHeadOrientationPBMsg::set_has_headtranslationvec_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TrackHeadOrientationPBMsg::clear_has_headtranslationvec_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TrackHeadOrientationPBMsg::clear_headtranslationvec_y() {
  headtranslationvec_y_ = 0;
  clear_has_headtranslationvec_y();
}
inline double TrackHeadOrientationPBMsg::headtranslationvec_y() const {
  // @@protoc_insertion_point(field_get:vision_messages.TrackHeadOrientationPBMsg.HeadTranslationVec_Y)
  return headtranslationvec_y_;
}
inline void TrackHeadOrientationPBMsg::set_headtranslationvec_y(double value) {
  set_has_headtranslationvec_y();
  headtranslationvec_y_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TrackHeadOrientationPBMsg.HeadTranslationVec_Y)
}

// optional double HeadTranslationVec_Z = 7;
inline bool TrackHeadOrientationPBMsg::has_headtranslationvec_z() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TrackHeadOrientationPBMsg::set_has_headtranslationvec_z() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TrackHeadOrientationPBMsg::clear_has_headtranslationvec_z() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TrackHeadOrientationPBMsg::clear_headtranslationvec_z() {
  headtranslationvec_z_ = 0;
  clear_has_headtranslationvec_z();
}
inline double TrackHeadOrientationPBMsg::headtranslationvec_z() const {
  // @@protoc_insertion_point(field_get:vision_messages.TrackHeadOrientationPBMsg.HeadTranslationVec_Z)
  return headtranslationvec_z_;
}
inline void TrackHeadOrientationPBMsg::set_headtranslationvec_z(double value) {
  set_has_headtranslationvec_z();
  headtranslationvec_z_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TrackHeadOrientationPBMsg.HeadTranslationVec_Z)
}

// optional bool IsDataValid = 8;
inline bool TrackHeadOrientationPBMsg::has_isdatavalid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TrackHeadOrientationPBMsg::set_has_isdatavalid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TrackHeadOrientationPBMsg::clear_has_isdatavalid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TrackHeadOrientationPBMsg::clear_isdatavalid() {
  isdatavalid_ = false;
  clear_has_isdatavalid();
}
inline bool TrackHeadOrientationPBMsg::isdatavalid() const {
  // @@protoc_insertion_point(field_get:vision_messages.TrackHeadOrientationPBMsg.IsDataValid)
  return isdatavalid_;
}
inline void TrackHeadOrientationPBMsg::set_isdatavalid(bool value) {
  set_has_isdatavalid();
  isdatavalid_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TrackHeadOrientationPBMsg.IsDataValid)
}

// optional uint32 ImageNumber = 9;
inline bool TrackHeadOrientationPBMsg::has_imagenumber() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TrackHeadOrientationPBMsg::set_has_imagenumber() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TrackHeadOrientationPBMsg::clear_has_imagenumber() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TrackHeadOrientationPBMsg::clear_imagenumber() {
  imagenumber_ = 0u;
  clear_has_imagenumber();
}
inline ::google::protobuf::uint32 TrackHeadOrientationPBMsg::imagenumber() const {
  // @@protoc_insertion_point(field_get:vision_messages.TrackHeadOrientationPBMsg.ImageNumber)
  return imagenumber_;
}
inline void TrackHeadOrientationPBMsg::set_imagenumber(::google::protobuf::uint32 value) {
  set_has_imagenumber();
  imagenumber_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TrackHeadOrientationPBMsg.ImageNumber)
}

// optional double ImageCaptureTimeStampSec = 10;
inline bool TrackHeadOrientationPBMsg::has_imagecapturetimestampsec() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TrackHeadOrientationPBMsg::set_has_imagecapturetimestampsec() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TrackHeadOrientationPBMsg::clear_has_imagecapturetimestampsec() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TrackHeadOrientationPBMsg::clear_imagecapturetimestampsec() {
  imagecapturetimestampsec_ = 0;
  clear_has_imagecapturetimestampsec();
}
inline double TrackHeadOrientationPBMsg::imagecapturetimestampsec() const {
  // @@protoc_insertion_point(field_get:vision_messages.TrackHeadOrientationPBMsg.ImageCaptureTimeStampSec)
  return imagecapturetimestampsec_;
}
inline void TrackHeadOrientationPBMsg::set_imagecapturetimestampsec(double value) {
  set_has_imagecapturetimestampsec();
  imagecapturetimestampsec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TrackHeadOrientationPBMsg.ImageCaptureTimeStampSec)
}

// optional double VidereTimeStampSec = 11;
inline bool TrackHeadOrientationPBMsg::has_videretimestampsec() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TrackHeadOrientationPBMsg::set_has_videretimestampsec() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TrackHeadOrientationPBMsg::clear_has_videretimestampsec() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TrackHeadOrientationPBMsg::clear_videretimestampsec() {
  videretimestampsec_ = 0;
  clear_has_videretimestampsec();
}
inline double TrackHeadOrientationPBMsg::videretimestampsec() const {
  // @@protoc_insertion_point(field_get:vision_messages.TrackHeadOrientationPBMsg.VidereTimeStampSec)
  return videretimestampsec_;
}
inline void TrackHeadOrientationPBMsg::set_videretimestampsec(double value) {
  set_has_videretimestampsec();
  videretimestampsec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TrackHeadOrientationPBMsg.VidereTimeStampSec)
}

// optional double CovarianceNorm = 12;
inline bool TrackHeadOrientationPBMsg::has_covariancenorm() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TrackHeadOrientationPBMsg::set_has_covariancenorm() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TrackHeadOrientationPBMsg::clear_has_covariancenorm() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TrackHeadOrientationPBMsg::clear_covariancenorm() {
  covariancenorm_ = 0;
  clear_has_covariancenorm();
}
inline double TrackHeadOrientationPBMsg::covariancenorm() const {
  // @@protoc_insertion_point(field_get:vision_messages.TrackHeadOrientationPBMsg.CovarianceNorm)
  return covariancenorm_;
}
inline void TrackHeadOrientationPBMsg::set_covariancenorm(double value) {
  set_has_covariancenorm();
  covariancenorm_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.TrackHeadOrientationPBMsg.CovarianceNorm)
}

// -------------------------------------------------------------------

// IMUAccelGyroDataPBMsg

// optional int32 IMULocation = 1;
inline bool IMUAccelGyroDataPBMsg::has_imulocation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMUAccelGyroDataPBMsg::set_has_imulocation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMUAccelGyroDataPBMsg::clear_has_imulocation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMUAccelGyroDataPBMsg::clear_imulocation() {
  imulocation_ = 0;
  clear_has_imulocation();
}
inline ::google::protobuf::int32 IMUAccelGyroDataPBMsg::imulocation() const {
  // @@protoc_insertion_point(field_get:vision_messages.IMUAccelGyroDataPBMsg.IMULocation)
  return imulocation_;
}
inline void IMUAccelGyroDataPBMsg::set_imulocation(::google::protobuf::int32 value) {
  set_has_imulocation();
  imulocation_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.IMUAccelGyroDataPBMsg.IMULocation)
}

// optional double IMUTimeStampSec = 2;
inline bool IMUAccelGyroDataPBMsg::has_imutimestampsec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMUAccelGyroDataPBMsg::set_has_imutimestampsec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMUAccelGyroDataPBMsg::clear_has_imutimestampsec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMUAccelGyroDataPBMsg::clear_imutimestampsec() {
  imutimestampsec_ = 0;
  clear_has_imutimestampsec();
}
inline double IMUAccelGyroDataPBMsg::imutimestampsec() const {
  // @@protoc_insertion_point(field_get:vision_messages.IMUAccelGyroDataPBMsg.IMUTimeStampSec)
  return imutimestampsec_;
}
inline void IMUAccelGyroDataPBMsg::set_imutimestampsec(double value) {
  set_has_imutimestampsec();
  imutimestampsec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.IMUAccelGyroDataPBMsg.IMUTimeStampSec)
}

// optional double VidereTimeStampSec = 3;
inline bool IMUAccelGyroDataPBMsg::has_videretimestampsec() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMUAccelGyroDataPBMsg::set_has_videretimestampsec() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMUAccelGyroDataPBMsg::clear_has_videretimestampsec() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMUAccelGyroDataPBMsg::clear_videretimestampsec() {
  videretimestampsec_ = 0;
  clear_has_videretimestampsec();
}
inline double IMUAccelGyroDataPBMsg::videretimestampsec() const {
  // @@protoc_insertion_point(field_get:vision_messages.IMUAccelGyroDataPBMsg.VidereTimeStampSec)
  return videretimestampsec_;
}
inline void IMUAccelGyroDataPBMsg::set_videretimestampsec(double value) {
  set_has_videretimestampsec();
  videretimestampsec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.IMUAccelGyroDataPBMsg.VidereTimeStampSec)
}

// optional double AccelMPS2_X = 4;
inline bool IMUAccelGyroDataPBMsg::has_accelmps2_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMUAccelGyroDataPBMsg::set_has_accelmps2_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMUAccelGyroDataPBMsg::clear_has_accelmps2_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMUAccelGyroDataPBMsg::clear_accelmps2_x() {
  accelmps2_x_ = 0;
  clear_has_accelmps2_x();
}
inline double IMUAccelGyroDataPBMsg::accelmps2_x() const {
  // @@protoc_insertion_point(field_get:vision_messages.IMUAccelGyroDataPBMsg.AccelMPS2_X)
  return accelmps2_x_;
}
inline void IMUAccelGyroDataPBMsg::set_accelmps2_x(double value) {
  set_has_accelmps2_x();
  accelmps2_x_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.IMUAccelGyroDataPBMsg.AccelMPS2_X)
}

// optional double AccelMPS2_Y = 5;
inline bool IMUAccelGyroDataPBMsg::has_accelmps2_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMUAccelGyroDataPBMsg::set_has_accelmps2_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMUAccelGyroDataPBMsg::clear_has_accelmps2_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMUAccelGyroDataPBMsg::clear_accelmps2_y() {
  accelmps2_y_ = 0;
  clear_has_accelmps2_y();
}
inline double IMUAccelGyroDataPBMsg::accelmps2_y() const {
  // @@protoc_insertion_point(field_get:vision_messages.IMUAccelGyroDataPBMsg.AccelMPS2_Y)
  return accelmps2_y_;
}
inline void IMUAccelGyroDataPBMsg::set_accelmps2_y(double value) {
  set_has_accelmps2_y();
  accelmps2_y_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.IMUAccelGyroDataPBMsg.AccelMPS2_Y)
}

// optional double AccelMPS2_Z = 6;
inline bool IMUAccelGyroDataPBMsg::has_accelmps2_z() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMUAccelGyroDataPBMsg::set_has_accelmps2_z() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMUAccelGyroDataPBMsg::clear_has_accelmps2_z() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMUAccelGyroDataPBMsg::clear_accelmps2_z() {
  accelmps2_z_ = 0;
  clear_has_accelmps2_z();
}
inline double IMUAccelGyroDataPBMsg::accelmps2_z() const {
  // @@protoc_insertion_point(field_get:vision_messages.IMUAccelGyroDataPBMsg.AccelMPS2_Z)
  return accelmps2_z_;
}
inline void IMUAccelGyroDataPBMsg::set_accelmps2_z(double value) {
  set_has_accelmps2_z();
  accelmps2_z_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.IMUAccelGyroDataPBMsg.AccelMPS2_Z)
}

// optional double GyroRadPerSec_X = 7;
inline bool IMUAccelGyroDataPBMsg::has_gyroradpersec_x() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMUAccelGyroDataPBMsg::set_has_gyroradpersec_x() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMUAccelGyroDataPBMsg::clear_has_gyroradpersec_x() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMUAccelGyroDataPBMsg::clear_gyroradpersec_x() {
  gyroradpersec_x_ = 0;
  clear_has_gyroradpersec_x();
}
inline double IMUAccelGyroDataPBMsg::gyroradpersec_x() const {
  // @@protoc_insertion_point(field_get:vision_messages.IMUAccelGyroDataPBMsg.GyroRadPerSec_X)
  return gyroradpersec_x_;
}
inline void IMUAccelGyroDataPBMsg::set_gyroradpersec_x(double value) {
  set_has_gyroradpersec_x();
  gyroradpersec_x_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.IMUAccelGyroDataPBMsg.GyroRadPerSec_X)
}

// optional double GyroRadPerSec_Y = 8;
inline bool IMUAccelGyroDataPBMsg::has_gyroradpersec_y() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IMUAccelGyroDataPBMsg::set_has_gyroradpersec_y() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IMUAccelGyroDataPBMsg::clear_has_gyroradpersec_y() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IMUAccelGyroDataPBMsg::clear_gyroradpersec_y() {
  gyroradpersec_y_ = 0;
  clear_has_gyroradpersec_y();
}
inline double IMUAccelGyroDataPBMsg::gyroradpersec_y() const {
  // @@protoc_insertion_point(field_get:vision_messages.IMUAccelGyroDataPBMsg.GyroRadPerSec_Y)
  return gyroradpersec_y_;
}
inline void IMUAccelGyroDataPBMsg::set_gyroradpersec_y(double value) {
  set_has_gyroradpersec_y();
  gyroradpersec_y_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.IMUAccelGyroDataPBMsg.GyroRadPerSec_Y)
}

// optional double GyroRadPerSec_Z = 9;
inline bool IMUAccelGyroDataPBMsg::has_gyroradpersec_z() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IMUAccelGyroDataPBMsg::set_has_gyroradpersec_z() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IMUAccelGyroDataPBMsg::clear_has_gyroradpersec_z() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IMUAccelGyroDataPBMsg::clear_gyroradpersec_z() {
  gyroradpersec_z_ = 0;
  clear_has_gyroradpersec_z();
}
inline double IMUAccelGyroDataPBMsg::gyroradpersec_z() const {
  // @@protoc_insertion_point(field_get:vision_messages.IMUAccelGyroDataPBMsg.GyroRadPerSec_Z)
  return gyroradpersec_z_;
}
inline void IMUAccelGyroDataPBMsg::set_gyroradpersec_z(double value) {
  set_has_gyroradpersec_z();
  gyroradpersec_z_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.IMUAccelGyroDataPBMsg.GyroRadPerSec_Z)
}

// -------------------------------------------------------------------

// GPSFixPBMsg

// optional int32 TrackingSatellites = 1;
inline bool GPSFixPBMsg::has_trackingsatellites() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GPSFixPBMsg::set_has_trackingsatellites() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GPSFixPBMsg::clear_has_trackingsatellites() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GPSFixPBMsg::clear_trackingsatellites() {
  trackingsatellites_ = 0;
  clear_has_trackingsatellites();
}
inline ::google::protobuf::int32 GPSFixPBMsg::trackingsatellites() const {
  // @@protoc_insertion_point(field_get:vision_messages.GPSFixPBMsg.TrackingSatellites)
  return trackingsatellites_;
}
inline void GPSFixPBMsg::set_trackingsatellites(::google::protobuf::int32 value) {
  set_has_trackingsatellites();
  trackingsatellites_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GPSFixPBMsg.TrackingSatellites)
}

// optional double LatitudeDeg = 2;
inline bool GPSFixPBMsg::has_latitudedeg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GPSFixPBMsg::set_has_latitudedeg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GPSFixPBMsg::clear_has_latitudedeg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GPSFixPBMsg::clear_latitudedeg() {
  latitudedeg_ = 0;
  clear_has_latitudedeg();
}
inline double GPSFixPBMsg::latitudedeg() const {
  // @@protoc_insertion_point(field_get:vision_messages.GPSFixPBMsg.LatitudeDeg)
  return latitudedeg_;
}
inline void GPSFixPBMsg::set_latitudedeg(double value) {
  set_has_latitudedeg();
  latitudedeg_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GPSFixPBMsg.LatitudeDeg)
}

// optional double LongitudeDeg = 3;
inline bool GPSFixPBMsg::has_longitudedeg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GPSFixPBMsg::set_has_longitudedeg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GPSFixPBMsg::clear_has_longitudedeg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GPSFixPBMsg::clear_longitudedeg() {
  longitudedeg_ = 0;
  clear_has_longitudedeg();
}
inline double GPSFixPBMsg::longitudedeg() const {
  // @@protoc_insertion_point(field_get:vision_messages.GPSFixPBMsg.LongitudeDeg)
  return longitudedeg_;
}
inline void GPSFixPBMsg::set_longitudedeg(double value) {
  set_has_longitudedeg();
  longitudedeg_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GPSFixPBMsg.LongitudeDeg)
}

// optional double AltitudeMSL = 4;
inline bool GPSFixPBMsg::has_altitudemsl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GPSFixPBMsg::set_has_altitudemsl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GPSFixPBMsg::clear_has_altitudemsl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GPSFixPBMsg::clear_altitudemsl() {
  altitudemsl_ = 0;
  clear_has_altitudemsl();
}
inline double GPSFixPBMsg::altitudemsl() const {
  // @@protoc_insertion_point(field_get:vision_messages.GPSFixPBMsg.AltitudeMSL)
  return altitudemsl_;
}
inline void GPSFixPBMsg::set_altitudemsl(double value) {
  set_has_altitudemsl();
  altitudemsl_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GPSFixPBMsg.AltitudeMSL)
}

// optional double Position_X = 5;
inline bool GPSFixPBMsg::has_position_x() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GPSFixPBMsg::set_has_position_x() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GPSFixPBMsg::clear_has_position_x() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GPSFixPBMsg::clear_position_x() {
  position_x_ = 0;
  clear_has_position_x();
}
inline double GPSFixPBMsg::position_x() const {
  // @@protoc_insertion_point(field_get:vision_messages.GPSFixPBMsg.Position_X)
  return position_x_;
}
inline void GPSFixPBMsg::set_position_x(double value) {
  set_has_position_x();
  position_x_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GPSFixPBMsg.Position_X)
}

// optional double Position_Y = 6;
inline bool GPSFixPBMsg::has_position_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GPSFixPBMsg::set_has_position_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GPSFixPBMsg::clear_has_position_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GPSFixPBMsg::clear_position_y() {
  position_y_ = 0;
  clear_has_position_y();
}
inline double GPSFixPBMsg::position_y() const {
  // @@protoc_insertion_point(field_get:vision_messages.GPSFixPBMsg.Position_Y)
  return position_y_;
}
inline void GPSFixPBMsg::set_position_y(double value) {
  set_has_position_y();
  position_y_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GPSFixPBMsg.Position_Y)
}

// optional double Position_Z = 7;
inline bool GPSFixPBMsg::has_position_z() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GPSFixPBMsg::set_has_position_z() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GPSFixPBMsg::clear_has_position_z() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GPSFixPBMsg::clear_position_z() {
  position_z_ = 0;
  clear_has_position_z();
}
inline double GPSFixPBMsg::position_z() const {
  // @@protoc_insertion_point(field_get:vision_messages.GPSFixPBMsg.Position_Z)
  return position_z_;
}
inline void GPSFixPBMsg::set_position_z(double value) {
  set_has_position_z();
  position_z_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GPSFixPBMsg.Position_Z)
}

// optional double Velocity_X = 8;
inline bool GPSFixPBMsg::has_velocity_x() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GPSFixPBMsg::set_has_velocity_x() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GPSFixPBMsg::clear_has_velocity_x() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GPSFixPBMsg::clear_velocity_x() {
  velocity_x_ = 0;
  clear_has_velocity_x();
}
inline double GPSFixPBMsg::velocity_x() const {
  // @@protoc_insertion_point(field_get:vision_messages.GPSFixPBMsg.Velocity_X)
  return velocity_x_;
}
inline void GPSFixPBMsg::set_velocity_x(double value) {
  set_has_velocity_x();
  velocity_x_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GPSFixPBMsg.Velocity_X)
}

// optional double Velocity_Y = 9;
inline bool GPSFixPBMsg::has_velocity_y() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GPSFixPBMsg::set_has_velocity_y() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GPSFixPBMsg::clear_has_velocity_y() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GPSFixPBMsg::clear_velocity_y() {
  velocity_y_ = 0;
  clear_has_velocity_y();
}
inline double GPSFixPBMsg::velocity_y() const {
  // @@protoc_insertion_point(field_get:vision_messages.GPSFixPBMsg.Velocity_Y)
  return velocity_y_;
}
inline void GPSFixPBMsg::set_velocity_y(double value) {
  set_has_velocity_y();
  velocity_y_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GPSFixPBMsg.Velocity_Y)
}

// optional double Velocity_Z = 10;
inline bool GPSFixPBMsg::has_velocity_z() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GPSFixPBMsg::set_has_velocity_z() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GPSFixPBMsg::clear_has_velocity_z() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GPSFixPBMsg::clear_velocity_z() {
  velocity_z_ = 0;
  clear_has_velocity_z();
}
inline double GPSFixPBMsg::velocity_z() const {
  // @@protoc_insertion_point(field_get:vision_messages.GPSFixPBMsg.Velocity_Z)
  return velocity_z_;
}
inline void GPSFixPBMsg::set_velocity_z(double value) {
  set_has_velocity_z();
  velocity_z_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GPSFixPBMsg.Velocity_Z)
}

// optional double GPSTimeStampSec = 11;
inline bool GPSFixPBMsg::has_gpstimestampsec() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GPSFixPBMsg::set_has_gpstimestampsec() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GPSFixPBMsg::clear_has_gpstimestampsec() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GPSFixPBMsg::clear_gpstimestampsec() {
  gpstimestampsec_ = 0;
  clear_has_gpstimestampsec();
}
inline double GPSFixPBMsg::gpstimestampsec() const {
  // @@protoc_insertion_point(field_get:vision_messages.GPSFixPBMsg.GPSTimeStampSec)
  return gpstimestampsec_;
}
inline void GPSFixPBMsg::set_gpstimestampsec(double value) {
  set_has_gpstimestampsec();
  gpstimestampsec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GPSFixPBMsg.GPSTimeStampSec)
}

// optional double VidereTimeStampSec = 12;
inline bool GPSFixPBMsg::has_videretimestampsec() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GPSFixPBMsg::set_has_videretimestampsec() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GPSFixPBMsg::clear_has_videretimestampsec() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GPSFixPBMsg::clear_videretimestampsec() {
  videretimestampsec_ = 0;
  clear_has_videretimestampsec();
}
inline double GPSFixPBMsg::videretimestampsec() const {
  // @@protoc_insertion_point(field_get:vision_messages.GPSFixPBMsg.VidereTimeStampSec)
  return videretimestampsec_;
}
inline void GPSFixPBMsg::set_videretimestampsec(double value) {
  set_has_videretimestampsec();
  videretimestampsec_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.GPSFixPBMsg.VidereTimeStampSec)
}

// -------------------------------------------------------------------

// VidereSystemControlPBMsg

// optional uint32 SystemState = 1;
inline bool VidereSystemControlPBMsg::has_systemstate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VidereSystemControlPBMsg::set_has_systemstate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VidereSystemControlPBMsg::clear_has_systemstate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VidereSystemControlPBMsg::clear_systemstate() {
  systemstate_ = 0u;
  clear_has_systemstate();
}
inline ::google::protobuf::uint32 VidereSystemControlPBMsg::systemstate() const {
  // @@protoc_insertion_point(field_get:vision_messages.VidereSystemControlPBMsg.SystemState)
  return systemstate_;
}
inline void VidereSystemControlPBMsg::set_systemstate(::google::protobuf::uint32 value) {
  set_has_systemstate();
  systemstate_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VidereSystemControlPBMsg.SystemState)
}

// optional bool StartProcess = 2;
inline bool VidereSystemControlPBMsg::has_startprocess() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VidereSystemControlPBMsg::set_has_startprocess() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VidereSystemControlPBMsg::clear_has_startprocess() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VidereSystemControlPBMsg::clear_startprocess() {
  startprocess_ = false;
  clear_has_startprocess();
}
inline bool VidereSystemControlPBMsg::startprocess() const {
  // @@protoc_insertion_point(field_get:vision_messages.VidereSystemControlPBMsg.StartProcess)
  return startprocess_;
}
inline void VidereSystemControlPBMsg::set_startprocess(bool value) {
  set_has_startprocess();
  startprocess_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VidereSystemControlPBMsg.StartProcess)
}

// optional bool PauseProces = 3;
inline bool VidereSystemControlPBMsg::has_pauseproces() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VidereSystemControlPBMsg::set_has_pauseproces() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VidereSystemControlPBMsg::clear_has_pauseproces() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VidereSystemControlPBMsg::clear_pauseproces() {
  pauseproces_ = false;
  clear_has_pauseproces();
}
inline bool VidereSystemControlPBMsg::pauseproces() const {
  // @@protoc_insertion_point(field_get:vision_messages.VidereSystemControlPBMsg.PauseProces)
  return pauseproces_;
}
inline void VidereSystemControlPBMsg::set_pauseproces(bool value) {
  set_has_pauseproces();
  pauseproces_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VidereSystemControlPBMsg.PauseProces)
}

// optional bool StopProcess = 4;
inline bool VidereSystemControlPBMsg::has_stopprocess() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VidereSystemControlPBMsg::set_has_stopprocess() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VidereSystemControlPBMsg::clear_has_stopprocess() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VidereSystemControlPBMsg::clear_stopprocess() {
  stopprocess_ = false;
  clear_has_stopprocess();
}
inline bool VidereSystemControlPBMsg::stopprocess() const {
  // @@protoc_insertion_point(field_get:vision_messages.VidereSystemControlPBMsg.StopProcess)
  return stopprocess_;
}
inline void VidereSystemControlPBMsg::set_stopprocess(bool value) {
  set_has_stopprocess();
  stopprocess_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VidereSystemControlPBMsg.StopProcess)
}

// optional uint32 SystemStatus = 5;
inline bool VidereSystemControlPBMsg::has_systemstatus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VidereSystemControlPBMsg::set_has_systemstatus() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VidereSystemControlPBMsg::clear_has_systemstatus() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VidereSystemControlPBMsg::clear_systemstatus() {
  systemstatus_ = 0u;
  clear_has_systemstatus();
}
inline ::google::protobuf::uint32 VidereSystemControlPBMsg::systemstatus() const {
  // @@protoc_insertion_point(field_get:vision_messages.VidereSystemControlPBMsg.SystemStatus)
  return systemstatus_;
}
inline void VidereSystemControlPBMsg::set_systemstatus(::google::protobuf::uint32 value) {
  set_has_systemstatus();
  systemstatus_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VidereSystemControlPBMsg.SystemStatus)
}

// optional uint32 StatusCounter = 6;
inline bool VidereSystemControlPBMsg::has_statuscounter() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VidereSystemControlPBMsg::set_has_statuscounter() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VidereSystemControlPBMsg::clear_has_statuscounter() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VidereSystemControlPBMsg::clear_statuscounter() {
  statuscounter_ = 0u;
  clear_has_statuscounter();
}
inline ::google::protobuf::uint32 VidereSystemControlPBMsg::statuscounter() const {
  // @@protoc_insertion_point(field_get:vision_messages.VidereSystemControlPBMsg.StatusCounter)
  return statuscounter_;
}
inline void VidereSystemControlPBMsg::set_statuscounter(::google::protobuf::uint32 value) {
  set_has_statuscounter();
  statuscounter_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VidereSystemControlPBMsg.StatusCounter)
}

// optional bool DriverEnableSwitch = 7;
inline bool VidereSystemControlPBMsg::has_driverenableswitch() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VidereSystemControlPBMsg::set_has_driverenableswitch() {
  _has_bits_[0] |= 0x00000040u;
}
inline void VidereSystemControlPBMsg::clear_has_driverenableswitch() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void VidereSystemControlPBMsg::clear_driverenableswitch() {
  driverenableswitch_ = false;
  clear_has_driverenableswitch();
}
inline bool VidereSystemControlPBMsg::driverenableswitch() const {
  // @@protoc_insertion_point(field_get:vision_messages.VidereSystemControlPBMsg.DriverEnableSwitch)
  return driverenableswitch_;
}
inline void VidereSystemControlPBMsg::set_driverenableswitch(bool value) {
  set_has_driverenableswitch();
  driverenableswitch_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VidereSystemControlPBMsg.DriverEnableSwitch)
}

// optional bool HeadControlEnable = 8;
inline bool VidereSystemControlPBMsg::has_headcontrolenable() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void VidereSystemControlPBMsg::set_has_headcontrolenable() {
  _has_bits_[0] |= 0x00000080u;
}
inline void VidereSystemControlPBMsg::clear_has_headcontrolenable() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void VidereSystemControlPBMsg::clear_headcontrolenable() {
  headcontrolenable_ = false;
  clear_has_headcontrolenable();
}
inline bool VidereSystemControlPBMsg::headcontrolenable() const {
  // @@protoc_insertion_point(field_get:vision_messages.VidereSystemControlPBMsg.HeadControlEnable)
  return headcontrolenable_;
}
inline void VidereSystemControlPBMsg::set_headcontrolenable(bool value) {
  set_has_headcontrolenable();
  headcontrolenable_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VidereSystemControlPBMsg.HeadControlEnable)
}

// optional bool ThrottleControlEnable = 9;
inline bool VidereSystemControlPBMsg::has_throttlecontrolenable() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void VidereSystemControlPBMsg::set_has_throttlecontrolenable() {
  _has_bits_[0] |= 0x00000100u;
}
inline void VidereSystemControlPBMsg::clear_has_throttlecontrolenable() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void VidereSystemControlPBMsg::clear_throttlecontrolenable() {
  throttlecontrolenable_ = false;
  clear_has_throttlecontrolenable();
}
inline bool VidereSystemControlPBMsg::throttlecontrolenable() const {
  // @@protoc_insertion_point(field_get:vision_messages.VidereSystemControlPBMsg.ThrottleControlEnable)
  return throttlecontrolenable_;
}
inline void VidereSystemControlPBMsg::set_throttlecontrolenable(bool value) {
  set_has_throttlecontrolenable();
  throttlecontrolenable_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VidereSystemControlPBMsg.ThrottleControlEnable)
}

// optional bool BrakeControlEnable = 10;
inline bool VidereSystemControlPBMsg::has_brakecontrolenable() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void VidereSystemControlPBMsg::set_has_brakecontrolenable() {
  _has_bits_[0] |= 0x00000200u;
}
inline void VidereSystemControlPBMsg::clear_has_brakecontrolenable() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void VidereSystemControlPBMsg::clear_brakecontrolenable() {
  brakecontrolenable_ = false;
  clear_has_brakecontrolenable();
}
inline bool VidereSystemControlPBMsg::brakecontrolenable() const {
  // @@protoc_insertion_point(field_get:vision_messages.VidereSystemControlPBMsg.BrakeControlEnable)
  return brakecontrolenable_;
}
inline void VidereSystemControlPBMsg::set_brakecontrolenable(bool value) {
  set_has_brakecontrolenable();
  brakecontrolenable_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VidereSystemControlPBMsg.BrakeControlEnable)
}

// optional bool NexusBCIControlEnabled = 11;
inline bool VidereSystemControlPBMsg::has_nexusbcicontrolenabled() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void VidereSystemControlPBMsg::set_has_nexusbcicontrolenabled() {
  _has_bits_[0] |= 0x00000400u;
}
inline void VidereSystemControlPBMsg::clear_has_nexusbcicontrolenabled() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void VidereSystemControlPBMsg::clear_nexusbcicontrolenabled() {
  nexusbcicontrolenabled_ = false;
  clear_has_nexusbcicontrolenabled();
}
inline bool VidereSystemControlPBMsg::nexusbcicontrolenabled() const {
  // @@protoc_insertion_point(field_get:vision_messages.VidereSystemControlPBMsg.NexusBCIControlEnabled)
  return nexusbcicontrolenabled_;
}
inline void VidereSystemControlPBMsg::set_nexusbcicontrolenabled(bool value) {
  set_has_nexusbcicontrolenabled();
  nexusbcicontrolenabled_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VidereSystemControlPBMsg.NexusBCIControlEnabled)
}

// optional bool NexusBCIThrottleEnable = 12;
inline bool VidereSystemControlPBMsg::has_nexusbcithrottleenable() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void VidereSystemControlPBMsg::set_has_nexusbcithrottleenable() {
  _has_bits_[0] |= 0x00000800u;
}
inline void VidereSystemControlPBMsg::clear_has_nexusbcithrottleenable() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void VidereSystemControlPBMsg::clear_nexusbcithrottleenable() {
  nexusbcithrottleenable_ = false;
  clear_has_nexusbcithrottleenable();
}
inline bool VidereSystemControlPBMsg::nexusbcithrottleenable() const {
  // @@protoc_insertion_point(field_get:vision_messages.VidereSystemControlPBMsg.NexusBCIThrottleEnable)
  return nexusbcithrottleenable_;
}
inline void VidereSystemControlPBMsg::set_nexusbcithrottleenable(bool value) {
  set_has_nexusbcithrottleenable();
  nexusbcithrottleenable_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VidereSystemControlPBMsg.NexusBCIThrottleEnable)
}

// -------------------------------------------------------------------

// HeadOrientationControlPBMsg

// optional uint32 HeadOrientationOutputSelect = 1;
inline bool HeadOrientationControlPBMsg::has_headorientationoutputselect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeadOrientationControlPBMsg::set_has_headorientationoutputselect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeadOrientationControlPBMsg::clear_has_headorientationoutputselect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeadOrientationControlPBMsg::clear_headorientationoutputselect() {
  headorientationoutputselect_ = 0u;
  clear_has_headorientationoutputselect();
}
inline ::google::protobuf::uint32 HeadOrientationControlPBMsg::headorientationoutputselect() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadOrientationControlPBMsg.HeadOrientationOutputSelect)
  return headorientationoutputselect_;
}
inline void HeadOrientationControlPBMsg::set_headorientationoutputselect(::google::protobuf::uint32 value) {
  set_has_headorientationoutputselect();
  headorientationoutputselect_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadOrientationControlPBMsg.HeadOrientationOutputSelect)
}

// optional bool DisableHeadOrientationKalmanFilter = 2;
inline bool HeadOrientationControlPBMsg::has_disableheadorientationkalmanfilter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeadOrientationControlPBMsg::set_has_disableheadorientationkalmanfilter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeadOrientationControlPBMsg::clear_has_disableheadorientationkalmanfilter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeadOrientationControlPBMsg::clear_disableheadorientationkalmanfilter() {
  disableheadorientationkalmanfilter_ = false;
  clear_has_disableheadorientationkalmanfilter();
}
inline bool HeadOrientationControlPBMsg::disableheadorientationkalmanfilter() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadOrientationControlPBMsg.DisableHeadOrientationKalmanFilter)
  return disableheadorientationkalmanfilter_;
}
inline void HeadOrientationControlPBMsg::set_disableheadorientationkalmanfilter(bool value) {
  set_has_disableheadorientationkalmanfilter();
  disableheadorientationkalmanfilter_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadOrientationControlPBMsg.DisableHeadOrientationKalmanFilter)
}

// optional bool DisableVehicleInputToHeadOrientation = 3;
inline bool HeadOrientationControlPBMsg::has_disablevehicleinputtoheadorientation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeadOrientationControlPBMsg::set_has_disablevehicleinputtoheadorientation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeadOrientationControlPBMsg::clear_has_disablevehicleinputtoheadorientation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeadOrientationControlPBMsg::clear_disablevehicleinputtoheadorientation() {
  disablevehicleinputtoheadorientation_ = false;
  clear_has_disablevehicleinputtoheadorientation();
}
inline bool HeadOrientationControlPBMsg::disablevehicleinputtoheadorientation() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadOrientationControlPBMsg.DisableVehicleInputToHeadOrientation)
  return disablevehicleinputtoheadorientation_;
}
inline void HeadOrientationControlPBMsg::set_disablevehicleinputtoheadorientation(bool value) {
  set_has_disablevehicleinputtoheadorientation();
  disablevehicleinputtoheadorientation_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadOrientationControlPBMsg.DisableVehicleInputToHeadOrientation)
}

// optional bool DisableVehicleGravityFeedback = 4;
inline bool HeadOrientationControlPBMsg::has_disablevehiclegravityfeedback() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeadOrientationControlPBMsg::set_has_disablevehiclegravityfeedback() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeadOrientationControlPBMsg::clear_has_disablevehiclegravityfeedback() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeadOrientationControlPBMsg::clear_disablevehiclegravityfeedback() {
  disablevehiclegravityfeedback_ = false;
  clear_has_disablevehiclegravityfeedback();
}
inline bool HeadOrientationControlPBMsg::disablevehiclegravityfeedback() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadOrientationControlPBMsg.DisableVehicleGravityFeedback)
  return disablevehiclegravityfeedback_;
}
inline void HeadOrientationControlPBMsg::set_disablevehiclegravityfeedback(bool value) {
  set_has_disablevehiclegravityfeedback();
  disablevehiclegravityfeedback_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadOrientationControlPBMsg.DisableVehicleGravityFeedback)
}

// optional double VehicleGravityFeedbackGain = 5;
inline bool HeadOrientationControlPBMsg::has_vehiclegravityfeedbackgain() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HeadOrientationControlPBMsg::set_has_vehiclegravityfeedbackgain() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HeadOrientationControlPBMsg::clear_has_vehiclegravityfeedbackgain() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HeadOrientationControlPBMsg::clear_vehiclegravityfeedbackgain() {
  vehiclegravityfeedbackgain_ = 0;
  clear_has_vehiclegravityfeedbackgain();
}
inline double HeadOrientationControlPBMsg::vehiclegravityfeedbackgain() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadOrientationControlPBMsg.VehicleGravityFeedbackGain)
  return vehiclegravityfeedbackgain_;
}
inline void HeadOrientationControlPBMsg::set_vehiclegravityfeedbackgain(double value) {
  set_has_vehiclegravityfeedbackgain();
  vehiclegravityfeedbackgain_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadOrientationControlPBMsg.VehicleGravityFeedbackGain)
}

// optional double HeadOrientation_QVar = 6;
inline bool HeadOrientationControlPBMsg::has_headorientation_qvar() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HeadOrientationControlPBMsg::set_has_headorientation_qvar() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HeadOrientationControlPBMsg::clear_has_headorientation_qvar() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HeadOrientationControlPBMsg::clear_headorientation_qvar() {
  headorientation_qvar_ = 0;
  clear_has_headorientation_qvar();
}
inline double HeadOrientationControlPBMsg::headorientation_qvar() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadOrientationControlPBMsg.HeadOrientation_QVar)
  return headorientation_qvar_;
}
inline void HeadOrientationControlPBMsg::set_headorientation_qvar(double value) {
  set_has_headorientation_qvar();
  headorientation_qvar_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadOrientationControlPBMsg.HeadOrientation_QVar)
}

// optional double HeadOrientation_RVar = 7;
inline bool HeadOrientationControlPBMsg::has_headorientation_rvar() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HeadOrientationControlPBMsg::set_has_headorientation_rvar() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HeadOrientationControlPBMsg::clear_has_headorientation_rvar() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HeadOrientationControlPBMsg::clear_headorientation_rvar() {
  headorientation_rvar_ = 0;
  clear_has_headorientation_rvar();
}
inline double HeadOrientationControlPBMsg::headorientation_rvar() const {
  // @@protoc_insertion_point(field_get:vision_messages.HeadOrientationControlPBMsg.HeadOrientation_RVar)
  return headorientation_rvar_;
}
inline void HeadOrientationControlPBMsg::set_headorientation_rvar(double value) {
  set_has_headorientation_rvar();
  headorientation_rvar_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.HeadOrientationControlPBMsg.HeadOrientation_RVar)
}

// -------------------------------------------------------------------

// VehicleControlParametersPBMsg

// optional double SipnPuffBlowGain = 1;
inline bool VehicleControlParametersPBMsg::has_sipnpuffblowgain() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_sipnpuffblowgain() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VehicleControlParametersPBMsg::clear_has_sipnpuffblowgain() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VehicleControlParametersPBMsg::clear_sipnpuffblowgain() {
  sipnpuffblowgain_ = 0;
  clear_has_sipnpuffblowgain();
}
inline double VehicleControlParametersPBMsg::sipnpuffblowgain() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.SipnPuffBlowGain)
  return sipnpuffblowgain_;
}
inline void VehicleControlParametersPBMsg::set_sipnpuffblowgain(double value) {
  set_has_sipnpuffblowgain();
  sipnpuffblowgain_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.SipnPuffBlowGain)
}

// optional double SipnPuffSuckGain = 2;
inline bool VehicleControlParametersPBMsg::has_sipnpuffsuckgain() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_sipnpuffsuckgain() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VehicleControlParametersPBMsg::clear_has_sipnpuffsuckgain() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VehicleControlParametersPBMsg::clear_sipnpuffsuckgain() {
  sipnpuffsuckgain_ = 0;
  clear_has_sipnpuffsuckgain();
}
inline double VehicleControlParametersPBMsg::sipnpuffsuckgain() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.SipnPuffSuckGain)
  return sipnpuffsuckgain_;
}
inline void VehicleControlParametersPBMsg::set_sipnpuffsuckgain(double value) {
  set_has_sipnpuffsuckgain();
  sipnpuffsuckgain_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.SipnPuffSuckGain)
}

// optional double SipnPuffDeadBandPercent = 3;
inline bool VehicleControlParametersPBMsg::has_sipnpuffdeadbandpercent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_sipnpuffdeadbandpercent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VehicleControlParametersPBMsg::clear_has_sipnpuffdeadbandpercent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VehicleControlParametersPBMsg::clear_sipnpuffdeadbandpercent() {
  sipnpuffdeadbandpercent_ = 0;
  clear_has_sipnpuffdeadbandpercent();
}
inline double VehicleControlParametersPBMsg::sipnpuffdeadbandpercent() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.SipnPuffDeadBandPercent)
  return sipnpuffdeadbandpercent_;
}
inline void VehicleControlParametersPBMsg::set_sipnpuffdeadbandpercent(double value) {
  set_has_sipnpuffdeadbandpercent();
  sipnpuffdeadbandpercent_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.SipnPuffDeadBandPercent)
}

// optional bool ReverseSipnPuffThrottleBrake = 4;
inline bool VehicleControlParametersPBMsg::has_reversesipnpuffthrottlebrake() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_reversesipnpuffthrottlebrake() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VehicleControlParametersPBMsg::clear_has_reversesipnpuffthrottlebrake() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VehicleControlParametersPBMsg::clear_reversesipnpuffthrottlebrake() {
  reversesipnpuffthrottlebrake_ = false;
  clear_has_reversesipnpuffthrottlebrake();
}
inline bool VehicleControlParametersPBMsg::reversesipnpuffthrottlebrake() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.ReverseSipnPuffThrottleBrake)
  return reversesipnpuffthrottlebrake_;
}
inline void VehicleControlParametersPBMsg::set_reversesipnpuffthrottlebrake(bool value) {
  set_has_reversesipnpuffthrottlebrake();
  reversesipnpuffthrottlebrake_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.ReverseSipnPuffThrottleBrake)
}

// optional double ThrottleSipnPuffGain = 5;
inline bool VehicleControlParametersPBMsg::has_throttlesipnpuffgain() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_throttlesipnpuffgain() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VehicleControlParametersPBMsg::clear_has_throttlesipnpuffgain() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VehicleControlParametersPBMsg::clear_throttlesipnpuffgain() {
  throttlesipnpuffgain_ = 0;
  clear_has_throttlesipnpuffgain();
}
inline double VehicleControlParametersPBMsg::throttlesipnpuffgain() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.ThrottleSipnPuffGain)
  return throttlesipnpuffgain_;
}
inline void VehicleControlParametersPBMsg::set_throttlesipnpuffgain(double value) {
  set_has_throttlesipnpuffgain();
  throttlesipnpuffgain_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.ThrottleSipnPuffGain)
}

// optional double BrakeSipnPuffGain = 6;
inline bool VehicleControlParametersPBMsg::has_brakesipnpuffgain() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_brakesipnpuffgain() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VehicleControlParametersPBMsg::clear_has_brakesipnpuffgain() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VehicleControlParametersPBMsg::clear_brakesipnpuffgain() {
  brakesipnpuffgain_ = 0;
  clear_has_brakesipnpuffgain();
}
inline double VehicleControlParametersPBMsg::brakesipnpuffgain() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.BrakeSipnPuffGain)
  return brakesipnpuffgain_;
}
inline void VehicleControlParametersPBMsg::set_brakesipnpuffgain(double value) {
  set_has_brakesipnpuffgain();
  brakesipnpuffgain_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.BrakeSipnPuffGain)
}

// optional bool ThrottleBrakeHeadTiltEnable = 7;
inline bool VehicleControlParametersPBMsg::has_throttlebrakeheadtiltenable() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_throttlebrakeheadtiltenable() {
  _has_bits_[0] |= 0x00000040u;
}
inline void VehicleControlParametersPBMsg::clear_has_throttlebrakeheadtiltenable() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void VehicleControlParametersPBMsg::clear_throttlebrakeheadtiltenable() {
  throttlebrakeheadtiltenable_ = false;
  clear_has_throttlebrakeheadtiltenable();
}
inline bool VehicleControlParametersPBMsg::throttlebrakeheadtiltenable() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.ThrottleBrakeHeadTiltEnable)
  return throttlebrakeheadtiltenable_;
}
inline void VehicleControlParametersPBMsg::set_throttlebrakeheadtiltenable(bool value) {
  set_has_throttlebrakeheadtiltenable();
  throttlebrakeheadtiltenable_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.ThrottleBrakeHeadTiltEnable)
}

// optional double ThrottleBrakeHeadTiltForwardDeadbandDegrees = 8;
inline bool VehicleControlParametersPBMsg::has_throttlebrakeheadtiltforwarddeadbanddegrees() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_throttlebrakeheadtiltforwarddeadbanddegrees() {
  _has_bits_[0] |= 0x00000080u;
}
inline void VehicleControlParametersPBMsg::clear_has_throttlebrakeheadtiltforwarddeadbanddegrees() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void VehicleControlParametersPBMsg::clear_throttlebrakeheadtiltforwarddeadbanddegrees() {
  throttlebrakeheadtiltforwarddeadbanddegrees_ = 0;
  clear_has_throttlebrakeheadtiltforwarddeadbanddegrees();
}
inline double VehicleControlParametersPBMsg::throttlebrakeheadtiltforwarddeadbanddegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.ThrottleBrakeHeadTiltForwardDeadbandDegrees)
  return throttlebrakeheadtiltforwarddeadbanddegrees_;
}
inline void VehicleControlParametersPBMsg::set_throttlebrakeheadtiltforwarddeadbanddegrees(double value) {
  set_has_throttlebrakeheadtiltforwarddeadbanddegrees();
  throttlebrakeheadtiltforwarddeadbanddegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.ThrottleBrakeHeadTiltForwardDeadbandDegrees)
}

// optional double ThrottleBrakeHeadTiltBackDeadbandDegrees = 9;
inline bool VehicleControlParametersPBMsg::has_throttlebrakeheadtiltbackdeadbanddegrees() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_throttlebrakeheadtiltbackdeadbanddegrees() {
  _has_bits_[0] |= 0x00000100u;
}
inline void VehicleControlParametersPBMsg::clear_has_throttlebrakeheadtiltbackdeadbanddegrees() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void VehicleControlParametersPBMsg::clear_throttlebrakeheadtiltbackdeadbanddegrees() {
  throttlebrakeheadtiltbackdeadbanddegrees_ = 0;
  clear_has_throttlebrakeheadtiltbackdeadbanddegrees();
}
inline double VehicleControlParametersPBMsg::throttlebrakeheadtiltbackdeadbanddegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.ThrottleBrakeHeadTiltBackDeadbandDegrees)
  return throttlebrakeheadtiltbackdeadbanddegrees_;
}
inline void VehicleControlParametersPBMsg::set_throttlebrakeheadtiltbackdeadbanddegrees(double value) {
  set_has_throttlebrakeheadtiltbackdeadbanddegrees();
  throttlebrakeheadtiltbackdeadbanddegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.ThrottleBrakeHeadTiltBackDeadbandDegrees)
}

// optional double ThrottleHeadTiltGain = 10;
inline bool VehicleControlParametersPBMsg::has_throttleheadtiltgain() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_throttleheadtiltgain() {
  _has_bits_[0] |= 0x00000200u;
}
inline void VehicleControlParametersPBMsg::clear_has_throttleheadtiltgain() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void VehicleControlParametersPBMsg::clear_throttleheadtiltgain() {
  throttleheadtiltgain_ = 0;
  clear_has_throttleheadtiltgain();
}
inline double VehicleControlParametersPBMsg::throttleheadtiltgain() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.ThrottleHeadTiltGain)
  return throttleheadtiltgain_;
}
inline void VehicleControlParametersPBMsg::set_throttleheadtiltgain(double value) {
  set_has_throttleheadtiltgain();
  throttleheadtiltgain_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.ThrottleHeadTiltGain)
}

// optional double BrakeHeadTiltGain = 11;
inline bool VehicleControlParametersPBMsg::has_brakeheadtiltgain() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_brakeheadtiltgain() {
  _has_bits_[0] |= 0x00000400u;
}
inline void VehicleControlParametersPBMsg::clear_has_brakeheadtiltgain() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void VehicleControlParametersPBMsg::clear_brakeheadtiltgain() {
  brakeheadtiltgain_ = 0;
  clear_has_brakeheadtiltgain();
}
inline double VehicleControlParametersPBMsg::brakeheadtiltgain() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.BrakeHeadTiltGain)
  return brakeheadtiltgain_;
}
inline void VehicleControlParametersPBMsg::set_brakeheadtiltgain(double value) {
  set_has_brakeheadtiltgain();
  brakeheadtiltgain_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.BrakeHeadTiltGain)
}

// optional bool UseSteeringAngleControl = 12;
inline bool VehicleControlParametersPBMsg::has_usesteeringanglecontrol() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_usesteeringanglecontrol() {
  _has_bits_[0] |= 0x00000800u;
}
inline void VehicleControlParametersPBMsg::clear_has_usesteeringanglecontrol() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void VehicleControlParametersPBMsg::clear_usesteeringanglecontrol() {
  usesteeringanglecontrol_ = false;
  clear_has_usesteeringanglecontrol();
}
inline bool VehicleControlParametersPBMsg::usesteeringanglecontrol() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.UseSteeringAngleControl)
  return usesteeringanglecontrol_;
}
inline void VehicleControlParametersPBMsg::set_usesteeringanglecontrol(bool value) {
  set_has_usesteeringanglecontrol();
  usesteeringanglecontrol_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.UseSteeringAngleControl)
}

// optional double SteeringDeadband = 13;
inline bool VehicleControlParametersPBMsg::has_steeringdeadband() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_steeringdeadband() {
  _has_bits_[0] |= 0x00001000u;
}
inline void VehicleControlParametersPBMsg::clear_has_steeringdeadband() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void VehicleControlParametersPBMsg::clear_steeringdeadband() {
  steeringdeadband_ = 0;
  clear_has_steeringdeadband();
}
inline double VehicleControlParametersPBMsg::steeringdeadband() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.SteeringDeadband)
  return steeringdeadband_;
}
inline void VehicleControlParametersPBMsg::set_steeringdeadband(double value) {
  set_has_steeringdeadband();
  steeringdeadband_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.SteeringDeadband)
}

// optional double SteeringControlGain = 14;
inline bool VehicleControlParametersPBMsg::has_steeringcontrolgain() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_steeringcontrolgain() {
  _has_bits_[0] |= 0x00002000u;
}
inline void VehicleControlParametersPBMsg::clear_has_steeringcontrolgain() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void VehicleControlParametersPBMsg::clear_steeringcontrolgain() {
  steeringcontrolgain_ = 0;
  clear_has_steeringcontrolgain();
}
inline double VehicleControlParametersPBMsg::steeringcontrolgain() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.SteeringControlGain)
  return steeringcontrolgain_;
}
inline void VehicleControlParametersPBMsg::set_steeringcontrolgain(double value) {
  set_has_steeringcontrolgain();
  steeringcontrolgain_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.SteeringControlGain)
}

// optional double MaxLRHeadRotationDegrees = 15;
inline bool VehicleControlParametersPBMsg::has_maxlrheadrotationdegrees() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_maxlrheadrotationdegrees() {
  _has_bits_[0] |= 0x00004000u;
}
inline void VehicleControlParametersPBMsg::clear_has_maxlrheadrotationdegrees() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void VehicleControlParametersPBMsg::clear_maxlrheadrotationdegrees() {
  maxlrheadrotationdegrees_ = 0;
  clear_has_maxlrheadrotationdegrees();
}
inline double VehicleControlParametersPBMsg::maxlrheadrotationdegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.MaxLRHeadRotationDegrees)
  return maxlrheadrotationdegrees_;
}
inline void VehicleControlParametersPBMsg::set_maxlrheadrotationdegrees(double value) {
  set_has_maxlrheadrotationdegrees();
  maxlrheadrotationdegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.MaxLRHeadRotationDegrees)
}

// optional int32 HeadLeftRighLPFOrder = 16;
inline bool VehicleControlParametersPBMsg::has_headleftrighlpforder() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_headleftrighlpforder() {
  _has_bits_[0] |= 0x00008000u;
}
inline void VehicleControlParametersPBMsg::clear_has_headleftrighlpforder() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void VehicleControlParametersPBMsg::clear_headleftrighlpforder() {
  headleftrighlpforder_ = 0;
  clear_has_headleftrighlpforder();
}
inline ::google::protobuf::int32 VehicleControlParametersPBMsg::headleftrighlpforder() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.HeadLeftRighLPFOrder)
  return headleftrighlpforder_;
}
inline void VehicleControlParametersPBMsg::set_headleftrighlpforder(::google::protobuf::int32 value) {
  set_has_headleftrighlpforder();
  headleftrighlpforder_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.HeadLeftRighLPFOrder)
}

// optional double HeadLeftRighLPFCutoffFreqHz = 17;
inline bool VehicleControlParametersPBMsg::has_headleftrighlpfcutofffreqhz() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_headleftrighlpfcutofffreqhz() {
  _has_bits_[0] |= 0x00010000u;
}
inline void VehicleControlParametersPBMsg::clear_has_headleftrighlpfcutofffreqhz() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void VehicleControlParametersPBMsg::clear_headleftrighlpfcutofffreqhz() {
  headleftrighlpfcutofffreqhz_ = 0;
  clear_has_headleftrighlpfcutofffreqhz();
}
inline double VehicleControlParametersPBMsg::headleftrighlpfcutofffreqhz() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.HeadLeftRighLPFCutoffFreqHz)
  return headleftrighlpfcutofffreqhz_;
}
inline void VehicleControlParametersPBMsg::set_headleftrighlpfcutofffreqhz(double value) {
  set_has_headleftrighlpfcutofffreqhz();
  headleftrighlpfcutofffreqhz_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.HeadLeftRighLPFCutoffFreqHz)
}

// optional double SteeringAngleFeedback_Kp = 18;
inline bool VehicleControlParametersPBMsg::has_steeringanglefeedback_kp() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_steeringanglefeedback_kp() {
  _has_bits_[0] |= 0x00020000u;
}
inline void VehicleControlParametersPBMsg::clear_has_steeringanglefeedback_kp() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void VehicleControlParametersPBMsg::clear_steeringanglefeedback_kp() {
  steeringanglefeedback_kp_ = 0;
  clear_has_steeringanglefeedback_kp();
}
inline double VehicleControlParametersPBMsg::steeringanglefeedback_kp() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.SteeringAngleFeedback_Kp)
  return steeringanglefeedback_kp_;
}
inline void VehicleControlParametersPBMsg::set_steeringanglefeedback_kp(double value) {
  set_has_steeringanglefeedback_kp();
  steeringanglefeedback_kp_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.SteeringAngleFeedback_Kp)
}

// optional double SteeringAngleFeedback_Kd = 19;
inline bool VehicleControlParametersPBMsg::has_steeringanglefeedback_kd() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_steeringanglefeedback_kd() {
  _has_bits_[0] |= 0x00040000u;
}
inline void VehicleControlParametersPBMsg::clear_has_steeringanglefeedback_kd() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void VehicleControlParametersPBMsg::clear_steeringanglefeedback_kd() {
  steeringanglefeedback_kd_ = 0;
  clear_has_steeringanglefeedback_kd();
}
inline double VehicleControlParametersPBMsg::steeringanglefeedback_kd() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.SteeringAngleFeedback_Kd)
  return steeringanglefeedback_kd_;
}
inline void VehicleControlParametersPBMsg::set_steeringanglefeedback_kd(double value) {
  set_has_steeringanglefeedback_kd();
  steeringanglefeedback_kd_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.SteeringAngleFeedback_Kd)
}

// optional double SteeringAngleFeedback_Ki = 20;
inline bool VehicleControlParametersPBMsg::has_steeringanglefeedback_ki() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_steeringanglefeedback_ki() {
  _has_bits_[0] |= 0x00080000u;
}
inline void VehicleControlParametersPBMsg::clear_has_steeringanglefeedback_ki() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void VehicleControlParametersPBMsg::clear_steeringanglefeedback_ki() {
  steeringanglefeedback_ki_ = 0;
  clear_has_steeringanglefeedback_ki();
}
inline double VehicleControlParametersPBMsg::steeringanglefeedback_ki() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.SteeringAngleFeedback_Ki)
  return steeringanglefeedback_ki_;
}
inline void VehicleControlParametersPBMsg::set_steeringanglefeedback_ki(double value) {
  set_has_steeringanglefeedback_ki();
  steeringanglefeedback_ki_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.SteeringAngleFeedback_Ki)
}

// optional double SteeringBiasAngleDegrees = 21;
inline bool VehicleControlParametersPBMsg::has_steeringbiasangledegrees() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_steeringbiasangledegrees() {
  _has_bits_[0] |= 0x00100000u;
}
inline void VehicleControlParametersPBMsg::clear_has_steeringbiasangledegrees() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void VehicleControlParametersPBMsg::clear_steeringbiasangledegrees() {
  steeringbiasangledegrees_ = 0;
  clear_has_steeringbiasangledegrees();
}
inline double VehicleControlParametersPBMsg::steeringbiasangledegrees() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.SteeringBiasAngleDegrees)
  return steeringbiasangledegrees_;
}
inline void VehicleControlParametersPBMsg::set_steeringbiasangledegrees(double value) {
  set_has_steeringbiasangledegrees();
  steeringbiasangledegrees_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.SteeringBiasAngleDegrees)
}

// optional double RCSteeringGain = 22;
inline bool VehicleControlParametersPBMsg::has_rcsteeringgain() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_rcsteeringgain() {
  _has_bits_[0] |= 0x00200000u;
}
inline void VehicleControlParametersPBMsg::clear_has_rcsteeringgain() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void VehicleControlParametersPBMsg::clear_rcsteeringgain() {
  rcsteeringgain_ = 0;
  clear_has_rcsteeringgain();
}
inline double VehicleControlParametersPBMsg::rcsteeringgain() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.RCSteeringGain)
  return rcsteeringgain_;
}
inline void VehicleControlParametersPBMsg::set_rcsteeringgain(double value) {
  set_has_rcsteeringgain();
  rcsteeringgain_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.RCSteeringGain)
}

// optional double BCIGain = 23;
inline bool VehicleControlParametersPBMsg::has_bcigain() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void VehicleControlParametersPBMsg::set_has_bcigain() {
  _has_bits_[0] |= 0x00400000u;
}
inline void VehicleControlParametersPBMsg::clear_has_bcigain() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void VehicleControlParametersPBMsg::clear_bcigain() {
  bcigain_ = 0;
  clear_has_bcigain();
}
inline double VehicleControlParametersPBMsg::bcigain() const {
  // @@protoc_insertion_point(field_get:vision_messages.VehicleControlParametersPBMsg.BCIGain)
  return bcigain_;
}
inline void VehicleControlParametersPBMsg::set_bcigain(double value) {
  set_has_bcigain();
  bcigain_ = value;
  // @@protoc_insertion_point(field_set:vision_messages.VehicleControlParametersPBMsg.BCIGain)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace vision_messages

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::vision_messages::VisionResponsePBMsg_ResponseType_e> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::vision_messages::VisionResponsePBMsg_ResponseType_e>() {
  return ::vision_messages::VisionResponsePBMsg_ResponseType_e_descriptor();
}
template <> struct is_proto_enum< ::vision_messages::ImageCompressionControlPBMsg_VisionImageCompressionType_e> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::vision_messages::ImageCompressionControlPBMsg_VisionImageCompressionType_e>() {
  return ::vision_messages::ImageCompressionControlPBMsg_VisionImageCompressionType_e_descriptor();
}
template <> struct is_proto_enum< ::vision_messages::ImageLoggingControlPBMsg_VisionLoggingType_e> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::vision_messages::ImageLoggingControlPBMsg_VisionLoggingType_e>() {
  return ::vision_messages::ImageLoggingControlPBMsg_VisionLoggingType_e_descriptor();
}
template <> struct is_proto_enum< ::vision_messages::GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::vision_messages::GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e>() {
  return ::vision_messages::GeoCoordinateSystemSetupPBMsg_GeoCoordinateSystemConversionType_e_descriptor();
}
template <> struct is_proto_enum< ::vision_messages::VisionProcessingControlPBMsg_VisionProcessingModeEnum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::vision_messages::VisionProcessingControlPBMsg_VisionProcessingModeEnum>() {
  return ::vision_messages::VisionProcessingControlPBMsg_VisionProcessingModeEnum_descriptor();
}
template <> struct is_proto_enum< ::vision_messages::VisionProcessingControlPBMsg_TargetProcessingModeEnum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::vision_messages::VisionProcessingControlPBMsg_TargetProcessingModeEnum>() {
  return ::vision_messages::VisionProcessingControlPBMsg_TargetProcessingModeEnum_descriptor();
}
template <> struct is_proto_enum< ::vision_messages::VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::vision_messages::VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum>() {
  return ::vision_messages::VisionProcessingControlPBMsg_GPSDeniedProcessingModeEnum_descriptor();
}
template <> struct is_proto_enum< ::vision_messages::CameraCalControlPBMsg_CameraCalibrationType_e> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::vision_messages::CameraCalControlPBMsg_CameraCalibrationType_e>() {
  return ::vision_messages::CameraCalControlPBMsg_CameraCalibrationType_e_descriptor();
}
template <> struct is_proto_enum< ::vision_messages::CameraCalControlPBMsg_CameraCalCmd_e> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::vision_messages::CameraCalControlPBMsg_CameraCalCmd_e>() {
  return ::vision_messages::CameraCalControlPBMsg_CameraCalCmd_e_descriptor();
}
template <> struct is_proto_enum< ::vision_messages::CameraCalStatusPBMsg_CameraCalState_e> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::vision_messages::CameraCalStatusPBMsg_CameraCalState_e>() {
  return ::vision_messages::CameraCalStatusPBMsg_CameraCalState_e_descriptor();
}
template <> struct is_proto_enum< ::vision_messages::ImageCaptureSource_e> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::vision_messages::ImageCaptureSource_e>() {
  return ::vision_messages::ImageCaptureSource_e_descriptor();
}
template <> struct is_proto_enum< ::vision_messages::CPImageCaptureFormat_e> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::vision_messages::CPImageCaptureFormat_e>() {
  return ::vision_messages::CPImageCaptureFormat_e_descriptor();
}
template <> struct is_proto_enum< ::vision_messages::ImageCaptureError_e> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::vision_messages::ImageCaptureError_e>() {
  return ::vision_messages::ImageCaptureError_e_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_vision_5fmessages_2eproto__INCLUDED
