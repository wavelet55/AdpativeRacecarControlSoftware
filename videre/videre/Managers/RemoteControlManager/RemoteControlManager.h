/* ****************************************************************
 * Athr(s): Harry Direen PhD,
 * DireenTech Inc.  (www.DireenTech.com)
 * Date: July. 2018
 *
 * Racecar Remote Control Input from Wireless Joystick Controller.
 * Control input is an RS-232 data string coming through an Arduino
 * interface.  This system only receives message from the controller.
 *******************************************************************/

#ifndef VIDERE_DEV_REMOTOCONTROLMANAGER_H
#define VIDERE_DEV_REMOTOCONTROLMANAGER_H

#include <iostream>
#include <string>
#include <memory>
#include <vector>
#include <sstream>
#include <unordered_map>
#include <RabitManager.h>
#include <RabitMessageQueue.h>
#include <ManagerStatusMessage.h>
#include <ManagerControlMessage.h>
#include <ManagerStats.h>
#include <ManagerStatusMessage.h>
#include <opencv2/core.hpp>
#include "global_defines.h"
#include "all_manager_message.h"
#include "../../Utils/config_data.h"
#include "../../Utils/logger.h"
#include "../../Utils/timing.h"
#include "RS232Comm.h"
#include "SerialCommMessage.h"
#include "RemoteControlRxMessageParser.h"

// Manually include this file that has been autogenerated
#include "RemoteControlManagerWSRMgr.h"

using namespace Rabit;

namespace videre
{

    class RemoteControlManager : public RemoteControlManagerWSRMgr
    {

    private:
        //Logging System
        log4cxx::LoggerPtr log4cpp_;

        std::shared_ptr<ConfigData> _config_sptr;

        dtiRS232Comm::RS232Comm _rs232Comm;

        RemoteControlRxMessageParser _RxMessageParser;


    public:
        RemoteControlManager(std::string name, std::shared_ptr<ConfigData> config);

        virtual void Initialize();

        bool openCommPort(std::string commPort, int baudRate, bool logResults = true);

        void closeCommPort();

        virtual void ExecuteUnitOfWork() final;

        virtual void Shutdown() final;

    };

}


#endif //VIDERE_DEV_ROBOTARMMANAGER_H
