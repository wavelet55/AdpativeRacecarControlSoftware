/* ****************************************************************
 * Athr(s): Harry Direen PhD,
 * DireenTech Inc.  (www.DireenTech.com)
 * Date: Sept. 2021
 *
 * DTX IMU Interface
 *******************************************************************/

#ifndef VIDERE_DEV_DTX_IMU_INTERFACEMANAGER_H
#define VIDERE_DEV_DTX_IMU_INTERFACEMANAGER_H

#include <iostream>
#include <string>
#include <memory>
#include <vector>
#include <sstream>
#include <unordered_map>
#include <RabitManager.h>
#include <RabitMessageQueue.h>
#include <ManagerStatusMessage.h>
#include <ManagerControlMessage.h>
#include <ManagerStats.h>
#include <ManagerStatusMessage.h>
#include "global_defines.h"
#include "all_manager_message.h"
#include "config_data.h"
#include "logger.h"
#include "timing.h"
#include "RS232Comm.h"
#include "SerialCommMessage.h"
#include "DTX_IMU_RxMessageParser.h"

// Manually include this file that has been autogenerated
#include "DTX_IMU_InterfaceManagerWSRMgr.h"

using namespace Rabit;

namespace videre
{

    class DTX_IMU_InterfaceManager  : public DTX_IMU_InterfaceManagerWSRMgr
    {

    private:
        //Logging System
        log4cxx::LoggerPtr log4cpp_;

        enum UartConnectionState_e{ CONNECTING = 0, CONNECTED};

        UartConnectionState_e _uartConnectionState = CONNECTING;

        std::string _commPort = "None";

        std::shared_ptr<ConfigData> _config_sptr;

        std::unique_ptr<dtiRS232Comm::RS232Comm> _rs232Comm_uptr = nullptr;

        DTX_IMU_RxMessageParser _dtxRxMessageParser;

        RabitStopWatch _txMsgStopwatch;

        bool _rs232CommStarted = false;

        static const int MaxTxMsgSize = 1024;
        char _txMsgSerBuf[MaxTxMsgSize];

        std::shared_ptr<RabitQueue> _mgrIncomingMessageQueue;

    public:
        DTX_IMU_InterfaceManager(std::string name, std::shared_ptr<ConfigData> config);

        virtual void Initialize();

        virtual void Startup() final;

        virtual void ExecuteUnitOfWork() final;

        virtual void Shutdown() final;

    private:

        UartConnectionState_e GetNewRS232Comm();

        bool checkDTXControlBdConnection();

        UartConnectionState_e ProcessMessagesToBoard();

        double _timeLastMsgReceivedSec = 0.0;

    };
}

#endif //GROUNDFORCE360_DEV_FORCEPLATEINTERFACEMANAGER_H
